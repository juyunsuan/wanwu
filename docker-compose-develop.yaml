services:
  nginx:
    restart: always
    image: ${WANWU_NGINX_IMAGE}
    container_name: ${WANWU_NGINX_HOST}
    networks:
      - ${WANWU_DOCKER_NETWORK}
    ports:
      - 8081:8081
    volumes:
      - ./configs/middleware/nginx/conf.d:/etc/nginx/conf.d
      - ${WANWU_PROJECT_DIR}/nginx/html:/usr/share/nginx/html
      - ${WANWU_PROJECT_DIR}/nginx/log:/var/log/nginx

  # ------ microservice ------
  bff-service:
    restart: always
    image: ${WANWU_GO_IMAGE}
    container_name: bff-service
    networks:
      - ${WANWU_DOCKER_NETWORK}
    ports:
      - 6668:6668
    volumes:
      - /etc/localtime:/etc/localtime
      - ./bin/${WANWU_ARCH}/bff-service:/app/bin/bff-service
      - ./configs/microservice/bff-service/configs:/app/configs/microservice/bff-service/configs
      - ./configs/microservice/bff-service/static:/app/configs/microservice/bff-service/static
      - ${WANWU_PROJECT_DIR}/bff-service/cache:/app/cache
      - ${WANWU_PROJECT_DIR}/bff-service/log:/app/log
      - ${WANWU_PROJECT_DIR}/bff-service/tmp:/app/tmp
    environment:
      CUSTOM_INFO_VERSION: ${WANWU_VERSION}
      SERVER_WEB_BASE_URL: ${WANWU_WEB_BASE_URL}
      SERVER_API_BASE_URL: ${WANWU_API_BASE_URL}
      SERVER_APP_OPEN_BASE_URL: ${WANWU_APP_OPEN_BASE_URL}
      MINIO_ENDPOINT: ${WANWU_MINIO_ENDPOINT}
      MINIO_USER: ${WANWU_MINIO_USER}
      MINIO_PASSWORD: ${WANWU_MINIO_PASSWORD}
      JWT_SIGNING_KEY: ${WANUW_BFF_JWT_SIGNING_KEY}
      CUSTOM_INFO_REGISTER_BY_EMAIL: ${WANWU_BFF_REGISTER_BY_EMAIL}
      CUSTOM_INFO_RESET_PASSWORD_BY_EMAIL: ${WANWU_BFF_RESET_PASSWORD_BY_EMAIL}
    working_dir: /app
    command: ./bin/bff-service

  iam-service:
    restart: always
    image: ${WANWU_GO_IMAGE}
    container_name: iam-service
    networks:
      - ${WANWU_DOCKER_NETWORK}
    ports:
      - 8888:8888
    volumes:
      - /etc/localtime:/etc/localtime
      - ./bin/${WANWU_ARCH}/iam-service:/app/bin/iam-service
      - ./configs/microservice/iam-service/configs:/app/configs/microservice/iam-service/configs
      - ${WANWU_PROJECT_DIR}/iam-service/log:/app/log
    environment:
      DB_NAME: ${WANWU_DB_NAME}
      DB_MYSQL_ADDRESS: ${WANWU_MYSQL_ADDRESS}
      DB_MYSQL_PASSWORD: ${WANWU_MYSQL_PASSWORD}
      REDIS_HOST: ${WANWU_REDIS_HOST}
      REDIS_PORT: ${WANWU_REDIS_PORT}
      REDIS_PASSWORD: ${WANWU_REDIS_PASSWORD}
      SMTP_HOST: ${WANWU_IAM_SMTP_HOST}
      SMTP_PORT: ${WANWU_IAM_SMTP_PORT}
      SMTP_USERNAME: ${WANWU_IAM_SMTP_USERNAME}
      SMTP_PASSWORD: ${WANWU_IAM_SMTP_PASSWORD}
      SMTP_DEFAULT_FROM_EMAIL: ${WANWU_IAM_SMTP_DEFAULT_FROM_EMAIL}
      SMTP_DEFAULT_FROM_NAME: ${WANWU_IAM_SMTP_DEFAULT_FROM_NAME}
    working_dir: /app
    command: ./bin/iam-service

  app-service:
    restart: always
    image: ${WANWU_GO_IMAGE}
    container_name: app-service
    networks:
      - ${WANWU_DOCKER_NETWORK}
    ports:
      - 9988:9988
    volumes:
      - /etc/localtime:/etc/localtime
      - ./bin/${WANWU_ARCH}/app-service:/app/bin/app-service
      - ./configs/microservice/app-service/configs:/app/configs/microservice/app-service/configs
      - ${WANWU_PROJECT_DIR}/app-service/log:/app/log
    environment:
      DB_NAME: ${WANWU_DB_NAME}
      DB_MYSQL_ADDRESS: ${WANWU_MYSQL_ADDRESS}
      DB_MYSQL_PASSWORD: ${WANWU_MYSQL_PASSWORD}
      REDIS_HOST: ${WANWU_REDIS_HOST}
      REDIS_PORT: ${WANWU_REDIS_PORT}
      REDIS_PASSWORD: ${WANWU_REDIS_PASSWORD}
      MINIO_ENDPOINT: ${WANWU_MINIO_ENDPOINT}
      MINIO_USER: ${WANWU_MINIO_USER}
      MINIO_PASSWORD: ${WANWU_MINIO_PASSWORD}
    working_dir: /app
    command: ./bin/app-service

  model-service:
    restart: always
    image: ${WANWU_GO_IMAGE}
    container_name: model-service
    networks:
      - ${WANWU_DOCKER_NETWORK}
    ports:
      - 8989:8989
    volumes:
      - /etc/localtime:/etc/localtime
      - ./bin/${WANWU_ARCH}/model-service:/app/bin/model-service
      - ./configs/microservice/model-service/configs:/app/configs/microservice/model-service/configs
      - ${WANWU_PROJECT_DIR}/model-service/log:/app/log
    environment:
      DB_NAME: ${WANWU_DB_NAME}
      DB_MYSQL_ADDRESS: ${WANWU_MYSQL_ADDRESS}
      DB_MYSQL_PASSWORD: ${WANWU_MYSQL_PASSWORD}
      REDIS_HOST: ${WANWU_REDIS_HOST}
      REDIS_PORT: ${WANWU_REDIS_PORT}
      REDIS_PASSWORD: ${WANWU_REDIS_PASSWORD}
    working_dir: /app
    command: ./bin/model-service

  mcp-service:
    restart: always
    image: ${WANWU_GO_IMAGE}
    container_name: mcp-service
    networks:
      - ${WANWU_DOCKER_NETWORK}
    ports:
      - 9898:9898
    volumes:
      - /etc/localtime:/etc/localtime
      - ./bin/${WANWU_ARCH}/mcp-service:/app/bin/mcp-service
      - ./configs/microservice/mcp-service/configs:/app/configs/microservice/mcp-service/configs
      - ${WANWU_PROJECT_DIR}/mcp-service/log:/app/log
    environment:
      DB_NAME: ${WANWU_DB_NAME}
      DB_MYSQL_ADDRESS: ${WANWU_MYSQL_ADDRESS}
      DB_MYSQL_PASSWORD: ${WANWU_MYSQL_PASSWORD}
      REDIS_HOST: ${WANWU_REDIS_HOST}
      REDIS_PORT: ${WANWU_REDIS_PORT}
      REDIS_PASSWORD: ${WANWU_REDIS_PASSWORD}
    working_dir: /app
    command: ./bin/mcp-service

  operate-service:
    restart: always
    image: ${WANWU_GO_IMAGE}
    container_name: operate-service
    networks:
      - ${WANWU_DOCKER_NETWORK}
    ports:
      - 9797:9797
    volumes:
      - /etc/localtime:/etc/localtime
      - ./bin/${WANWU_ARCH}/operate-service:/app/bin/operate-service
      - ${WANWU_PROJECT_DIR}/operate-service/log:/app/log
      - ./configs/microservice/operate-service/configs:/app/configs/microservice/operate-service/configs
    environment:
      DB_NAME: ${WANWU_DB_NAME}
      DB_MYSQL_ADDRESS: ${WANWU_MYSQL_ADDRESS}
      DB_MYSQL_PASSWORD: ${WANWU_MYSQL_PASSWORD}
    working_dir: /app
    command: ./bin/operate-service

  rag-service:
    restart: always
    image: ${WANWU_GO_IMAGE}
    container_name: rag-service
    networks:
      - ${WANWU_DOCKER_NETWORK}
    ports:
      - 9640:9640
    volumes:
      - /etc/localtime:/etc/localtime
      - ./bin/${WANWU_ARCH}/rag-service:/app/bin/rag-service
      - ./configs/microservice/rag-service/configs:/app/configs/microservice/rag-service/configs
      - ${WANWU_PROJECT_DIR}/rag-service/log:/app/log
    environment:
      DB_NAME: ${WANWU_DB_NAME}
      DB_MYSQL_ADDRESS: ${WANWU_MYSQL_ADDRESS}
      DB_MYSQL_PASSWORD: ${WANWU_MYSQL_PASSWORD}
      REDIS_HOST: ${WANWU_REDIS_HOST}
      REDIS_PORT: ${WANWU_REDIS_PORT}
      REDIS_PASSWORD: ${WANWU_REDIS_PASSWORD}
    working_dir: /app
    command: ./bin/rag-service

  knowledge-service:
    restart: always
    image: ${WANWU_GO_IMAGE}
    container_name: knowledge-service
    networks:
      - ${WANWU_DOCKER_NETWORK}
    ports:
      - 8889:8889
    volumes:
      - /etc/localtime:/etc/localtime
      - ./bin/${WANWU_ARCH}/knowledge-service:/app/bin/knowledge-service
      - ./configs/microservice/knowledge-service/configs:/app/configs/microservice/knowledge-service/configs
      - ${WANWU_PROJECT_DIR}/knowledge-service/log:/app/log
      - ${WANWU_PROJECT_DIR}/knowledge-service/static:/app/static
    environment:
      DB_NAME: ${WANWU_DB_NAME}
      DB_MYSQL_ADDRESS: ${WANWU_MYSQL_ADDRESS}
      DB_MYSQL_PASSWORD: ${WANWU_MYSQL_PASSWORD}
      KAFKA_ADDR: ${WANWU_KAFKA_ADDRESS}
      KAFKA_USER: ${WANWU_KAFKA_USER}
      KAFKA_PASSWORD: ${WANWU_KAFKA_PASSWORD}
      MINIO_ENDPOINT: ${WANWU_MINIO_ENDPOINT}
      MINIO_USER: ${WANWU_MINIO_USER}
      MINIO_PASSWORD: ${WANWU_MINIO_PASSWORD}
    working_dir: /app
    command: ./bin/knowledge-service

  assistant-service:
    restart: always
    image: ${WANWU_GO_IMAGE}
    container_name: assistant-service
    networks:
      - ${WANWU_DOCKER_NETWORK}
    ports:
      - 8890:8890
    volumes:
      - /etc/localtime:/etc/localtime
      - ./bin/${WANWU_ARCH}/assistant-service:/app/bin/assistant-service
      - ./configs/microservice/assistant-service/configs:/app/configs/microservice/assistant-service/configs
      - ${WANWU_PROJECT_DIR}/assistant-service/log:/app/log
    environment:
      DB_NAME: ${WANWU_DB_NAME}
      DB_MYSQL_ADDRESS: ${WANWU_MYSQL_ADDRESS}
      DB_MYSQL_PASSWORD: ${WANWU_MYSQL_PASSWORD}
      REDIS_HOST: ${WANWU_REDIS_HOST}
      REDIS_PORT: ${WANWU_REDIS_PORT}
      REDIS_PASSWORD: ${WANWU_REDIS_PASSWORD}
      MINIO_ENDPOINT: ${WANWU_MINIO_ENDPOINT}
      MINIO_USER: ${WANWU_MINIO_USER}
      MINIO_PASSWORD: ${WANWU_MINIO_PASSWORD}
      MINIO_DOWNLOAD_URL: ${WANWU_WEB_BASE_URL}/minio/download/api/
      ES_ADDRESS: ${WANWU_ELASTIC_ADDRESS}
      ES_USERNAME: ${WANWU_ELASTIC_USER}
      ES_PASSWORD: ${WANWU_ELASTIC_PASSWORD}
    working_dir: /app
    command: ./bin/assistant-service
  
  workflow:
    restart: always
    image: ${WANWU_WORKFLOW_BASE_IMAGE}
    container_name: workflow-wanwu
    networks:
      - ${WANWU_DOCKER_NETWORK}
    ports:
      - 8998:8998
      - 8999:8999
    volumes:
      - /etc/localtime:/etc/localtime
      - ../wanwu-workflow/wanwu-backend/bin/${WANWU_ARCH}/workflow-wanwu:/app/bin/workflow-wanwu
      - ../wanwu-workflow/wanwu-backend/configs:/app/configs
      - ../wanwu-workflow/backend/infra/impl/document/parser/builtin/parse_pdf.py:/app/parse_pdf.py
      - ../wanwu-workflow/backend/infra/impl/document/parser/builtin/parse_docx.py:/app/parse_docx.py
      - ../wanwu-workflow/backend/infra/impl/coderunner/script/sandbox.py:/app/sandbox.py
      - ${WANWU_PROJECT_DIR}/workflow-wanwu/log:/app/log
    environment:
      DB_NAME: ${WANWU_DB_NAME}
      DB_MYSQL_ADDRESS: ${WANWU_MYSQL_ADDRESS}
      DB_MYSQL_PASSWORD: ${WANWU_MYSQL_PASSWORD}
      REDIS_HOST: ${WANWU_REDIS_HOST}
      REDIS_PORT: ${WANWU_REDIS_PORT}
      REDIS_PASSWORD: ${WANWU_REDIS_PASSWORD}
      MINIO_ENDPOINT: ${WANWU_MINIO_ENDPOINT}
      MINIO_USER: ${WANWU_MINIO_USER}
      MINIO_PASSWORD: ${WANWU_MINIO_PASSWORD}
      # --- 以下env用于workflow-wanwu适配 ---
      WANWU_EXTERNAL_ENDPOINT: ${WANWU_EXTERNAL_ENDPOINT}
      WANWU_EXTERNAL_SCHEME: ${WANWU_EXTERNAL_SCHEME}
      WANWU_CALLBACK_LLM_BASE_URL: http://bff-service:6668/callback/v1/model
      WANWU_CALLBACK_WORKFLOW_LIST_URL: http://bff-service:6668/callback/v1/workflow/list
      WANWU_KNOWLEDGE_SEARCH_URL: http://rag-wanwu:8681/rag/search-knowledge-base
      WANWU_FILE_GENERATOR_URL: http://agent-wanwu:15002/upload
      WANWU_FILE_PARSER_URL: http://rag-wanwu:8681/rag/doc_parser
      # 用于nginx 8081代理workflow-wanwu:8998 minio presign相关api
      WANWU_MINIO_PROXY_ENDPOINT: ${WANWU_EXTERNAL_ENDPOINT}
      WANWU_MINIO_PROXY_PREFIX: /workflow/minio/presign
      # 用于workflow-wanwu:8998代理minio-wanwu:9000
      MINIO_API_HOST: http://${WANWU_MINIO_ENDPOINT}
      MINIO_PROXY_ENDPOINT: :8998
      # 用于code节点运行
      CODE_RUNNER_TYPE: sandbox
      CODE_RUNNER_ALLOW_ENV:
      CODE_RUNNER_ALLOW_READ:
      CODE_RUNNER_ALLOW_WRITE:
      CODE_RUNNER_ALLOW_RUN: "python"
      CODE_RUNNER_ALLOW_NET: ${WANWU_EXTERNAL_IP},jsr.io,cdn.jsdelivr.net
      CODE_RUNNER_ALLOW_FFI:
      CODE_RUNNER_NODE_MODULES_DIR:
      CODE_RUNNER_TIMEOUT_SECONDS:
      CODE_RUNNER_MEMORY_LIMIT_MB:
    working_dir: /app
    command: ./bin/workflow-wanwu

  rag:
    restart: always
    image: ${WANWU_RAG_BASE_IMAGE}
    container_name: rag-wanwu
    networks:
      - ${WANWU_DOCKER_NETWORK}
    ports:
      - 8613:8613
      - 8681:8681
      - 10891:10891
      - 15000:15000
    volumes:
      - ./rag/rag_open_source:/model_extend
      - ${WANWU_PROJECT_DIR}/rag-wanwu/rag_core/logs:/model_extend/rag_core/logs
      - ${WANWU_PROJECT_DIR}/rag-wanwu/rag_es_server_unify/logs:/model_extend/rag_es_server_unify/logs
    environment:
      MINIO_ADDRESS: ${WANWU_MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${WANWU_MINIO_USER}
      MINIO_SECRET_KEY: ${WANWU_MINIO_PASSWORD}
      KAFKA_BOOTSTRAP_SERVERS: ${WANWU_KAFKA_ADDRESS}
      KAFKA_SASL_PLAIN_USERNAME: ${WANWU_KAFKA_USER}
      KAFKA_SASL_PLAIN_PASSWORD: ${WANWU_KAFKA_PASSWORD}
      ES_HOSTS: https://${WANWU_ELASTIC_ADDRESS}
      ES_USER: ${WANWU_ELASTIC_USER}
      ES_PASSWORD: ${WANWU_ELASTIC_PASSWORD}
      REDIS_HOST: ${WANWU_REDIS_HOST}
      REDIS_PORT: ${WANWU_REDIS_PORT}
      REDIS_PASSWD: ${WANWU_REDIS_PASSWORD}
      # 用于rag调用外部API的env
      GET_KB_ID_URL: http://bff-service:6668/v1/api/category/info
      KAFKA_MQ_REL_URL: http://bff-service:6668/v1/api/docstatus
      KAFKA_DOC_STATUS_INIT_URL: http://bff-service:6668/v1/api/doc_status_init
      MODEL_PROVIDER_URL: http://bff-service:6668
      REPLACE_MINIO_DOWNLOAD_URL: ${WANWU_WEB_BASE_URL}/minio/download/api/
    command: /model_extend/start.sh

  agent:
    restart: always
    image: ${WANWU_AGENT_BASE_IMAGE}
    container_name: agent-wanwu
    networks:
      - ${WANWU_DOCKER_NETWORK}
    ports:
      - 7258:7258
      - 1991:1991
      - 1992:1992
      - 15001:15001
      - 15002:15002
      - 15003:15003
    volumes:
      - ./agent/agent_open_source:/agent/agent_open_source
      - ${WANWU_PROJECT_DIR}/agent-wanwu/agent_open_source/logs:/agent/agent_open_source/logs
      - ${WANWU_PROJECT_DIR}/agent-wanwu/agent_open_source/minio/logs:/agent/agent_open_source/minio/logs
      - ${WANWU_PROJECT_DIR}/agent-wanwu/agent_open_source/agent_plugin/logs:/agent/agent_open_source/agent_plugin/logs
    environment:
      MINIO_ADDRESS: ${WANWU_MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${WANWU_MINIO_USER}
      MINIO_SECRET_KEY: ${WANWU_MINIO_PASSWORD}
      # 用于agent调用外部接口的API前缀
      URL_MODEL: http://bff-service
      URL_MINIO: http://bff-service
      URL_RAG: http://rag-wanwu
    working_dir: /agent/agent_open_source
    command: bash -c "./start_all.sh && tail -f /dev/null"

  # agentscope:
  #   restart: always
  #   image: ${WANWU_AGENTSCOPE_BASE_IMAGE}
  #   container_name: agentscope-wanwu
  #   networks:
  #     - ${WANWU_DOCKER_NETWORK}
  #   ports:
  #     - 6672:6672
  #   volumes:
  #     - ../wanwu-agentscope:/agentscope
  #     - ./configs/microservice/agentscope/configs/config.yaml:/agentscope/src/agentscope/aibigmodel_workflow/config.yaml
  #     - ${WANWU_PROJECT_DIR}/agentscope/logs:/agentscope/logs
  #   environment:
  #     DB_NAME: ${WANWU_DB_NAME}
  #     DATABASE_HOST: ${WANWU_MYSQL_HOST}
  #     DATABASE_PORT: ${WANWU_MYSQL_PORT}
  #     DATABASE_PASSWORD: ${WANWU_MYSQL_PASSWORD}
  #     REDIS_HOST: ${WANWU_REDIS_HOST}
  #     REDIS_PORT: ${WANWU_REDIS_PORT}
  #     REDIS_PASSWORD: ${WANWU_REDIS_PASSWORD}
  #   working_dir: /agentscope
  #   command: python3 /agentscope/src/agentscope/aibigmodel_workflow/app.py

  # ------ middleware ------
  kibana:
    restart: always
    image: ${WANWU_KIBANA_IMAGE}
    container_name: ${WANWU_KIBANA_HOST}
    networks:
      - ${WANWU_DOCKER_NETWORK}
    ports:
      - 5601:5601
    volumes:
      - wanwu_es_certs:/usr/share/kibana/config/certs
      # - wanwu_kibana_data:/usr/share/kibana/data
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://es:9200
      - ELASTICSEARCH_USERNAME=${WANWU_KIBANA_USERNAME}
      - ELASTICSEARCH_PASSWORD=${WANWU_KIBANA_PASSWORD}
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    mem_limit: 4294967296 # 4GB
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 15s
      timeout: 5s
      retries: 99
      start_period: 10s

networks:
  wanwu-net:
    external: true

volumes:
  wanwu_es_certs:
  # wanwu_kibana_data: