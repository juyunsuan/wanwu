// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.29.4
// source: proto/err-code/err-code.proto

package err_code

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Code int32

const (
	Code_OK Code = 0
	// --- bff-service ---
	// [110000, 119999]
	Code_BFFGeneral              Code = 110000 // 通用错误
	Code_BFFInvalidArg           Code = 110001 // 参数错误
	Code_BFFJWT                  Code = 110002 // JWT错误
	Code_BFFAuth                 Code = 110003 // Auth错误
	Code_BFFSensitiveWordCheck   Code = 110005 // 敏感词校验错误
	Code_BFFRegisterDisable      Code = 110006 // 用户注册禁用
	Code_BFFResetPasswordDisable Code = 110007 // 用户忘记密码禁用
	Code_BFFLoginDisable         Code = 110008 // 邮箱登录禁用
	Code_BFFSingleLoginDisable   Code = 110009 // 单因子登录禁用
	// --- iam-service ---
	// [120000, 129999]
	Code_IAMGeneral  Code = 120000 // 通用错误
	Code_IAMInternal Code = 120001 // 内部错误
	Code_IAMCaptcha  Code = 120002 // 验证码错误
	Code_IAMLogin    Code = 120003 // 登录相关错误
	Code_IAMRegister Code = 120004 // 注册相关错误
	Code_IAMOrg      Code = 120011 // 组织相关错误
	Code_IAMRole     Code = 120021 // 角色相关错误
	Code_IAMUser     Code = 120031 // 用户相关错误
	// --- perm-service ---
	// [130000, 139999]
	Code_PermGeneral     Code = 130000 // 通用错误
	Code_PermRBAC        Code = 130001 // 权限校验错误
	Code_PermRBACReLogin Code = 130002 // 权限校验错误(需要重新登录)
	// --- knowledge-service ---
	// [140000, 149999]
	Code_KnowledgeGeneral                      Code = 140000 // 系统异常，请稍后重试
	Code_KnowledgeBaseCreateFailed             Code = 141001 // 新建知识库失败，请稍后重试
	Code_KnowledgeBaseDeleteFailed             Code = 141002 // 删除知识库失败，请稍后重试
	Code_KnowledgeBaseUpdateFailed             Code = 141003 // 修改知识库失败，请稍后重试
	Code_KnowledgeBaseFetchFailed              Code = 141004 // 获取知识库失败，请稍后重试
	Code_KnowledgeBaseAccessDenied             Code = 141005 // 没有操作该知识库的权限
	Code_KnowledgeBaseDeleteDuringUpload       Code = 141006 // 知识库正在上传文档，不可删除
	Code_KnowledgeBaseDeleteDuringParse        Code = 141007 // 知识库正在解析文档，不可删除
	Code_KnowledgeBaseDuplicateName            Code = 141008 // 已存在同名知识库
	Code_KnowledgeBaseSelectFailed             Code = 141009 // 查询知识库列表失败，请稍后重试
	Code_KnowledgeBaseHitFailed                Code = 141010 // 命中测试失败，请稍后重试
	Code_KnowledgeDocDeleteDuringParse         Code = 142001 // 文档正在解析文档，不可删除
	Code_KnowledgeDocDeleteFailed              Code = 142002 // 文档删除失败，请稍后重试
	Code_KnowledgeDocSegmentStatusUpdateFail   Code = 142003 // 修改文档分段状态失败，请稍后重试
	Code_KnowledgeDocImportFail                Code = 142004 // 文档导入失败，请稍后重试
	Code_KnowledgeDocSplitFailed               Code = 142005 // 文档分片查询失败，请稍后重试
	Code_KnowledgeDocUpdateStatusFailed        Code = 142006 // 更新文档状态失败，请稍后重试
	Code_KnowledgeDocImportUrlFailed           Code = 142007 // 获取上传文档失败，请稍后重试
	Code_KnowledgeDocUpdateMetaFailed          Code = 142008 // 更新文档元数据失败，请稍后重试
	Code_KnowledgeDocUpdateMetaStatusFailed    Code = 142009 // 非处理完成文档无法更新元数据，请稍后重试
	Code_KnowledgeDocSegmentFileCSVTypeFail    Code = 142010 // 上传文档必须是csv，请修改后重试
	Code_KnowledgeDocUpdateMetaSameKeyFailed   Code = 142011 // 更新文档元数据失败，已存在重复key，请稍后重试
	Code_KnowledgeTagCreateFailed              Code = 143001 // 新建知识库标签失败，请稍后重试
	Code_KnowledgeTagDeleteFailed              Code = 143002 // 删除知识库标签失败，请稍后重试
	Code_KnowledgeTagUpdateFailed              Code = 143003 // 修改知识库标签失败，请稍后重试
	Code_KnowledgeTagDuplicateName             Code = 143004 // 已存在同名知识库标签
	Code_KnowledgeTagSelectFailed              Code = 143005 // 查询知识库标签列表失败，请稍后重试
	Code_KnowledgeTagBindFailed                Code = 143006 // 知识库标签设置失败，请稍后重试
	Code_KnowledgeTagUnbindFailed              Code = 143007 // 知识库标签取消失败，请稍后重试
	Code_KnowledgeTagAccessDenied              Code = 143008 // 没有操作该知识库标签的权限
	Code_KnowledgeKeywordsCreateFailed         Code = 144001 // 新建关键词失败，请稍后重试
	Code_KnowledgeKeywordsDeleteFailed         Code = 144002 // 删除关键词失败，请稍后重试
	Code_KnowledgeKeywordsUpdateFailed         Code = 144003 // 修改关键词失败，请稍后重试
	Code_KnowledgeKeywordsListFailed           Code = 144004 // 查询关键词列表失败，请稍后重试
	Code_KnowledgeKeywordsInfoFailed           Code = 144005 // 查询关键词详情失败，请稍后重试
	Code_KnowledgeKeywordsRepeated             Code = 144006 // 关键词在知识库中已存在，请勿重复添加
	Code_KnowledgeSplitterCreateFailed         Code = 145001 // 新建知识库分隔符失败，请稍后重试
	Code_KnowledgeSplitterDeleteFailed         Code = 145002 // 删除知识库分隔符失败，请稍后重试
	Code_KnowledgeSplitterUpdateFailed         Code = 145003 // 修改知识库分隔符失败，请稍后重试
	Code_KnowledgeSplitterDuplicateName        Code = 145004 // 已存在同名知识库分隔符
	Code_KnowledgeSplitterSelectFailed         Code = 145005 // 查询知识库标分隔符表失败，请稍后重试
	Code_KnowledgeSplitterAccessDenied         Code = 145008 // 没有操作该知识库分隔符的权限
	Code_KnowledgeDocSegmentUpdateLabelsFailed Code = 145009 // 更新文档切片标签失败，请稍后重试
	Code_KnowledgeDocSegmentCreateFailed       Code = 145010 // 新增文档分段失败，请稍后重试
	Code_KnowledgeDocSegmentExceedMaxSize      Code = 145011 // 分段长度超过最大值
	Code_KnowledgeDocSegmentUpdateFailed       Code = 145012 // 更新文档分段失败，请稍后重试
	Code_KnowledgeDocSegmentDeleteFailed       Code = 145013 // 删除文档分段失败，请稍后重试
	Code_KnowledgeMetaFetchFailed              Code = 145014 // 查询知识库元数据失败，请稍后重试
	Code_KnowledgeMetaCreateFailed             Code = 145015 // 新增知识库元数据失败，请稍后重试
	Code_KnowledgeMetaUpdateFailed             Code = 145016 // 更新知识库元数据失败，请稍后重试
	Code_KnowledgeMetaDeleteFailed             Code = 145017 // 删除知识库元数据失败，请稍后重试
	Code_KnowledgeMetaDuplicateKey             Code = 145018 // 已存在同名元数据key
	Code_KnowledgeInvalidArguments             Code = 145019 // 非法参数
	Code_KnowledgeDocSegmentEmpty              Code = 145020 // 文档分段内容为空
	Code_KnowledgeMetaUpdatePartialSuccess     Code = 145021 // 部分元数据更新成功
	// --- rag-service ---
	// [150000, 159999]
	Code_RagGeneral      Code = 150000 // 通用错误
	Code_RagRole         Code = 150001 // 角色权限错误
	Code_RagInfoNotExist Code = 150002 // rag信息不存在
	Code_RagDeleteErr    Code = 150003 // 删除rag错误
	Code_RagGetErr       Code = 150004 // 获取rag错误
	Code_RagListErr      Code = 150005 // 获取rag列表错误
	Code_RagCreateErr    Code = 150006 // rag创建错误
	Code_RagUpdateErr    Code = 150007 // rag更新错误
	Code_RagChatErr      Code = 150008 // rag流式传输问答错误
	// --- assistant-service ---
	// [160000, 169999]
	Code_AssistantGeneral         Code = 160000 // 通用错误
	Code_AssistantErr             Code = 160001 // 智能体相关错误
	Code_AssistantActionErr       Code = 160002 // 智能体action相关错误
	Code_AssistantWorkflowErr     Code = 160003 // 智能体workflow相关错误
	Code_AssistantConversationErr Code = 160004 // 智能体对话相关错误
	Code_AssistantMCPErr          Code = 160005 // 智能体MCP相关错误
	Code_AssistantCustomErr       Code = 160006 // 智能体自定义工具相关错误
	// --- workflow-service ---
	// [210000, 219999]
	Code_WorkflowGeneral Code = 210000 // 通用错误
	// --- model-service ---
	// [250000, 259999]
	Code_ModelGeneral           Code = 250000 // 通用错误
	Code_ModelImportedModel     Code = 250001 // 导入模型错误
	Code_ModelGetModelById      Code = 250002 // 根据模型ID查询错误
	Code_ModelUpdateModel       Code = 250003 // 模型更新错误
	Code_ModelDeleteModel       Code = 250004 // 模型删除错误
	Code_ModelGetModel          Code = 250005 // 模型查询错误
	Code_ModelListModels        Code = 250006 // 模型列表错误
	Code_ModelChangeModelStatus Code = 250007 // 模型启用/关停错误
	Code_ModelListTypeModels    Code = 250008 // 模型llm/rerank/embedding列表错误
	Code_ModelGetModelByIds     Code = 250009 // 根据模型ID列表查询错误
	// --- app-service ---
	// [300000, 309999]
	Code_AppGeneral                      Code = 300000 // 通用错误
	Code_AppApikey                       Code = 300001 // ApiKey相关错误
	Code_AppExploration                  Code = 300002 // APP应用广场相关错误
	Code_AppSafety                       Code = 300003 // 安全护栏相关错误
	Code_AppSafetySensitiveWordTable     Code = 300004 // 安全护栏敏感词表相关错误
	Code_AppSafetySensitiveVocabulary    Code = 300005 // 安全护栏敏感词数据相关错误
	Code_AppSensitiveSameWordError       Code = 300006 // 此词表内存在相同的敏感词，请修改后重试
	Code_AppSensitiveExistSensitiveError Code = 300007 // 存在敏感词：%v
	Code_AppSafetyImportUrlFailed        Code = 300008 // 获取上传文档失败，请稍后重试
	Code_AppUrl                          Code = 300009 // App WebUrl错误
	Code_AppUrlStatus                    Code = 300010 // App WebUrl状态错误
	Code_AppUrlExpired                   Code = 300011 // App WebUrl过期错误
	// --- mcp-service ---
	// [310000, 319999]
	Code_MCPGeneral              Code = 310000 // 通用错误
	Code_MCPGetSquareMCPErr      Code = 310001 // 获取广场MCP详情错误
	Code_MCPCreateCustomMCPErr   Code = 310002 // 创建自定义MCP错误
	Code_MCPGetCustomMCPErr      Code = 310003 // 获取自定义MCP详情错误
	Code_MCPDeleteCustomMCPErr   Code = 310004 // 删除自定义MCP错误
	Code_MCPGetCustomMCPListErr  Code = 310005 // 获取自定义MCP列表错误
	Code_MCPGetMCPAvatarErr      Code = 310006 // 获取MCP头像错误
	Code_MCPCreateCustomToolErr  Code = 310007 // 创建自定义工具错误
	Code_MCPGetCustomToolInfoErr Code = 310008 // 获取自定义工具详情错误
	Code_MCPGetCustomToolListErr Code = 310009 // 获取自定义工具列表错误
	Code_MCPUpdateCustomToolErr  Code = 310010 // 更新自定义工具错误
	Code_MCPDeleteCustomToolErr  Code = 310011 // 删除自定义工具错误
	Code_MCPGetSquareToolErr     Code = 310012 // 获取内置工具详情错误
	// --- operate-service ---
	// [320000, 329999]
	Code_OperateGeneral Code = 320000 // 通用错误
	Code_OperateCustom  Code = 320001 // 自定义配置相关错误
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0:      "OK",
		110000: "BFFGeneral",
		110001: "BFFInvalidArg",
		110002: "BFFJWT",
		110003: "BFFAuth",
		110005: "BFFSensitiveWordCheck",
		110006: "BFFRegisterDisable",
		110007: "BFFResetPasswordDisable",
		110008: "BFFLoginDisable",
		110009: "BFFSingleLoginDisable",
		120000: "IAMGeneral",
		120001: "IAMInternal",
		120002: "IAMCaptcha",
		120003: "IAMLogin",
		120004: "IAMRegister",
		120011: "IAMOrg",
		120021: "IAMRole",
		120031: "IAMUser",
		130000: "PermGeneral",
		130001: "PermRBAC",
		130002: "PermRBACReLogin",
		140000: "KnowledgeGeneral",
		141001: "KnowledgeBaseCreateFailed",
		141002: "KnowledgeBaseDeleteFailed",
		141003: "KnowledgeBaseUpdateFailed",
		141004: "KnowledgeBaseFetchFailed",
		141005: "KnowledgeBaseAccessDenied",
		141006: "KnowledgeBaseDeleteDuringUpload",
		141007: "KnowledgeBaseDeleteDuringParse",
		141008: "KnowledgeBaseDuplicateName",
		141009: "KnowledgeBaseSelectFailed",
		141010: "KnowledgeBaseHitFailed",
		142001: "KnowledgeDocDeleteDuringParse",
		142002: "KnowledgeDocDeleteFailed",
		142003: "KnowledgeDocSegmentStatusUpdateFail",
		142004: "KnowledgeDocImportFail",
		142005: "KnowledgeDocSplitFailed",
		142006: "KnowledgeDocUpdateStatusFailed",
		142007: "KnowledgeDocImportUrlFailed",
		142008: "KnowledgeDocUpdateMetaFailed",
		142009: "KnowledgeDocUpdateMetaStatusFailed",
		142010: "KnowledgeDocSegmentFileCSVTypeFail",
		142011: "KnowledgeDocUpdateMetaSameKeyFailed",
		143001: "KnowledgeTagCreateFailed",
		143002: "KnowledgeTagDeleteFailed",
		143003: "KnowledgeTagUpdateFailed",
		143004: "KnowledgeTagDuplicateName",
		143005: "KnowledgeTagSelectFailed",
		143006: "KnowledgeTagBindFailed",
		143007: "KnowledgeTagUnbindFailed",
		143008: "KnowledgeTagAccessDenied",
		144001: "KnowledgeKeywordsCreateFailed",
		144002: "KnowledgeKeywordsDeleteFailed",
		144003: "KnowledgeKeywordsUpdateFailed",
		144004: "KnowledgeKeywordsListFailed",
		144005: "KnowledgeKeywordsInfoFailed",
		144006: "KnowledgeKeywordsRepeated",
		145001: "KnowledgeSplitterCreateFailed",
		145002: "KnowledgeSplitterDeleteFailed",
		145003: "KnowledgeSplitterUpdateFailed",
		145004: "KnowledgeSplitterDuplicateName",
		145005: "KnowledgeSplitterSelectFailed",
		145008: "KnowledgeSplitterAccessDenied",
		145009: "KnowledgeDocSegmentUpdateLabelsFailed",
		145010: "KnowledgeDocSegmentCreateFailed",
		145011: "KnowledgeDocSegmentExceedMaxSize",
		145012: "KnowledgeDocSegmentUpdateFailed",
		145013: "KnowledgeDocSegmentDeleteFailed",
		145014: "KnowledgeMetaFetchFailed",
		145015: "KnowledgeMetaCreateFailed",
		145016: "KnowledgeMetaUpdateFailed",
		145017: "KnowledgeMetaDeleteFailed",
		145018: "KnowledgeMetaDuplicateKey",
		145019: "KnowledgeInvalidArguments",
		145020: "KnowledgeDocSegmentEmpty",
		145021: "KnowledgeMetaUpdatePartialSuccess",
		150000: "RagGeneral",
		150001: "RagRole",
		150002: "RagInfoNotExist",
		150003: "RagDeleteErr",
		150004: "RagGetErr",
		150005: "RagListErr",
		150006: "RagCreateErr",
		150007: "RagUpdateErr",
		150008: "RagChatErr",
		160000: "AssistantGeneral",
		160001: "AssistantErr",
		160002: "AssistantActionErr",
		160003: "AssistantWorkflowErr",
		160004: "AssistantConversationErr",
		160005: "AssistantMCPErr",
		160006: "AssistantCustomErr",
		210000: "WorkflowGeneral",
		250000: "ModelGeneral",
		250001: "ModelImportedModel",
		250002: "ModelGetModelById",
		250003: "ModelUpdateModel",
		250004: "ModelDeleteModel",
		250005: "ModelGetModel",
		250006: "ModelListModels",
		250007: "ModelChangeModelStatus",
		250008: "ModelListTypeModels",
		250009: "ModelGetModelByIds",
		300000: "AppGeneral",
		300001: "AppApikey",
		300002: "AppExploration",
		300003: "AppSafety",
		300004: "AppSafetySensitiveWordTable",
		300005: "AppSafetySensitiveVocabulary",
		300006: "AppSensitiveSameWordError",
		300007: "AppSensitiveExistSensitiveError",
		300008: "AppSafetyImportUrlFailed",
		300009: "AppUrl",
		300010: "AppUrlStatus",
		300011: "AppUrlExpired",
		310000: "MCPGeneral",
		310001: "MCPGetSquareMCPErr",
		310002: "MCPCreateCustomMCPErr",
		310003: "MCPGetCustomMCPErr",
		310004: "MCPDeleteCustomMCPErr",
		310005: "MCPGetCustomMCPListErr",
		310006: "MCPGetMCPAvatarErr",
		310007: "MCPCreateCustomToolErr",
		310008: "MCPGetCustomToolInfoErr",
		310009: "MCPGetCustomToolListErr",
		310010: "MCPUpdateCustomToolErr",
		310011: "MCPDeleteCustomToolErr",
		310012: "MCPGetSquareToolErr",
		320000: "OperateGeneral",
		320001: "OperateCustom",
	}
	Code_value = map[string]int32{
		"OK":                                    0,
		"BFFGeneral":                            110000,
		"BFFInvalidArg":                         110001,
		"BFFJWT":                                110002,
		"BFFAuth":                               110003,
		"BFFSensitiveWordCheck":                 110005,
		"BFFRegisterDisable":                    110006,
		"BFFResetPasswordDisable":               110007,
		"BFFLoginDisable":                       110008,
		"BFFSingleLoginDisable":                 110009,
		"IAMGeneral":                            120000,
		"IAMInternal":                           120001,
		"IAMCaptcha":                            120002,
		"IAMLogin":                              120003,
		"IAMRegister":                           120004,
		"IAMOrg":                                120011,
		"IAMRole":                               120021,
		"IAMUser":                               120031,
		"PermGeneral":                           130000,
		"PermRBAC":                              130001,
		"PermRBACReLogin":                       130002,
		"KnowledgeGeneral":                      140000,
		"KnowledgeBaseCreateFailed":             141001,
		"KnowledgeBaseDeleteFailed":             141002,
		"KnowledgeBaseUpdateFailed":             141003,
		"KnowledgeBaseFetchFailed":              141004,
		"KnowledgeBaseAccessDenied":             141005,
		"KnowledgeBaseDeleteDuringUpload":       141006,
		"KnowledgeBaseDeleteDuringParse":        141007,
		"KnowledgeBaseDuplicateName":            141008,
		"KnowledgeBaseSelectFailed":             141009,
		"KnowledgeBaseHitFailed":                141010,
		"KnowledgeDocDeleteDuringParse":         142001,
		"KnowledgeDocDeleteFailed":              142002,
		"KnowledgeDocSegmentStatusUpdateFail":   142003,
		"KnowledgeDocImportFail":                142004,
		"KnowledgeDocSplitFailed":               142005,
		"KnowledgeDocUpdateStatusFailed":        142006,
		"KnowledgeDocImportUrlFailed":           142007,
		"KnowledgeDocUpdateMetaFailed":          142008,
		"KnowledgeDocUpdateMetaStatusFailed":    142009,
		"KnowledgeDocSegmentFileCSVTypeFail":    142010,
		"KnowledgeDocUpdateMetaSameKeyFailed":   142011,
		"KnowledgeTagCreateFailed":              143001,
		"KnowledgeTagDeleteFailed":              143002,
		"KnowledgeTagUpdateFailed":              143003,
		"KnowledgeTagDuplicateName":             143004,
		"KnowledgeTagSelectFailed":              143005,
		"KnowledgeTagBindFailed":                143006,
		"KnowledgeTagUnbindFailed":              143007,
		"KnowledgeTagAccessDenied":              143008,
		"KnowledgeKeywordsCreateFailed":         144001,
		"KnowledgeKeywordsDeleteFailed":         144002,
		"KnowledgeKeywordsUpdateFailed":         144003,
		"KnowledgeKeywordsListFailed":           144004,
		"KnowledgeKeywordsInfoFailed":           144005,
		"KnowledgeKeywordsRepeated":             144006,
		"KnowledgeSplitterCreateFailed":         145001,
		"KnowledgeSplitterDeleteFailed":         145002,
		"KnowledgeSplitterUpdateFailed":         145003,
		"KnowledgeSplitterDuplicateName":        145004,
		"KnowledgeSplitterSelectFailed":         145005,
		"KnowledgeSplitterAccessDenied":         145008,
		"KnowledgeDocSegmentUpdateLabelsFailed": 145009,
		"KnowledgeDocSegmentCreateFailed":       145010,
		"KnowledgeDocSegmentExceedMaxSize":      145011,
		"KnowledgeDocSegmentUpdateFailed":       145012,
		"KnowledgeDocSegmentDeleteFailed":       145013,
		"KnowledgeMetaFetchFailed":              145014,
		"KnowledgeMetaCreateFailed":             145015,
		"KnowledgeMetaUpdateFailed":             145016,
		"KnowledgeMetaDeleteFailed":             145017,
		"KnowledgeMetaDuplicateKey":             145018,
		"KnowledgeInvalidArguments":             145019,
		"KnowledgeDocSegmentEmpty":              145020,
		"KnowledgeMetaUpdatePartialSuccess":     145021,
		"RagGeneral":                            150000,
		"RagRole":                               150001,
		"RagInfoNotExist":                       150002,
		"RagDeleteErr":                          150003,
		"RagGetErr":                             150004,
		"RagListErr":                            150005,
		"RagCreateErr":                          150006,
		"RagUpdateErr":                          150007,
		"RagChatErr":                            150008,
		"AssistantGeneral":                      160000,
		"AssistantErr":                          160001,
		"AssistantActionErr":                    160002,
		"AssistantWorkflowErr":                  160003,
		"AssistantConversationErr":              160004,
		"AssistantMCPErr":                       160005,
		"AssistantCustomErr":                    160006,
		"WorkflowGeneral":                       210000,
		"ModelGeneral":                          250000,
		"ModelImportedModel":                    250001,
		"ModelGetModelById":                     250002,
		"ModelUpdateModel":                      250003,
		"ModelDeleteModel":                      250004,
		"ModelGetModel":                         250005,
		"ModelListModels":                       250006,
		"ModelChangeModelStatus":                250007,
		"ModelListTypeModels":                   250008,
		"ModelGetModelByIds":                    250009,
		"AppGeneral":                            300000,
		"AppApikey":                             300001,
		"AppExploration":                        300002,
		"AppSafety":                             300003,
		"AppSafetySensitiveWordTable":           300004,
		"AppSafetySensitiveVocabulary":          300005,
		"AppSensitiveSameWordError":             300006,
		"AppSensitiveExistSensitiveError":       300007,
		"AppSafetyImportUrlFailed":              300008,
		"AppUrl":                                300009,
		"AppUrlStatus":                          300010,
		"AppUrlExpired":                         300011,
		"MCPGeneral":                            310000,
		"MCPGetSquareMCPErr":                    310001,
		"MCPCreateCustomMCPErr":                 310002,
		"MCPGetCustomMCPErr":                    310003,
		"MCPDeleteCustomMCPErr":                 310004,
		"MCPGetCustomMCPListErr":                310005,
		"MCPGetMCPAvatarErr":                    310006,
		"MCPCreateCustomToolErr":                310007,
		"MCPGetCustomToolInfoErr":               310008,
		"MCPGetCustomToolListErr":               310009,
		"MCPUpdateCustomToolErr":                310010,
		"MCPDeleteCustomToolErr":                310011,
		"MCPGetSquareToolErr":                   310012,
		"OperateGeneral":                        320000,
		"OperateCustom":                         320001,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_err_code_err_code_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_proto_err_code_err_code_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_proto_err_code_err_code_proto_rawDescGZIP(), []int{0}
}

var File_proto_err_code_err_code_proto protoreflect.FileDescriptor

var file_proto_err_code_err_code_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x72, 0x72, 0x2d, 0x63, 0x6f, 0x64, 0x65,
	0x2f, 0x65, 0x72, 0x72, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x2a, 0xda, 0x1c, 0x0a, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0a, 0x42, 0x46,
	0x46, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x10, 0xb0, 0xdb, 0x06, 0x12, 0x13, 0x0a, 0x0d,
	0x42, 0x46, 0x46, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x41, 0x72, 0x67, 0x10, 0xb1, 0xdb,
	0x06, 0x12, 0x0c, 0x0a, 0x06, 0x42, 0x46, 0x46, 0x4a, 0x57, 0x54, 0x10, 0xb2, 0xdb, 0x06, 0x12,
	0x0d, 0x0a, 0x07, 0x42, 0x46, 0x46, 0x41, 0x75, 0x74, 0x68, 0x10, 0xb3, 0xdb, 0x06, 0x12, 0x1b,
	0x0a, 0x15, 0x42, 0x46, 0x46, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f,
	0x72, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x10, 0xb5, 0xdb, 0x06, 0x12, 0x18, 0x0a, 0x12, 0x42,
	0x46, 0x46, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x10, 0xb6, 0xdb, 0x06, 0x12, 0x1d, 0x0a, 0x17, 0x42, 0x46, 0x46, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x10, 0xb7, 0xdb, 0x06, 0x12, 0x15, 0x0a, 0x0f, 0x42, 0x46, 0x46, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x10, 0xb8, 0xdb, 0x06, 0x12, 0x1b, 0x0a, 0x15, 0x42,
	0x46, 0x46, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x10, 0xb9, 0xdb, 0x06, 0x12, 0x10, 0x0a, 0x0a, 0x49, 0x41, 0x4d, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x10, 0xc0, 0xa9, 0x07, 0x12, 0x11, 0x0a, 0x0b, 0x49, 0x41,
	0x4d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x10, 0xc1, 0xa9, 0x07, 0x12, 0x10, 0x0a,
	0x0a, 0x49, 0x41, 0x4d, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x10, 0xc2, 0xa9, 0x07, 0x12,
	0x0e, 0x0a, 0x08, 0x49, 0x41, 0x4d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0xc3, 0xa9, 0x07, 0x12,
	0x11, 0x0a, 0x0b, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x10, 0xc4,
	0xa9, 0x07, 0x12, 0x0c, 0x0a, 0x06, 0x49, 0x41, 0x4d, 0x4f, 0x72, 0x67, 0x10, 0xcb, 0xa9, 0x07,
	0x12, 0x0d, 0x0a, 0x07, 0x49, 0x41, 0x4d, 0x52, 0x6f, 0x6c, 0x65, 0x10, 0xd5, 0xa9, 0x07, 0x12,
	0x0d, 0x0a, 0x07, 0x49, 0x41, 0x4d, 0x55, 0x73, 0x65, 0x72, 0x10, 0xdf, 0xa9, 0x07, 0x12, 0x11,
	0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x10, 0xd0, 0xf7,
	0x07, 0x12, 0x0e, 0x0a, 0x08, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x42, 0x41, 0x43, 0x10, 0xd1, 0xf7,
	0x07, 0x12, 0x15, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x6d, 0x52, 0x42, 0x41, 0x43, 0x52, 0x65, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x10, 0xd2, 0xf7, 0x07, 0x12, 0x16, 0x0a, 0x10, 0x4b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x10, 0xe0, 0xc5, 0x08,
	0x12, 0x1f, 0x0a, 0x19, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xc9, 0xcd,
	0x08, 0x12, 0x1f, 0x0a, 0x19, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xca,
	0xcd, 0x08, 0x12, 0x1f, 0x0a, 0x19, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10,
	0xcb, 0xcd, 0x08, 0x12, 0x1e, 0x0a, 0x18, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10,
	0xcc, 0xcd, 0x08, 0x12, 0x1f, 0x0a, 0x19, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6e, 0x69, 0x65, 0x64,
	0x10, 0xcd, 0xcd, 0x08, 0x12, 0x25, 0x0a, 0x1f, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x75, 0x72, 0x69, 0x6e,
	0x67, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x10, 0xce, 0xcd, 0x08, 0x12, 0x24, 0x0a, 0x1e, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x72, 0x73, 0x65, 0x10, 0xcf, 0xcd,
	0x08, 0x12, 0x20, 0x0a, 0x1a, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x10,
	0xd0, 0xcd, 0x08, 0x12, 0x1f, 0x0a, 0x19, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x42, 0x61, 0x73, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x10, 0xd1, 0xcd, 0x08, 0x12, 0x1c, 0x0a, 0x16, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x48, 0x69, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xd2,
	0xcd, 0x08, 0x12, 0x23, 0x0a, 0x1d, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44,
	0x6f, 0x63, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x10, 0xb1, 0xd5, 0x08, 0x12, 0x1e, 0x0a, 0x18, 0x4b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x44, 0x6f, 0x63, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x10, 0xb2, 0xd5, 0x08, 0x12, 0x29, 0x0a, 0x23, 0x4b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x44, 0x6f, 0x63, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x10, 0xb3,
	0xd5, 0x08, 0x12, 0x1c, 0x0a, 0x16, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44,
	0x6f, 0x63, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x10, 0xb4, 0xd5, 0x08,
	0x12, 0x1d, 0x0a, 0x17, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x6f, 0x63,
	0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xb5, 0xd5, 0x08, 0x12,
	0x24, 0x0a, 0x1e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x6f, 0x63, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x10, 0xb6, 0xd5, 0x08, 0x12, 0x21, 0x0a, 0x1b, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x44, 0x6f, 0x63, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x10, 0xb7, 0xd5, 0x08, 0x12, 0x22, 0x0a, 0x1c, 0x4b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x6f, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xb8, 0xd5, 0x08, 0x12, 0x28, 0x0a, 0x22,
	0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x6f, 0x63, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x10, 0xb9, 0xd5, 0x08, 0x12, 0x28, 0x0a, 0x22, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x44, 0x6f, 0x63, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x43, 0x53, 0x56, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x10, 0xba, 0xd5, 0x08,
	0x12, 0x29, 0x0a, 0x23, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x6f, 0x63,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x61, 0x6d, 0x65, 0x4b, 0x65,
	0x79, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xbb, 0xd5, 0x08, 0x12, 0x1e, 0x0a, 0x18, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x99, 0xdd, 0x08, 0x12, 0x1e, 0x0a, 0x18, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x9a, 0xdd, 0x08, 0x12, 0x1e, 0x0a, 0x18, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x9b, 0xdd, 0x08, 0x12, 0x1f, 0x0a, 0x19, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x44, 0x75, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x10, 0x9c, 0xdd, 0x08, 0x12, 0x1e, 0x0a, 0x18,
	0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x9d, 0xdd, 0x08, 0x12, 0x1c, 0x0a, 0x16,
	0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x42, 0x69, 0x6e, 0x64,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x9e, 0xdd, 0x08, 0x12, 0x1e, 0x0a, 0x18, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x9f, 0xdd, 0x08, 0x12, 0x1e, 0x0a, 0x18, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x54, 0x61, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x44, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x10, 0xa0, 0xdd, 0x08, 0x12, 0x23, 0x0a, 0x1d, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x81, 0xe5, 0x08, 0x12,
	0x23, 0x0a, 0x1d, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x10, 0x82, 0xe5, 0x08, 0x12, 0x23, 0x0a, 0x1d, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x83, 0xe5, 0x08, 0x12, 0x21, 0x0a, 0x1b, 0x4b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x84, 0xe5, 0x08, 0x12, 0x21, 0x0a, 0x1b,
	0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x85, 0xe5, 0x08, 0x12,
	0x1f, 0x0a, 0x19, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x10, 0x86, 0xe5, 0x08,
	0x12, 0x23, 0x0a, 0x1d, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x10, 0xe9, 0xec, 0x08, 0x12, 0x23, 0x0a, 0x1d, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xea, 0xec, 0x08, 0x12, 0x23, 0x0a, 0x1d, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x74, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xeb, 0xec, 0x08, 0x12,
	0x24, 0x0a, 0x1e, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x53, 0x70, 0x6c, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x10, 0xec, 0xec, 0x08, 0x12, 0x23, 0x0a, 0x1d, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xed, 0xec, 0x08, 0x12, 0x23, 0x0a, 0x1d, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x74, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x10, 0xf0, 0xec, 0x08, 0x12,
	0x2b, 0x0a, 0x25, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x6f, 0x63, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xf1, 0xec, 0x08, 0x12, 0x25, 0x0a, 0x1f,
	0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x6f, 0x63, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10,
	0xf2, 0xec, 0x08, 0x12, 0x26, 0x0a, 0x20, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x44, 0x6f, 0x63, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64,
	0x4d, 0x61, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x10, 0xf3, 0xec, 0x08, 0x12, 0x25, 0x0a, 0x1f, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x6f, 0x63, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xf4,
	0xec, 0x08, 0x12, 0x25, 0x0a, 0x1f, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44,
	0x6f, 0x63, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xf5, 0xec, 0x08, 0x12, 0x1e, 0x0a, 0x18, 0x4b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x46, 0x65, 0x74, 0x63, 0x68, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xf6, 0xec, 0x08, 0x12, 0x1f, 0x0a, 0x19, 0x4b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xf7, 0xec, 0x08, 0x12, 0x1f, 0x0a, 0x19, 0x4b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xf8, 0xec, 0x08, 0x12, 0x1f, 0x0a, 0x19, 0x4b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xf9, 0xec, 0x08, 0x12, 0x1f, 0x0a, 0x19,
	0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x75, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x10, 0xfa, 0xec, 0x08, 0x12, 0x1f, 0x0a,
	0x19, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x10, 0xfb, 0xec, 0x08, 0x12, 0x1e,
	0x0a, 0x18, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x44, 0x6f, 0x63, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x10, 0xfc, 0xec, 0x08, 0x12, 0x27,
	0x0a, 0x21, 0x4b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x10, 0xfd, 0xec, 0x08, 0x12, 0x10, 0x0a, 0x0a, 0x52, 0x61, 0x67, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x10, 0xf0, 0x93, 0x09, 0x12, 0x0d, 0x0a, 0x07, 0x52, 0x61, 0x67,
	0x52, 0x6f, 0x6c, 0x65, 0x10, 0xf1, 0x93, 0x09, 0x12, 0x15, 0x0a, 0x0f, 0x52, 0x61, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0xf2, 0x93, 0x09, 0x12,
	0x12, 0x0a, 0x0c, 0x52, 0x61, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x72, 0x72, 0x10,
	0xf3, 0x93, 0x09, 0x12, 0x0f, 0x0a, 0x09, 0x52, 0x61, 0x67, 0x47, 0x65, 0x74, 0x45, 0x72, 0x72,
	0x10, 0xf4, 0x93, 0x09, 0x12, 0x10, 0x0a, 0x0a, 0x52, 0x61, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x72, 0x72, 0x10, 0xf5, 0x93, 0x09, 0x12, 0x12, 0x0a, 0x0c, 0x52, 0x61, 0x67, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x10, 0xf6, 0x93, 0x09, 0x12, 0x12, 0x0a, 0x0c, 0x52, 0x61,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x72, 0x72, 0x10, 0xf7, 0x93, 0x09, 0x12, 0x10,
	0x0a, 0x0a, 0x52, 0x61, 0x67, 0x43, 0x68, 0x61, 0x74, 0x45, 0x72, 0x72, 0x10, 0xf8, 0x93, 0x09,
	0x12, 0x16, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x10, 0x80, 0xe2, 0x09, 0x12, 0x12, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x10, 0x81, 0xe2, 0x09, 0x12, 0x18, 0x0a, 0x12,
	0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x72, 0x72, 0x10, 0x82, 0xe2, 0x09, 0x12, 0x1a, 0x0a, 0x14, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x10, 0x83,
	0xe2, 0x09, 0x12, 0x1e, 0x0a, 0x18, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x10, 0x84,
	0xe2, 0x09, 0x12, 0x15, 0x0a, 0x0f, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4d,
	0x43, 0x50, 0x45, 0x72, 0x72, 0x10, 0x85, 0xe2, 0x09, 0x12, 0x18, 0x0a, 0x12, 0x41, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x72, 0x72, 0x10,
	0x86, 0xe2, 0x09, 0x12, 0x15, 0x0a, 0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x10, 0xd0, 0xe8, 0x0c, 0x12, 0x12, 0x0a, 0x0c, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x10, 0x90, 0xa1, 0x0f, 0x12, 0x18,
	0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x10, 0x91, 0xa1, 0x0f, 0x12, 0x17, 0x0a, 0x11, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x10, 0x92, 0xa1,
	0x0f, 0x12, 0x16, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x10, 0x93, 0xa1, 0x0f, 0x12, 0x16, 0x0a, 0x10, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x10, 0x94, 0xa1,
	0x0f, 0x12, 0x13, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x10, 0x95, 0xa1, 0x0f, 0x12, 0x15, 0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x10, 0x96, 0xa1, 0x0f, 0x12, 0x1c, 0x0a,
	0x16, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x97, 0xa1, 0x0f, 0x12, 0x19, 0x0a, 0x13, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x10, 0x98, 0xa1, 0x0f, 0x12, 0x18, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x47,
	0x65, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x73, 0x10, 0x99, 0xa1, 0x0f,
	0x12, 0x10, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x10, 0xe0,
	0xa7, 0x12, 0x12, 0x0f, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x41, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x10,
	0xe1, 0xa7, 0x12, 0x12, 0x14, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0xe2, 0xa7, 0x12, 0x12, 0x0f, 0x0a, 0x09, 0x41, 0x70, 0x70,
	0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x10, 0xe3, 0xa7, 0x12, 0x12, 0x21, 0x0a, 0x1b, 0x41, 0x70,
	0x70, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x57, 0x6f, 0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x10, 0xe4, 0xa7, 0x12, 0x12, 0x22, 0x0a,
	0x1c, 0x41, 0x70, 0x70, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x56, 0x6f, 0x63, 0x61, 0x62, 0x75, 0x6c, 0x61, 0x72, 0x79, 0x10, 0xe5, 0xa7,
	0x12, 0x12, 0x1f, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x53, 0x61, 0x6d, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xe6,
	0xa7, 0x12, 0x12, 0x25, 0x0a, 0x1f, 0x41, 0x70, 0x70, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0xe7, 0xa7, 0x12, 0x12, 0x1e, 0x0a, 0x18, 0x41, 0x70, 0x70,
	0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0xe8, 0xa7, 0x12, 0x12, 0x0c, 0x0a, 0x06, 0x41, 0x70, 0x70,
	0x55, 0x72, 0x6c, 0x10, 0xe9, 0xa7, 0x12, 0x12, 0x12, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x55, 0x72,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0xea, 0xa7, 0x12, 0x12, 0x13, 0x0a, 0x0d, 0x41,
	0x70, 0x70, 0x55, 0x72, 0x6c, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x10, 0xeb, 0xa7, 0x12,
	0x12, 0x10, 0x0a, 0x0a, 0x4d, 0x43, 0x50, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x10, 0xf0,
	0xf5, 0x12, 0x12, 0x18, 0x0a, 0x12, 0x4d, 0x43, 0x50, 0x47, 0x65, 0x74, 0x53, 0x71, 0x75, 0x61,
	0x72, 0x65, 0x4d, 0x43, 0x50, 0x45, 0x72, 0x72, 0x10, 0xf1, 0xf5, 0x12, 0x12, 0x1b, 0x0a, 0x15,
	0x4d, 0x43, 0x50, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d,
	0x43, 0x50, 0x45, 0x72, 0x72, 0x10, 0xf2, 0xf5, 0x12, 0x12, 0x18, 0x0a, 0x12, 0x4d, 0x43, 0x50,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x43, 0x50, 0x45, 0x72, 0x72, 0x10,
	0xf3, 0xf5, 0x12, 0x12, 0x1b, 0x0a, 0x15, 0x4d, 0x43, 0x50, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x43, 0x50, 0x45, 0x72, 0x72, 0x10, 0xf4, 0xf5, 0x12,
	0x12, 0x1c, 0x0a, 0x16, 0x4d, 0x43, 0x50, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x4d, 0x43, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x72, 0x72, 0x10, 0xf5, 0xf5, 0x12, 0x12, 0x18,
	0x0a, 0x12, 0x4d, 0x43, 0x50, 0x47, 0x65, 0x74, 0x4d, 0x43, 0x50, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x45, 0x72, 0x72, 0x10, 0xf6, 0xf5, 0x12, 0x12, 0x1c, 0x0a, 0x16, 0x4d, 0x43, 0x50, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x45,
	0x72, 0x72, 0x10, 0xf7, 0xf5, 0x12, 0x12, 0x1d, 0x0a, 0x17, 0x4d, 0x43, 0x50, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x72,
	0x72, 0x10, 0xf8, 0xf5, 0x12, 0x12, 0x1d, 0x0a, 0x17, 0x4d, 0x43, 0x50, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x72, 0x72,
	0x10, 0xf9, 0xf5, 0x12, 0x12, 0x1c, 0x0a, 0x16, 0x4d, 0x43, 0x50, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x45, 0x72, 0x72, 0x10, 0xfa,
	0xf5, 0x12, 0x12, 0x1c, 0x0a, 0x16, 0x4d, 0x43, 0x50, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x6f, 0x6f, 0x6c, 0x45, 0x72, 0x72, 0x10, 0xfb, 0xf5, 0x12,
	0x12, 0x19, 0x0a, 0x13, 0x4d, 0x43, 0x50, 0x47, 0x65, 0x74, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65,
	0x54, 0x6f, 0x6f, 0x6c, 0x45, 0x72, 0x72, 0x10, 0xfc, 0xf5, 0x12, 0x12, 0x14, 0x0a, 0x0e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x10, 0x80, 0xc4,
	0x13, 0x12, 0x13, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x10, 0x81, 0xc4, 0x13, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x55, 0x6e, 0x69, 0x63, 0x6f, 0x6d, 0x41, 0x49, 0x2f, 0x77, 0x61,
	0x6e, 0x77, 0x75, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x72,
	0x72, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_err_code_err_code_proto_rawDescOnce sync.Once
	file_proto_err_code_err_code_proto_rawDescData = file_proto_err_code_err_code_proto_rawDesc
)

func file_proto_err_code_err_code_proto_rawDescGZIP() []byte {
	file_proto_err_code_err_code_proto_rawDescOnce.Do(func() {
		file_proto_err_code_err_code_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_err_code_err_code_proto_rawDescData)
	})
	return file_proto_err_code_err_code_proto_rawDescData
}

var file_proto_err_code_err_code_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_err_code_err_code_proto_goTypes = []interface{}{
	(Code)(0), // 0: err_code.Code
}
var file_proto_err_code_err_code_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_err_code_err_code_proto_init() }
func file_proto_err_code_err_code_proto_init() {
	if File_proto_err_code_err_code_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_err_code_err_code_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_err_code_err_code_proto_goTypes,
		DependencyIndexes: file_proto_err_code_err_code_proto_depIdxs,
		EnumInfos:         file_proto_err_code_err_code_proto_enumTypes,
	}.Build()
	File_proto_err_code_err_code_proto = out.File
	file_proto_err_code_err_code_proto_rawDesc = nil
	file_proto_err_code_err_code_proto_goTypes = nil
	file_proto_err_code_err_code_proto_depIdxs = nil
}
