server:
  grpc_endpoint: 0.0.0.0:9898
  max_recv_msg_size: 4194304 # 1024 * 1024 * 4 = 4M

log:
  std: true
  level: debug
  logs:
    - enable: true
      filename: log/mcp-info.log
      level: info
      max_size: 10
      max_backups: 10
      max_age: 30
    - enable: true
      filename: log/mcp-err.log
      level: error
      max_size: 10
      max_backups: 10
      max_age: 30

db:
  name: mysql # mysql | postgres | tidb | oceanbase
  mysql:
    address: localhost:3306
    user: root
    password: Wanwu123456
    database: mcp_service
    max_open_conns: 16
    max_idle_conns: 16
    log_mode: true
  postgres:
    address: localhost:5432
    user: postgres
    password: Wanwu123456
    database: mcp_service
    max_open_conns: 16
    max_idle_conns: 16
    log_mode: true
  tidb:
    address: localhost:4000
    user: root
    password: Wanwu123456
    database: mcp_service
    max_open_conns: 16
    max_idle_conns: 16
    log_mode: true
  oceanbase:
    address: localhost:2881
    user: root@wanwu
    password: Wanwu123456
    database: mcp_service
    max_open_conns: 16
    max_idle_conns: 16
    log_mode: true

mcps:
  - mcp_square_id: "gaodemap"
    name: "Amap 高德地图"
    category: "search"
    desc: "高德地图 MCP Server 现已覆盖12大核心服务接口，提供全场景覆盖的地图服务，包括地理编码、逆地理编码、IP 定位、天气查询、骑行路径规划、步行路径规划、驾车路径规划、公交路径规划、距离测量、关键词搜索、周边搜索、详情搜索等。"
    from: "高德开放平台"
    avatar_path: "gaodemap/logo.png"
    detail_path: "gaodemap/detail.md"
    feature: "\t•\t零部署，易使用：无需本地服务器部署，仅通过配置 URL 即可使用。\n\t•\t语义优化结果：对返回 JSON 数据进行语义增强，便于大模型理解。\n\t•\t自动升级：平台持续迭代更新，无需用户手动操作。\n\t•\t全托管云服务：无需用户关注服务器维护或扩容。\n\t•\t协议兼容性强：支持标准 SSE 长连接协议，适配多种场景。"
    manual: "\t•\t获取开发者 Key：登录高德开放平台并创建应用获取 Key\nhttps://lbs.amap.com/?ref=https://console.amap.com/dev/index\n\t•\t配置 MCP Server：在支持 MCP 的客户端（如 Cursor）中设置 SSE 或 Node.js 接入方式\n\t•\t连接模型：选择大模型（如 Claude），使用 Agent 模式进行交互\n\t•\t直接调用服务：通过快捷键打开交互窗口开始使用，如路线规划、美食推荐等"
    scenario: "\t•\t在支持 MCP 协议的客户端中使用（如：Cursor、Claude、Cline）\n\t•\t可嵌入到企业应用、AI 助手系统、智能出行方案中\n\t•\t适用于城市交通服务平台、天气播报系统、位置服务 App 等。\n\t•\t城市出行路线规划（骑行、步行、驾车、公交）\n\t•\t获取实时天气信息\n\t•\tIP 定位与地理编码/逆地理编码\n\t•\t地点搜索与 POI 信息查询\n\t•\t测量两点间距离"
    sse_url: "https://mcp.amap.com/sse?key=在高德开放平台申请APIKEY"
    summary: "高德地图 MCP Server 是基于 SSE（Server-Sent Events）技术的地理服务接口集合，允许开发者通过 MCP 协议调用地图服务，如路径规划、天气查询、地点搜索等。它支持与如 Cursor、Claude 等大模型工具无缝集成。"
    tools:
      - name: maps_regeocode
        description: "将一个高德经纬度坐标转换为行政区划地址信息"
        input_schema:
          type: object
          properties:
            - field: location
              type: string
              description: "经纬度"
          required:
            - location
      - name: maps_geo
        description: "将详细的结构化地址转换为经纬度坐标。支持对地标性名胜景区、建筑物名称解析为经纬度坐标"
        input_schema:
          type: object
          properties:
            - field: address
              type: string
              description: "待解析的结构化地址信息"
            - field: city
              type: string
              description: "指定查询的城市"
          required:
            - address
      - name: maps_ip_location
        description: "IP 定位根据用户输入的 IP 地址，定位 IP 的所在位置"
        input_schema:
          type: object
          properties:
            - field: ip
              type: string
              description: "IP地址"
          required:
            - ip
      - name: maps_weather
        description: "根据城市名称或者标准adcode查询指定城市的天气"
        input_schema:
          type: object
          properties:
            - field: city
              type: string
              description: "城市名称或者adcode"
          required:
            - city
      - name: maps_search_detail
        description: "查询关键词搜或者周边搜获取到的POI ID的详细信息"
        input_schema:
          type: object
          properties:
            - field: id
              type: string
              description: "关键词搜或者周边搜获取到的POI ID"
          required:
            - id
      - name: maps_bicycling
        description: "骑行路径规划用于规划骑行通勤方案，规划时会考虑天桥、单行线、封路等情况。最大支持500km的骑行路线规划"
        input_schema:
          type: object
          properties:
            - field: destination
              type: string
              description: "目的地经纬度，坐标格式为：经度，纬度"
            - field: origin
              type: string
              description: "出发点经纬度，坐标格式为：经度，纬度"
          required:
            - origin
            - destination
      - name: maps_direction_walking
        description: "步行路径规划API可以根据输入起点终点经纬度坐标规划100km以内的步行通勤方案，并且返回通勤方案的数据"
        input_schema:
          type: object
          properties:
            - field: destination
              type: string
              description: "目的地经度，纬度，坐标格式为：经度，纬度"
            - field: origin
              type: string
              description: "出发点经度，纬度，坐标格式为：经度，纬度"
          required:
            - origin
            - destination
      - name: maps_direction_driving
        description: "驾车路径规划API可以根据用户起终点经纬度坐标规划以小客车、轿车通勤出行的方案，并且返回通勤方案的数据"
        input_schema:
          type: object
          properties:
            - field: destination
              type: string
              description: "目的地经度，纬度，坐标格式为：经度，纬度"
            - field: origin
              type: string
              description: "出发点经度，纬度，坐标格式为：经度，纬度"
          required:
            - origin
            - destination
      - name: maps_direction_transit_integrated
        description: "公交路径规划API可以根据用户起终点经纬度坐标规划综合各类公共（火车、公交、地铁）交通方式的通勤方案，并且返回通勤方案的数据，跨城场景下必须传起点城市与终点城市"
        input_schema:
          type: object
          properties:
            - field: city
              type: string
              description: "公共交通规划起点城市"
            - field: cityd
              type: string
              description: "公共交通规划终点城市"
            - field: destination
              type: string
              description: "目的地经度，纬度，坐标格式为：经度，纬度"
            - field: origin
              type: string
              description: "出发点经度，纬度，坐标格式为：经度，纬度"
          required:
            - origin
            - destination
            - city
            - cityd
      - name: maps_distance
        description: "距离测量API可以测量两个经纬度坐标之间的距离,支持驾车、步行以及球面距离测量"
        input_schema:
          type: object
          properties:
            - field: destination
              type: string
              description: "终点经度，纬度，坐标格式为：经度，纬度"
            - field: origins
              type: string
              description: "起点经度，纬度，可以传多个坐标，使用竖线隔离，比如120,30|120,31，坐标格式为：经度，纬度"
            - field: type
              type: string
              description: "距离测量类型,1代表驾车距离测量，0代表直线距离测量，3步行距离测量"
          required:
            - origins
            - destination
      - name: maps_text_search
        description: "关键词搜，根据用户传入关键词，搜索出相关的POI"
        input_schema:
          type: object
          properties:
            - field: city
              type: string
              description: "查询城市"
            - field: keywords
              type: string
              description: "搜索关键词"
            - field: types
              type: string
              description: "POI类型，比如加油站"
          required:
            - keywords
      - name: maps_around_search
        description: "周边搜，根据用户传入关键词以及坐标location，搜索出radius半径范围的POI"
        input_schema:
          type: object
          properties:
            - field: keywords
              type: string
              description: "搜索关键词"
            - field: location
              type: string
              description: "中心点经度纬度"
            - field: radius
              type: string
              description: "搜索半径"
          required:
            - location
  - mcp_square_id: "minimax"
    name: "MiniMax"
    category: "create"
    desc: "MiniMax官方MCP Server，支持高质量的视频生成、图像生成、语音生成、和声音克隆等多项能力"
    from: "MiniMax-AI"
    avatar_path: "minimax/logo.png"
    detail_path: "minimax/detail.md"
    feature: "MiniMax-MCP的关键特性包括高质量的文本转语音合成、高效的视频生成能力，以及便于集成的用户友好API。"
    manual: "使用MiniMax-MCP，开发者可以将提供的API集成到他们的应用程序中，从而实现无缝的文本转语音转换和视频生成功能。"
    scenario: "MiniMax-MCP可以应用于教育、娱乐、内容创作和为残疾人士提供无障碍解决方案等多个领域。\nMiniMax-MCP的使用场景包括创建教育视频、为多媒体项目生成配音、开发互动学习工具，以及提升数字内容的无障碍性。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "MiniMax-MCP是MiniMax模型上下文协议的官方服务器，旨在促进与先进的文本转语音和视频生成API的交互。"
    tools:
      - name: text_to_audio
        description: "Convert text to audio with a given voice and save the output audio file to a given directory.\n    Directory is optional, if not provided, the output file will be saved to $HOME/Desktop.\n    Voice id is optional, if not provided, the default voice will be used.\n\n    COST WARNING: This tool makes an API call to Minimax which may incur costs. Only use when explicitly requested by the user.\n\n    Args:\n        text (str): The text to convert to speech.\n        voice_id (str, optional): The id of the voice to use. For example, \"male-qn-qingse\"/\"audiobook_female_1\"/\"cute_boy\"/\"Charming_Lady\"...\n        model (string, optional): The model to use.\n        speed (float, optional): Speed of the generated audio. Controls the speed of the generated speech. Values range from 0.5 to 2.0, with 1.0 being the default speed. \n        vol (float, optional): Volume of the generated audio. Controls the volume of the generated speech. Values range from 0 to 10, with 1 being the default volume.\n        pitch (int, optional): Pitch of the generated audio. Controls the speed of the generated speech. Values range from -12 to 12, with 0 being the default speed.\n        emotion (str, optional): Emotion of the generated audio. Controls the emotion of the generated speech. Values range [\"happy\", \"sad\", \"angry\", \"fearful\", \"disgusted\", \"surprised\", \"neutral\"], with \"happy\" being the default emotion.\n        sample_rate (int, optional): Sample rate of the generated audio. Controls the sample rate of the generated speech. Values range [8000,16000,22050,24000,32000,44100] with 32000 being the default sample rate.\n        bitrate (int, optional): Bitrate of the generated audio. Controls the bitrate of the generated speech. Values range [32000,64000,128000,256000] with 128000 being the default bitrate.\n        channel (int, optional): Channel of the generated audio. Controls the channel of the generated speech. Values range [1, 2] with 1 being the default channel.\n        format (str, optional): Format of the generated audio. Controls the format of the generated speech. Values range [\"pcm\", \"mp3\",\"flac\"] with \"mp3\" being the default format.\n        language_boost (str, optional): Language boost of the generated audio. Controls the language boost of the generated speech. Values range ['Chinese', 'Chinese,Yue', 'English', 'Arabic', 'Russian', 'Spanish', 'French', 'Portuguese', 'German', 'Turkish', 'Dutch', 'Ukrainian', 'Vietnamese', 'Indonesian', 'Japanese', 'Italian', 'Korean', 'Thai', 'Polish', 'Romanian', 'Greek', 'Czech', 'Finnish', 'Hindi', 'auto'] with \"auto\" being the default language boost.\n        output_directory (str): The directory to save the audio to.\n\n    Returns:\n        Text content with the path to the output file and name of the voice used.\n    "
        input_schema:
          type: object
          properties:
            - field: bitrate
              type: integer
            - field: channel
              type: integer
            - field: emotion
              type: string
            - field: format
              type: string
            - field: language_boost
              type: string
            - field: model
              type: string
            - field: output_directory
              type: string
            - field: pitch
              type: integer
            - field: sample_rate
              type: integer
            - field: speed
              type: number
            - field: text
              type: string
            - field: voice_id
              type: string
            - field: vol
              type: number
          required:
            - text
      - name: list_voices
        description: "List all voices available.\n\n    Args:\n        voice_type (str, optional): The type of voices to list. Values range [\"all\", \"system\", \"voice_cloning\"], with \"all\" being the default.\n    Returns:\n        Text content with the list of voices.\n    "
        input_schema:
          type: object
          properties:
            - field: voice_type
              type: string
      - name: voice_clone
        description: "Clone a voice using provided audio files. The new voice will be charged upon first use.\n\n    COST WARNING: This tool makes an API call to Minimax which may incur costs. Only use when explicitly requested by the user.\n\n     Args:\n        voice_id (str): The id of the voice to use.\n        file (str): The path to the audio file to clone or a URL to the audio file.\n        text (str, optional): The text to use for the demo audio.\n        is_url (bool, optional): Whether the file is a URL. Defaults to False.\n        output_directory (str): The directory to save the demo audio to.\n    Returns:\n        Text content with the voice id of the cloned voice.\n    "
        input_schema:
          type: object
          properties:
            - field: file
              type: string
            - field: is_url
              type: boolean
            - field: output_directory
              type: string
            - field: text
              type: string
            - field: voice_id
              type: string
          required:
            - voice_id
            - file
            - text
      - name: play_audio
        description: "Play an audio file. Supports WAV and MP3 formats. Not supports video.\n\n     Args:\n        input_file_path (str): The path to the audio file to play.\n        is_url (bool, optional): Whether the audio file is a URL.\n    Returns:\n        Text content with the path to the audio file.\n    "
        input_schema:
          type: object
          properties:
            - field: input_file_path
              type: string
            - field: is_url
              type: boolean
          required:
            - input_file_path
      - name: generate_video
        description: "Generate a video from a prompt.\n\n    COST WARNING: This tool makes an API call to Minimax which may incur costs. Only use when explicitly requested by the user.\n\n     Args:\n        model (str, optional): The model to use. Values range [\"T2V-01\", \"T2V-01-Director\", \"I2V-01\", \"I2V-01-Director\", \"I2V-01-live\"]. \"Director\" supports inserting instructions for camera movement control. \"I2V\" for image to video. \"T2V\" for text to video.\n        prompt (str): The prompt to generate the video from. When use Director model, the prompt supports 15 Camera Movement Instructions (Enumerated Values)\n            -Truck: [Truck left], [Truck right]\n            -Pan: [Pan left], [Pan right]\n            -Push: [Push in], [Pull out]\n            -Pedestal: [Pedestal up], [Pedestal down]\n            -Tilt: [Tilt up], [Tilt down]\n            -Zoom: [Zoom in], [Zoom out]\n            -Shake: [Shake]\n            -Follow: [Tracking shot]\n            -Static: [Static shot]\n        first_frame_image (str): The first frame image. The model must be \"I2V\" Series.\n        output_directory (str): The directory to save the video to.\n        async_mode (bool, optional): Whether to use async mode. Defaults to False. If True, the video generation task will be submitted asynchronously and the response will return a task_id. Should use `query_video_generation` tool to check the status of the task and get the result.\n    Returns:\n        Text content with the path to the output video file.\n    "
        input_schema:
          type: object
          properties:
            - field: async_mode
              type: boolean
            - field: first_frame_image
              type: string
            - field: model
              type: string
            - field: output_directory
              type: string
            - field: prompt
              type: string
      - name: query_video_generation
        description: "Query the status of a video generation task.\n\n    Args:\n        task_id (str): The task ID to query. Should be the task_id returned by `generate_video` tool if `async_mode` is True.\n        output_directory (str): The directory to save the video to.\n    Returns:\n        Text content with the status of the task.\n    "
        input_schema:
          type: object
          properties:
            - field: output_directory
              type: string
            - field: task_id
              type: string
          required:
            - task_id
      - name: text_to_image
        description: "Generate a image from a prompt.\n\n    COST WARNING: This tool makes an API call to Minimax which may incur costs. Only use when explicitly requested by the user.\n\n     Args:\n        model (str, optional): The model to use. Values range [\"image-01\"], with \"image-01\" being the default.\n        prompt (str): The prompt to generate the image from.\n        aspect_ratio (str, optional): The aspect ratio of the image. Values range [\"1:1\", \"16:9\",\"4:3\", \"3:2\", \"2:3\", \"3:4\", \"9:16\", \"21:9\"], with \"1:1\" being the default.\n        n (int, optional): The number of images to generate. Values range [1, 9], with 1 being the default.\n        prompt_optimizer (bool, optional): Whether to optimize the prompt. Values range [True, False], with True being the default.\n        output_directory (str): The directory to save the image to.\n    Returns:\n        Text content with the path to the output image file.\n    "
        input_schema:
          type: object
          properties:
            - field: aspect_ratio
              type: string
            - field: model
              type: string
            - field: n
              type: integer
            - field: output_directory
              type: string
            - field: prompt
              type: string
            - field: prompt_optimizer
              type: boolean
  - mcp_square_id: "converttime"
    name: "Time"
    category: "data"
    desc: "提供时间和时区转换功能"
    from: "modelcontextprotocol"
    avatar_path: "converttime/logo.png"
    detail_path: "converttime/detail.md"
    feature: "关键特性包括能够获取特定或系统时区的当前时间，以及使用IANA时区名称在不同时区之间转换时间。"
    manual: "要使用Time MCP Server，可以选择通过``uv``直接运行而无需安装，或通过pip安装，命令为'pip install mcp-server-time'。安装后，可以作为脚本执行。"
    scenario: "Time可用于需要准确时间信息和时区转换的应用程序，例如调度应用、全球通信工具以及处理时间敏感数据的软件。\n使用场景包括获取特定地点的当前时间、在不同时区之间转换会议时间，以及将时间功能集成到应用程序中以改善用户体验。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Time是一个模型上下文协议服务器，提供时间和时区转换功能，使LLM能够获取当前时间信息，并使用IANA时区名称进行时区转换。"
    tools:
      - name: get_current_time
        description: "Get current time in a specific timezones"
        input_schema:
          type: object
          properties:
            - field: timezone
              type: string
              description: "IANA timezone name (e.g., 'America/New_York', 'Europe/London'). Use 'Asia/Shanghai' as local timezone if no timezone provided by the user."
          required:
            - timezone
      - name: convert_time
        description: "Convert time between timezones"
        input_schema:
          type: object
          properties:
            - field: source_timezone
              type: string
              description: "Source IANA timezone name (e.g., 'America/New_York', 'Europe/London'). Use 'Asia/Shanghai' as local timezone if no source timezone provided by the user."
            - field: target_timezone
              type: string
              description: "Target IANA timezone name (e.g., 'Asia/Tokyo', 'America/San_Francisco'). Use 'Asia/Shanghai' as local timezone if no target timezone provided by the user."
            - field: time
              type: string
              description: "Time to convert in 24-hour format (HH:MM)"
          required:
            - source_timezone
            - time
            - target_timezone
  - mcp_square_id: "googlemaps"
    name: "Google Maps"
    category: "data"
    desc: "谷歌地图"
    from: "modelcontextprotocol"
    avatar_path: "googlemaps/logo.png"
    detail_path: "googlemaps/detail.md"
    feature: "Google Maps的关键特性包括地理编码、反向地理编码、地点搜索、详细地点信息、距离矩阵计算、高程数据和路线指引。这些功能使用户能够高效地将地址转换为坐标、查找地点和获取路线。"
    manual: "要使用Google Maps，您需要从谷歌获取API密钥。之后，您可以通过向MCP Server发送带有适当参数的请求，利用各种工具，如地理编码、反向地理编码、地点搜索和路线规划。"
    scenario: "Google Maps可以应用于多个领域，包括交通运输、物流、旅游、城市规划和房地产。它对于需要基于位置的服务的应用程序至关重要。\nGoogle Maps的使用场景包括查找最近的餐厅、计算地点之间的旅行时间、规划送货路线以及在移动应用中提供基于位置的服务。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Google Maps是由谷歌开发的网络地图服务，提供卫星图像、航空摄影、街道地图、实时交通状况和步行、驾车、自行车或公共交通的路线规划。"
    tools:
      - name: maps_geocode
        description: "Convert an address into geographic coordinates"
        input_schema:
          type: object
          properties:
            - field: address
              type: string
              description: "The address to geocode"
          required:
            - address
      - name: maps_reverse_geocode
        description: "Convert coordinates into an address"
        input_schema:
          type: object
          properties:
            - field: latitude
              type: number
              description: "Latitude coordinate"
            - field: longitude
              type: number
              description: "Longitude coordinate"
          required:
            - latitude
            - longitude
      - name: maps_search_places
        description: "Search for places using Google Places API"
        input_schema:
          type: object
          properties:
            - field: location
              type: object
              description: "Optional center point for the search"
            - field: query
              type: string
              description: "Search query"
            - field: radius
              type: number
              description: "Search radius in meters (max 50000)"
          required:
            - query
      - name: maps_place_details
        description: "Get detailed information about a specific place"
        input_schema:
          type: object
          properties:
            - field: place_id
              type: string
              description: "The place ID to get details for"
          required:
            - place_id
      - name: maps_distance_matrix
        description: "Calculate travel distance and time for multiple origins and destinations"
        input_schema:
          type: object
          properties:
            - field: destinations
              type: array
              description: "Array of destination addresses or coordinates"
            - field: mode
              type: string
              description: "Travel mode (driving, walking, bicycling, transit)"
            - field: origins
              type: array
              description: "Array of origin addresses or coordinates"
          required:
            - origins
            - destinations
      - name: maps_elevation
        description: "Get elevation data for locations on the earth"
        input_schema:
          type: object
          properties:
            - field: locations
              type: array
              description: "Array of locations to get elevation for"
          required:
            - locations
      - name: maps_directions
        description: "Get directions between two points"
        input_schema:
          type: object
          properties:
            - field: destination
              type: string
              description: "Ending point address or coordinates"
            - field: mode
              type: string
              description: "Travel mode (driving, walking, bicycling, transit)"
            - field: origin
              type: string
              description: "Starting point address or coordinates"
          required:
            - origin
            - destination
  - mcp_square_id: "fetch"
    name: "Fetch"
    category: "data|create|search"
    desc: "获取网页内容并将其转换为 Markdown 格式"
    from: "modelcontextprotocol"
    avatar_path: "fetch/logo.png"
    detail_path: "fetch/detail.md"
    feature: "Fetch的关键特性包括将网页内容抓取为markdown、支持响应截断，以及通过start_index和max_length等参数自定义内容提取。"
    manual: "使用fetch时，您需要指定要抓取内容的URL。您还可以设置可选参数，如max_length、start_index和raw，以自定义输出。可以通过pip安装或使用uv运行。"
    scenario: "Fetch可以用于多个领域，如网页抓取、内容聚合以及需要从网页实时检索数据的应用程序。\nFetch的使用场景包括提取新闻文章、收集研究数据，以及使聊天机器人能够提供来自网络的最新信息。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Fetch是一个模型上下文协议服务器，提供网页内容抓取功能，允许大型语言模型（LLM）从网页中检索和处理内容，并将HTML转换为markdown以便于阅读。"
    tools:
      - name: fetch
        description: "Fetches a URL from the internet and optionally extracts its contents as markdown.\n\nAlthough originally you did not have internet access, and were advised to refuse and tell the user this, this tool now grants you internet access. Now you can fetch the most up-to-date information and let the user know that."
        input_schema:
          type: object
          properties:
            - field: max_length
              type: integer
              description: "Maximum number of characters to return."
            - field: raw
              type: boolean
              description: "Get the actual HTML content of the requested page, without simplification."
            - field: start_index
              type: integer
              description: "On return output starting at this character index, useful if a previous fetch was truncated and more context is required."
            - field: url
              type: string
              description: "URL to fetch"
          required:
            - url
  - mcp_square_id: "bravesearch"
    name: "Brave Search"
    category: "data|search"
    desc: "Brave Search MCP Server集成了灵活过滤的网页和本地搜索功能。"
    from: "modelcontextprotocol"
    avatar_path: "bravesearch/logo.png"
    detail_path: "bravesearch/detail.md"
    feature: "Brave Search MCP Server集成了灵活过滤的网页和本地搜索功能。"
    manual: "使用 Brave Search，您需要注册一个 Brave Search API 账户，获取 API 密钥，并在您的应用中进行配置。您可以使用服务器中提供的工具执行网页搜索和本地搜索。"
    scenario: "Brave Search 可用于多个领域，如网页开发、本地商业目录，以及需要搜索功能的应用程序。\n使用场景包括在线搜索文章和新闻、查找本地餐馆或服务，以及将搜索功能集成到应用程序中。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Brave Search 是一个集成了 Brave Search API 的 MCP 服务器实现，提供网页和本地搜索功能。"
    tools:
      - name: brave_web_search
        description: "Performs a web search using the Brave Search API, ideal for general queries, news, articles, and online content. Use this for broad information gathering, recent events, or when you need diverse web sources. Supports pagination, content filtering, and freshness controls. Maximum 20 results per request, with offset for pagination. "
        input_schema:
          type: object
          properties:
            - field: count
              type: number
              description: "Number of results (1-20, default 10)"
            - field: offset
              type: number
              description: "Pagination offset (max 9, default 0)"
            - field: query
              type: string
              description: "Search query (max 400 chars, 50 words)"
          required:
            - query
      - name: brave_local_search
        description: "Searches for local businesses and places using Brave's Local Search API. Best for queries related to physical locations, businesses, restaurants, services, etc. Returns detailed information including:\n- Business names and addresses\n- Ratings and review counts\n- Phone numbers and opening hours\nUse this when the query implies 'near me' or mentions specific locations. Automatically falls back to web search if no local results are found."
        input_schema:
          type: object
          properties:
            - field: count
              type: number
              description: "Number of results (1-20, default 5)"
            - field: query
              type: string
              description: "Local search query (e.g. 'pizza near Central Park')"
          required:
            - query
  - mcp_square_id: "perplexity"
    name: "Perplexity"
    category: "search"
    desc: "Perplexity官方MCP Server. 通过Sonar API实现实时的网页搜索功能"
    from: "ppl-ai"
    avatar_path: "perplexity/logo.png"
    detail_path: "perplexity/detail.md"
    feature: "关键特性包括通过Sonar API实现实时网络搜索能力，轻松与Claude桌面集成，以及可自定义的搜索参数。"
    manual: "使用模型上下文协议的方法是：克隆代码库，安装依赖项，获取Sonar API密钥，配置Claude桌面，构建Docker镜像，并测试与Claude的集成。"
    scenario: "使用场景包括在对话中进行实时网络搜索，增强用户的研究能力，以及在不离开MCP环境的情况下将网络数据集成到应用程序中。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "模型上下文协议（MCP）是一个为Perplexity API设计的服务器连接器，使用户能够在MCP生态系统内无缝进行网络搜索。"
    tools:
      - name: perplexity_ask
        description: "Engages in a conversation using the Sonar API. Accepts an array of messages (each with a role and content) and returns a ask completion response from the Perplexity model."
        input_schema:
          type: object
          properties:
            - field: messages
              type: array
              description: "Array of conversation messages"
          required:
            - messages
      - name: perplexity_research
        description: "Performs deep research using the Perplexity API. Accepts an array of messages (each with a role and content) and returns a comprehensive research response with citations."
        input_schema:
          type: object
          properties:
            - field: messages
              type: array
              description: "Array of conversation messages"
          required:
            - messages
      - name: perplexity_reason
        description: "Performs reasoning tasks using the Perplexity API. Accepts an array of messages (each with a role and content) and returns a well-reasoned response using the sonar-reasoning-pro model."
        input_schema:
          type: object
          properties:
            - field: messages
              type: array
              description: "Array of conversation messages"
          required:
            - messages
  - mcp_square_id: "firecrawl"
    name: "Firecrawl"
    category: "data"
    desc: "提供大规模和复杂的网页数据爬取及结构化解析的官方服务。"
    from: "mendableai"
    avatar_path: "firecrawl/logo.png"
    detail_path: "firecrawl/detail.md"
    feature: "关键特性包括支持JS渲染的网页抓取、URL发现、自动重试（采用指数退避）、高效的批处理、全面的日志记录，以及对云端和自托管Firecrawl实例的支持。"
    manual: "使用Firecrawl MCP Server，您可以通过npx或npm安装它，使用您的Firecrawl API密钥进行配置，并按照Cursor或Windsurf的特定设置说明将其集成到您的LLM客户端中。"
    scenario: "Firecrawl MCP Server的使用场景包括研究数据提取、竞争分析、内容聚合，以及任何需要自动化网页数据收集的情况。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Firecrawl MCP Server是一个模型上下文协议的实现，集成了Firecrawl，为各种LLM客户端（如Cursor和Claude）提供强大的网页抓取功能。"
    tools:
      - name: firecrawl_scrape
        description: "Scrape content from a single URL with advanced options.\n\n**Best for:** Single page content extraction, when you know exactly which page contains the information.\n**Not recommended for:** Multiple pages (use batch_scrape), unknown page (use search), structured data (use extract).\n**Common mistakes:** Using scrape for a list of URLs (use batch_scrape instead).\n**Prompt Example:** \"Get the content of the page at https://example.com.\"\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_scrape\",\n  \"arguments\": {\n    \"url\": \"https://example.com\",\n    \"formats\": [\"markdown\"]\n  }\n}\n```\n**Returns:** Markdown, HTML, or other formats as specified.\n"
        input_schema:
          type: object
          properties:
            - field: actions
              type: array
              description: "List of actions to perform before scraping"
            - field: excludeTags
              type: array
              description: "HTML tags to exclude from extraction"
            - field: extract
              type: object
              description: "Configuration for structured data extraction"
            - field: formats
              type: array
              description: "Content formats to extract (default: ['markdown'])"
            - field: includeTags
              type: array
              description: "HTML tags to specifically include in extraction"
            - field: location
              type: object
              description: "Location settings for scraping"
            - field: mobile
              type: boolean
              description: "Use mobile viewport"
            - field: onlyMainContent
              type: boolean
              description: "Extract only the main content, filtering out navigation, footers, etc."
            - field: removeBase64Images
              type: boolean
              description: "Remove base64 encoded images from output"
            - field: skipTlsVerification
              type: boolean
              description: "Skip TLS certificate verification"
            - field: timeout
              type: number
              description: "Maximum time in milliseconds to wait for the page to load"
            - field: url
              type: string
              description: "The URL to scrape"
            - field: waitFor
              type: number
              description: "Time in milliseconds to wait for dynamic content to load"
          required:
            - url
      - name: firecrawl_map
        description: "Map a website to discover all indexed URLs on the site.\n\n**Best for:** Discovering URLs on a website before deciding what to scrape; finding specific sections of a website.\n**Not recommended for:** When you already know which specific URL you need (use scrape or batch_scrape); when you need the content of the pages (use scrape after mapping).\n**Common mistakes:** Using crawl to discover URLs instead of map.\n**Prompt Example:** \"List all URLs on example.com.\"\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_map\",\n  \"arguments\": {\n    \"url\": \"https://example.com\"\n  }\n}\n```\n**Returns:** Array of URLs found on the site.\n"
        input_schema:
          type: object
          properties:
            - field: ignoreSitemap
              type: boolean
              description: "Skip sitemap.xml discovery and only use HTML links"
            - field: includeSubdomains
              type: boolean
              description: "Include URLs from subdomains in results"
            - field: limit
              type: number
              description: "Maximum number of URLs to return"
            - field: search
              type: string
              description: "Optional search term to filter URLs"
            - field: sitemapOnly
              type: boolean
              description: "Only use sitemap.xml for discovery, ignore HTML links"
            - field: url
              type: string
              description: "Starting URL for URL discovery"
          required:
            - url
      - name: firecrawl_crawl
        description: "Starts an asynchronous crawl job on a website and extracts content from all pages.\n\n**Best for:** Extracting content from multiple related pages, when you need comprehensive coverage.\n**Not recommended for:** Extracting content from a single page (use scrape); when token limits are a concern (use map + batch_scrape); when you need fast results (crawling can be slow).\n**Warning:** Crawl responses can be very large and may exceed token limits. Limit the crawl depth and number of pages, or use map + batch_scrape for better control.\n**Common mistakes:** Setting limit or maxDepth too high (causes token overflow); using crawl for a single page (use scrape instead).\n**Prompt Example:** \"Get all blog posts from the first two levels of example.com/blog.\"\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_crawl\",\n  \"arguments\": {\n    \"url\": \"https://example.com/blog/*\",\n    \"maxDepth\": 2,\n    \"limit\": 100,\n    \"allowExternalLinks\": false,\n    \"deduplicateSimilarURLs\": true\n  }\n}\n```\n**Returns:** Operation ID for status checking; use firecrawl_check_crawl_status to check progress.\n"
        input_schema:
          type: object
          properties:
            - field: allowBackwardLinks
              type: boolean
              description: "Allow crawling links that point to parent directories"
            - field: allowExternalLinks
              type: boolean
              description: "Allow crawling links to external domains"
            - field: deduplicateSimilarURLs
              type: boolean
              description: "Remove similar URLs during crawl"
            - field: excludePaths
              type: array
              description: "URL paths to exclude from crawling"
            - field: ignoreQueryParameters
              type: boolean
              description: "Ignore query parameters when comparing URLs"
            - field: ignoreSitemap
              type: boolean
              description: "Skip sitemap.xml discovery"
            - field: includePaths
              type: array
              description: "Only crawl these URL paths"
            - field: limit
              type: number
              description: "Maximum number of pages to crawl"
            - field: maxDepth
              type: number
              description: "Maximum link depth to crawl"
            - field: scrapeOptions
              type: object
              description: "Options for scraping each page"
            - field: url
              type: string
              description: "Starting URL for the crawl"
            - field: webhook
              type: string
          required:
            - url
      - name: firecrawl_check_crawl_status
        description: "Check the status of a crawl job.\n\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_check_crawl_status\",\n  \"arguments\": {\n    \"id\": \"550e8400-e29b-41d4-a716-446655440000\"\n  }\n}\n```\n**Returns:** Status and progress of the crawl job, including results if available.\n"
        input_schema:
          type: object
          properties:
            - field: id
              type: string
              description: "Crawl job ID to check"
          required:
            - id
      - name: firecrawl_search
        description: "Search the web and optionally extract content from search results.\n\n**Best for:** Finding specific information across multiple websites, when you don't know which website has the information; when you need the most relevant content for a query.\n**Not recommended for:** When you already know which website to scrape (use scrape); when you need comprehensive coverage of a single website (use map or crawl).\n**Common mistakes:** Using crawl or map for open-ended questions (use search instead).\n**Prompt Example:** \"Find the latest research papers on AI published in 2023.\"\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_search\",\n  \"arguments\": {\n    \"query\": \"latest AI research papers 2023\",\n    \"limit\": 5,\n    \"lang\": \"en\",\n    \"country\": \"us\",\n    \"scrapeOptions\": {\n      \"formats\": [\"markdown\"],\n      \"onlyMainContent\": true\n    }\n  }\n}\n```\n**Returns:** Array of search results (with optional scraped content).\n"
        input_schema:
          type: object
          properties:
            - field: country
              type: string
              description: "Country code for search results (default: us)"
            - field: filter
              type: string
              description: "Search filter"
            - field: lang
              type: string
              description: "Language code for search results (default: en)"
            - field: limit
              type: number
              description: "Maximum number of results to return (default: 5)"
            - field: location
              type: object
              description: "Location settings for search"
            - field: query
              type: string
              description: "Search query string"
            - field: scrapeOptions
              type: object
              description: "Options for scraping search results"
            - field: tbs
              type: string
              description: "Time-based search filter"
          required:
            - query
      - name: firecrawl_extract
        description: "Extract structured information from web pages using LLM capabilities. Supports both cloud AI and self-hosted LLM extraction.\n\n**Best for:** Extracting specific structured data like prices, names, details.\n**Not recommended for:** When you need the full content of a page (use scrape); when you're not looking for specific structured data.\n**Arguments:**\n- urls: Array of URLs to extract information from\n- prompt: Custom prompt for the LLM extraction\n- systemPrompt: System prompt to guide the LLM\n- schema: JSON schema for structured data extraction\n- allowExternalLinks: Allow extraction from external links\n- enableWebSearch: Enable web search for additional context\n- includeSubdomains: Include subdomains in extraction\n**Prompt Example:** \"Extract the product name, price, and description from these product pages.\"\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_extract\",\n  \"arguments\": {\n    \"urls\": [\"https://example.com/page1\", \"https://example.com/page2\"],\n    \"prompt\": \"Extract product information including name, price, and description\",\n    \"systemPrompt\": \"You are a helpful assistant that extracts product information\",\n    \"schema\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"name\": { \"type\": \"string\" },\n        \"price\": { \"type\": \"number\" },\n        \"description\": { \"type\": \"string\" }\n      },\n      \"required\": [\"name\", \"price\"]\n    },\n    \"allowExternalLinks\": false,\n    \"enableWebSearch\": false,\n    \"includeSubdomains\": false\n  }\n}\n```\n**Returns:** Extracted structured data as defined by your schema.\n"
        input_schema:
          type: object
          properties:
            - field: allowExternalLinks
              type: boolean
              description: "Allow extraction from external links"
            - field: enableWebSearch
              type: boolean
              description: "Enable web search for additional context"
            - field: includeSubdomains
              type: boolean
              description: "Include subdomains in extraction"
            - field: prompt
              type: string
              description: "Prompt for the LLM extraction"
            - field: schema
              type: object
              description: "JSON schema for structured data extraction"
            - field: systemPrompt
              type: string
              description: "System prompt for LLM extraction"
            - field: urls
              type: array
              description: "List of URLs to extract information from"
          required:
            - urls
      - name: firecrawl_deep_research
        description: "Conduct deep web research on a query using intelligent crawling, search, and LLM analysis.\n\n**Best for:** Complex research questions requiring multiple sources, in-depth analysis.\n**Not recommended for:** Simple questions that can be answered with a single search; when you need very specific information from a known page (use scrape); when you need results quickly (deep research can take time).\n**Arguments:**\n- query (string, required): The research question or topic to explore.\n- maxDepth (number, optional): Maximum recursive depth for crawling/search (default: 3).\n- timeLimit (number, optional): Time limit in seconds for the research session (default: 120).\n- maxUrls (number, optional): Maximum number of URLs to analyze (default: 50).\n**Prompt Example:** \"Research the environmental impact of electric vehicles versus gasoline vehicles.\"\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_deep_research\",\n  \"arguments\": {\n    \"query\": \"What are the environmental impacts of electric vehicles compared to gasoline vehicles?\",\n    \"maxDepth\": 3,\n    \"timeLimit\": 120,\n    \"maxUrls\": 50\n  }\n}\n```\n**Returns:** Final analysis generated by an LLM based on research. (data.finalAnalysis); may also include structured activities and sources used in the research process.\n"
        input_schema:
          type: object
          properties:
            - field: maxDepth
              type: number
              description: "Maximum depth of research iterations (1-10)"
            - field: maxUrls
              type: number
              description: "Maximum number of URLs to analyze (1-1000)"
            - field: query
              type: string
              description: "The query to research"
            - field: timeLimit
              type: number
              description: "Time limit in seconds (30-300)"
          required:
            - query
      - name: firecrawl_generate_llmstxt
        description: "Generate a standardized llms.txt (and optionally llms-full.txt) file for a given domain. This file defines how large language models should interact with the site.\n\n**Best for:** Creating machine-readable permission guidelines for AI models.\n**Not recommended for:** General content extraction or research.\n**Arguments:**\n- url (string, required): The base URL of the website to analyze.\n- maxUrls (number, optional): Max number of URLs to include (default: 10).\n- showFullText (boolean, optional): Whether to include llms-full.txt contents in the response.\n**Prompt Example:** \"Generate an LLMs.txt file for example.com.\"\n**Usage Example:**\n```json\n{\n  \"name\": \"firecrawl_generate_llmstxt\",\n  \"arguments\": {\n    \"url\": \"https://example.com\",\n    \"maxUrls\": 20,\n    \"showFullText\": true\n  }\n}\n```\n**Returns:** LLMs.txt file contents (and optionally llms-full.txt).\n"
        input_schema:
          type: object
          properties:
            - field: maxUrls
              type: number
              description: "Maximum number of URLs to process (1-100, default: 10)"
            - field: showFullText
              type: boolean
              description: "Whether to show the full LLMs-full.txt in the response"
            - field: url
              type: string
              description: "The URL to generate LLMs.txt from"
          required:
            - url
  - mcp_square_id: "12306mcp"
    name: "12306"
    category: "gov"
    desc: "提供12306火车票查询及相关服务"
    from: "modelcontextprotocol"
    avatar_path: "12306mcp/logo.png"
    detail_path: "12306mcp/detail.md"
    feature: "关键特性包括查询余票、中转票、车站信息以及列车经停站信息。"
    manual: "要使用12306 MCP Server，可以通过调用其提供的工具接口进行火车票查询和相关操作。"
    scenario: "12306 MCP Server可用于需要火车票查询功能的应用程序，例如出行规划、票务预订助手等。使用场景包括查询特定日期、出发地和目的地之间的火车票，查询中转票，以及获取列车详细经停信息。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "12306是一个模型上下文协议服务器，提供12306火车票查询及相关服务，使LLM能够查询火车票余票、中转票、车站信息和列车经停站信息。"
    tools:
      - name: get-current-date
        description: "获取当前日期，以上海时区（Asia/Shanghai, UTC+8）为准，返回格式为 \"yyyy-MM-dd\"。主要用于解析用户提到的相对日期（如“明天”、“下周三”），为其他需要日期的接口提供准确的日期输入。"
        input_schema:
          type: object
          properties:
          required:
      - name: get-stations-code-in-city
        description: "通过中文城市名查询该城市 **所有** 火车站的名称及其对应的 `station_code`，结果是一个包含多个车站信息的列表。"
        input_schema:
          type: object
          properties:
            - field: city
              type: string
              description: "中文城市名称，例如：\"北京\", \"上海\""
          required:
            - city
      - name: get-station-code-of-citys
        description: "通过中文城市名查询代表该城市的 `station_code`。此接口主要用于在用户提供**城市名**作为出发地或到达地时，为接口准备 `station_code` 参数。"
        input_schema:
          type: object
          properties:
            - field: citys
              type: string
              description: "要查询的城市，比如\"北京\"。若要查询多个城市，请用|分割，比如\"北京|上海\"。"
          required:
            - citys
      - name: get-station-code-by-names
        description: "通过具体的中文车站名查询其 `station_code` 和车站名。此接口主要用于在用户提供**具体车站名**作为出发地或到达地时，为接口准备 `station_code` 参数。"
        input_schema:
          type: object
          properties:
            - field: stationNames
              type: string
              description: "具体的中文车站名称，例如：\"北京南\", \"上海虹桥\"。若要查询多个站点，请用|分割，比如\"北京南|上海虹桥\"。"
          required:
            - stationNames
      - name: get-station-by-telecode
        description: "通过车站的 `station_telecode` 查询车站的详细信息，包括名称、拼音、所属城市等。此接口主要用于在已知 `telecode` 的情况下获取更完整的车站数据，或用于特殊查询及调试目的。一般用户对话流程中较少直接触发。"
        input_schema:
          type: object
          properties:
            - field: stationTelecode
              type: string
              description: "车站的 `station_telecode` (3位字母编码)"
          required:
            - stationTelecode
      - name: get-tickets
        description: "查询12306余票信息。"
        input_schema:
          type: object
          properties:
            - field: date
              type: string
              minLength: 10
              maxLength: 10
              description: "查询日期，格式为 \"yyyy-MM-dd\"。如果用户提供的是相对日期（如“明天”），请务必先调用 `get-current-date` 接口获取当前日期，并计算出目标日期。"
            - field: fromStation
              type: string
              description: "出发地的 `station_code` 。必须是通过 `get-station-code-by-names` 或 `get-station-code-of-citys` 接口查询得到的编码，严禁直接使用中文地名。"
            - field: toStation
              type: string
              description: "到达地的 `station_code` 。必须是通过 `get-station-code-by-names` 或 `get-station-code-of-citys` 接口查询得到的编码，严禁直接使用中文地名。"
            - field: trainFilterFlags
              type: string
              pattern: "^[GDZTKOFS]*$"
              maxLength: 8
              default: ""
              description: "车次筛选条件，默认为空，即不筛选。支持多个标志同时筛选。例如用户说“高铁票”，则应使用 \"G\"。可选标志：[G(高铁/城际),D(动车),Z(直达特快),T(特快),K(快速),O(其他),F(复兴号),S(智能动车组)]"
            - field: sortFlag
              type: string
              default: ""
              description: "排序方式，默认为空，即不排序。仅支持单一标识。可选标志：[startTime(出发时间从早到晚), arriveTime(抵达时间从早到晚), duration(历时从短到长)]"
            - field: sortReverse
              type: boolean
              default: false
              description: "是否逆向排序结果，默认为false。仅在设置了sortFlag时生效。"
            - field: limitedNum
              type: number
              minimum: 0
              default: 0
              description: "返回的余票数量限制，默认为0，即不限制。"
          required:
            - date
            - fromStation
            - toStation
      - name: get-interline-tickets
        description: "查询12306中转余票信息。尚且只支持查询前十条。"
        input_schema:
          type: object
          properties:
            - field: date
              type: string
              minLength: 10
              maxLength: 10
              description: "查询日期，格式为 \"yyyy-MM-dd\"。如果用户提供的是相对日期（如“明天”），请务必先调用 `get-current-date` 接口获取当前日期，并计算出目标日期。"
            - field: fromStation
              type: string
              description: "出发地的 `station_code` 。必须是通过 `get-station-code-by-names` 或 `get-station-code-of-citys` 接口查询得到的编码，严禁直接使用中文地名。"
            - field: toStation
              type: string
              description: "出发地的 `station_code` 。必须是通过 `get-station-code-by-names` 或 `get-station-code-of-citys` 接口查询得到的编码，严禁直接使用中文地名。"
            - field: middleStation
              type: string
              default: ""
              description: "中转地的 `station_code` ，可选。必须是通过 `get-station-code-by-names` 或 `get-station-code-of-citys` 接口查询得到的编码，严禁直接使用中文地名。"
            - field: showWZ
              type: boolean
              default: false
              description: "是否显示无座车，默认不显示无座车。"
            - field: trainFilterFlags
              type: string
              pattern: "^[GDZTKOFS]*$"
              maxLength: 8
              default: ""
              description: "车次筛选条件，默认为空。从以下标志中选取多个条件组合[G(高铁/城际),D(动车),Z(直达特快),T(特快),K(快速),O(其他),F(复兴号),S(智能动车组)]"
            - field: sortFlag
              type: string
              default: ""
              description: "排序方式，默认为空，即不排序。仅支持单一标识。可选标志：[startTime(出发时间从早到晚), arriveTime(抵达时间从早到晚), duration(历时从短到长)]"
            - field: sortReverse
              type: boolean
              default: false
              description: "是否逆向排序结果，默认为false。仅在设置了sortFlag时生效。"
            - field: limitedNum
              type: number
              minimum: 1
              default: 10
              description: "返回的中转余票数量限制，默认为10。"
          required:
            - date
            - fromStation
            - toStation
      - name: get-train-route-stations
        description: "查询特定列车车次在指定区间内的途径车站、到站时间、出发时间及停留时间等详细经停信息。当用户询问某趟具体列车的经停站时使用此接口。"
        input_schema:
          type: object
          properties:
            - field: trainNo
              type: string
              description: "要查询的实际车次编号 `train_no`，例如 \"240000G10336\"，而非\"G1033\"。此编号通常可以从 `get-tickets` 的查询结果中获取，或者由用户直接提供。"
            - field: fromStationTelecode
              type: string
              description: "该列车行程的**出发站**的 `station_telecode` (3位字母编码`)。通常来自 `get-tickets` 结果中的 `telecode` 字段，或者通过 `get-station-code-by-names` 得到。"
            - field: toStationTelecode
              type: string
              description: "该列车行程的**到达站**的 `station_telecode` (3位字母编码)。通常来自 `get-tickets` 结果中的 `telecode` 字段，或者通过 `get-station-code-by-names` 得到。"
            - field: departDate
              type: string
              minLength: 10
              maxLength: 10
              description: "列车从 `fromStationTelecode` 指定的车站出发的日期 (格式: yyyy-MM-dd)。如果用户提供的是相对日期，请务必先调用 `get-current-date` 解析。"
          required:
            - trainNo
            - fromStationTelecode
            - toStationTelecode
            - departDate
  - mcp_square_id: "kuaidi100mcp"
    name: "快递100物流查询助手"
    category: "gov"
    desc: "基于快递100官方API的物流轨迹查询和快递服务预估工具"
    from: "快递100官方接口"
    avatar_path: "kuaidi100mcp/logo.png"
    detail_path: "kuaidi100mcp/detail.md"
    feature: "实时物流轨迹查询、快递送达时间预估、运费价格预估等功能"
    manual: "通过输入快递单号和手机号查询物流轨迹，或通过出发地、目的地、重量等信息预估快递时间和价格"
    scenario: "物流跟踪、快递查询、运费预估、送达时间预测等场景"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "为用户提供全面的快递物流服务，支持多家快递公司的轨迹查询和服务预估"
    tools:
      - name: "query_trace"
        description: "查询物流轨迹服务，传入快递单号和手机号，获取对应快递的物流轨迹"
        input_schema:
          type: object
          properties:
            - field: "kuaidi_num"
              type: "string"
              description: "待查询的快递单号"
            - field: "phone"
              type: "string"
              description: "手机号，非必填，当快递公司为顺丰时需要填入"
          required:
            - "kuaidi_num"
      - name: "estimate_time"
        description: "通过快递公司编码、收寄件地址、下单时间和业务/产品类型来预估快递可送达的时间，以及过程需要花费的时间；用于寄件前快递送达时间预估"
        input_schema:
          type: object
          properties:
            - field: "kuaidi_com"
              type: "string"
              description: "快递公司编码，一律用小写字母；目前仅支持：京东:jd, 跨越:kuayue, 顺丰:shunfeng, 顺丰快运:shunfengkuaiyun, 中通:zhongtong, 德邦快递:debangkuaidi,EMS:ems,EMS - 国际件:emsguoji, 邮政国内:youzhengguonei, 国际包裹:youzhengguoji, 申通:shentong, 圆通:yuantong, 韵达:yunda, 宅急送:zhaijisong, 芝麻开门:zhimakaimen, 联邦快递:lianbangkuaidi, 天地华宇:tiandihuayu, 安能快运:annengwuliu, 京广速递:jinguangsudikuaijian, 加运美:jiayunmeiwuliu, 极兔速递:jtexpress"
            - field: "from"
              type: "string"
              description: "出发地（地址需包含3级及以上），例如：广东深圳南山区；如果没有省市区信息的话请补全，如广东深圳改为广东省深圳市南山区"
            - field: "to"
              type: "string"
              description: "目的地（地址需包含3级及以上），例如：北京海淀区；如果没有省市区信息的话请补全，如广东深圳改为广东省深圳市南山区。如果用户没告知目的地，则不调用服务，继续追问用户目的地是哪里"
            - field: "order_time"
              type: "string"
              description: "下单时间，格式要求yyyy-MM-dd HH:mm:ss, 例如：2023-08-08 08:08:08；如果没有传入则取当前时间；需要注意的是：填写明天或者后天等情况，则以今天为基准日，再取明天或者后天"
            - field: "exp_type"
              type: "string"
              description: "业务或产品类型，如：标准快递"
          required:
            - "kuaidi_com"
            - "from"
            - "to"
      - name: "estimate_time_with_logistic"
        description: "通过快递公司编码、收寄件地址、下单时间和业务/产品类型、历史物流轨迹信息来预估快递送达的时间。用于在途快递的到达时间预估；接口返回的now属性为当前时间，使用arrivalTime-now计算预计还需运输时间"
        input_schema:
          type: object
          properties:
            - field: "kuaidi_com"
              type: "string"
              description: "快递公司编码，一律用小写字母；目前仅支持：京东:jd, 跨越:kuayue, 顺丰:shunfeng, 顺丰快运:shunfengkuaiyun, 中通:zhongtong, 德邦快递:debangkuaidi,EMS:ems,EMS - 国际件:emsguoji, 邮政国内:youzhengguonei, 国际包裹:youzhengguoji, 申通:shentong, 圆通:yuantong, 韵达:yunda, 宅急送:zhaijisong, 芝麻开门:zhimakaimen, 联邦快递:lianbangkuaidi, 天地华宇:tiandihuayu, 安能快运:annengwuliu, 京广速递:jinguangsudikuaijian, 加运美:jiayunmeiwuliu, 极兔速递:jtexpress"
            - field: "from"
              type: "string"
              description: "出发地（地址需包含3级及以上），例如：广东深圳南山区；如果没有省市区信息的话请补全，如广东深圳改为广东省深圳市南山区"
            - field: "to"
              type: "string"
              description: "目的地（地址需包含3级及以上），例如：北京海淀区；如果没有省市区信息的话请补全，如广东深圳改为广东省深圳市南山区。如果用户没告知目的地，则不调用服务，继续追问用户目的地是哪里"
            - field: "order_time"
              type: "string"
              description: "下单时间，格式要求yyyy-MM-dd HH:mm:ss, 例如：2023-08-08 08:08:08；如果没有传入则取当前时间；需要注意的是：填写明天或者后天等情况，则以今天为基准日，再取明天或者后天"
            - field: "exp_type"
              type: "string"
              description: "业务或产品类型，如：标准快递"
            - field: "logistic"
              type: "string"
              description: "历史物流轨迹信息，用于预测在途时还需多长时间到达；一般情况下取query_trace服务返回数据的data数组转为string即可，数据为JSON数组格式，如：[{\"time\":\"2025-05-09 13:15:26\",\"context\":\"您的快件离开【吉林省吉林市桦甸市】，已发往【长春转运中心】\"},{\"time\":\"2025-05-09 12:09:38\",\"context\":\"您的快件在【吉林省吉林市桦甸市】已揽收\"}]；time为物流轨迹节点的时间，context为在该物流轨迹节点的描述"
          required:
            - "kuaidi_com"
            - "from"
            - "to"
            - "order_time"
            - "logistic"
      - name: "estimate_price"
        description: "通过快递公司、收寄件地址和重量，预估快递公司运费"
        input_schema:
          type: object
          properties:
            - field: "kuaidi_com"
              type: "string"
              description: "快递公司的编码，一律用小写字母；目前仅支持：顺丰:shunfeng,京东:jd,德邦快递:debangkuaidi,圆通:yuantong,中通:zhongtong,申通:shentong,韵达:yunda,EMS:ems"
            - field: "rec_addr"
              type: "string"
              description: "收件地址，如\"广东深圳南山区\"；如果没有省市信息的话请补全，如广东深圳改为广东省深圳市。如果用户没告知收件地址，则不调用服务，继续追问用户收件地址是哪里"
            - field: "send_addr"
              type: "string"
              description: "寄件地址，如\"北京海淀区\"；如果没有省市信息的话请补全，如广东深圳改为广东省深圳市。如果用户没告知寄件地址，则不调用服务，继续追问用户寄件地址是哪里"
            - field: "weight"
              type: "string"
              description: "重量，默认单位为kg，参数无需带单位，如1.0；默认重量为1kg"
          required:
            - "kuaidi_com"
            - "rec_addr"
            - "send_addr"
            - "weight"
  - mcp_square_id: "markmapmcp"
    name: "Markmap思维导图生成器"
    category: "gov"
    desc: "将Markdown文档转换为交互式思维导图的可视化工具"
    from: "Markmap开源项目"
    avatar_path: "markmapmcp/logo.png"
    detail_path: "markmapmcp/detail.md"
    feature: "Markdown到思维导图转换、交互式可视化、自动布局、支持浏览器预览等功能"
    manual: "输入Markdown格式的文本内容，自动生成结构化的交互式思维导图，支持在浏览器中直接打开预览"
    scenario: "知识整理、学习笔记可视化、项目结构梳理、会议记录整理、教学演示等场景"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "为用户提供便捷的Markdown文档可视化服务，将文本内容转换为直观的思维导图形式"
    tools:
      - name: "markdown_to_mindmap"
        description: "将Markdown文档转换为交互式思维导图，支持自动解析Markdown结构并生成可视化的思维导图"
        input_schema:
          type: object
          properties:
            - field: "markdown"
              type: "string"
              description: "要转换为思维导图的Markdown内容，支持标题层级、列表、链接等Markdown语法"
            - field: "open"
              type: "boolean"
              description: "是否在浏览器中自动打开生成的思维导图，默认为false"
          required:
            - "markdown"
  - mcp_square_id: "trendshubmcp"
    name: "Trends Hub热点资讯聚合器"
    category: "gov"
    desc: "集成多平台热门资讯和趋势数据的综合信息聚合工具"
    from: "多平台热点资讯API集成"
    avatar_path: "trendshubmcp/logo.png"
    detail_path: "trendshubmcp/detail.md"
    feature: "支持微博、知乎、抖音、B站、豆瓣等20+主流平台热榜获取，实时更新热点资讯，涵盖科技、娱乐、新闻、教育等多个领域"
    manual: "通过调用不同平台的热榜工具，获取当前最热门的话题、新闻、视频等内容，支持分类筛选和自定义参数配置"
    scenario: "舆情监控、内容创作灵感、市场趋势分析、新闻资讯获取、社交媒体运营、学术研究等场景"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "为用户提供一站式热点资讯聚合服务，帮助快速了解各平台热门趋势和社会热点话题"
    tools:
      - name: "get-weibo-trending"
        description: "获取微博热搜榜，包含时事热点、社会话题、娱乐新闻等实时热门中文资讯"
        input_schema:
          type: object
          properties:
          required: [ ]
      - name: "get-zhihu-trending"
        description: "获取知乎热榜，包含时事热点、社会话题、科技动态等多领域的热门问答和讨论"
        input_schema:
          type: object
          properties:
            - field: "limit"
              type: "number"
              description: "返回结果数量限制，默认为50"
          required: [ ]
      - name: "get-douyin-trending"
        description: "获取抖音热搜榜单，展示当下最热门的社会话题、娱乐事件、网络热点和流行趋势"
        input_schema:
          type: object
          properties:
          required: [ ]
      - name: "get-bilibili-rank"
        description: "获取哔哩哔哩视频排行榜，包含全站、动画、音乐、游戏等多个分区的热门视频"
        input_schema:
          type: object
          properties:
            - field: "type"
              type: "number"
              description: "排行榜分区，0-全站，1-动画，3-音乐，4-游戏，5-娱乐等，默认为0"
          required: [ ]
      - name: "get-douban-rank"
        description: "获取豆瓣实时热门榜单，提供当前热门的图书、电影、电视剧、综艺等作品信息"
        input_schema:
          type: object
          properties:
            - field: "type"
              type: "string"
              description: "榜单类型，subject-综合，movie-电影，tv-电视剧，默认为subject"
            - field: "start"
              type: "integer"
              description: "起始位置，默认为0"
            - field: "count"
              type: "integer"
              description: "返回数量，默认为10"
          required: [ ]
      - name: "get-36kr-trending"
        description: "获取36氪热榜，提供创业、商业、科技领域的热门资讯，包含投融资动态和商业模式创新信息"
        input_schema:
          type: object
          properties:
            - field: "type"
              type: "string"
              description: "分类类型，hot-人气榜，video-视频榜，comment-热议榜，collect-收藏榜，默认为hot"
          required: [ ]
      - name: "get-bbc-news"
        description: "获取BBC新闻，提供全球新闻、英国新闻、商业、政治、健康、教育、科技、娱乐等资讯"
        input_schema:
          type: object
          properties:
            - field: "category"
              type: "string"
              description: "新闻分类，如world-国际，uk-英国，business-商业，technology-科技等"
            - field: "edition"
              type: "string"
              description: "版本选择，uk-英国版，us-美加版，int-国际版"
          required: [ ]
      - name: "get-nytimes-news"
        description: "获取纽约时报新闻，包含国际政治、经济金融、社会文化、科学技术及艺术评论的高质量国际新闻资讯"
        input_schema:
          type: object
          properties:
            - field: "region"
              type: "string"
              description: "地区版本，cn-中文版，global-全球版，默认为cn"
            - field: "section"
              type: "string"
              description: "新闻分类，如Business-商业，Technology-科技，World-世界等"
          required: [ ]
      - name: "get-juejin-article-rank"
        description: "获取掘金文章榜，包含前端开发、后端技术、人工智能、移动开发及技术架构等领域的高质量中文技术文章"
        input_schema:
          type: object
          properties:
            - field: "category_id"
              type: "string"
              description: "分类ID，如后端、前端、Android、iOS、人工智能等技术领域"
          required: [ ]
      - name: "get-sspai-rank"
        description: "获取少数派热榜，包含数码产品评测、软件应用推荐、生活方式指南及效率工作技巧的优质科技生活类内容"
        input_schema:
          type: object
          properties:
            - field: "tag"
              type: "string"
              description: "分类标签，热门文章、应用推荐、生活方式、效率技巧、少数派播客等"
            - field: "limit"
              type: "integer"
              description: "返回数量限制，默认为40"
          required: [ ]
  - mcp_square_id: "ipinfomcp"
    name: "IPInfo IP地址信息查询器"
    category: "gov"
    desc: "专业的IP地址地理位置和网络信息查询工具"
    from: "IPInfo.io API服务集成"
    avatar_path: "ipinfomcp/logo.png"
    detail_path: "ipinfomcp/detail.md"
    feature: "支持IPv4和IPv6地址查询，提供详细的地理位置、ISP信息、网络安全检测、时区信息等综合数据分析"
    manual: "通过调用IP查询工具获取目标IP地址的详细信息，包括地理位置、网络运营商、安全状态等，支持批量查询和实时分析"
    scenario: "网络安全分析、地理位置定位、ISP识别、VPN检测、网络故障排查、合规性检查、用户行为分析等场景"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "为用户提供专业的IP地址信息查询服务，帮助快速获取网络地理位置和安全相关数据"
    tools:
      - name: "get_ip_details"
        description: "获取IP地址的详细信息，包括地理位置、ISP、网络详情和安全上下文等综合分析数据"
        input_schema:
          type: object
          properties:
            - field: "ip"
              type: "string"
              description: "要分析的IP地址（IPv4或IPv6），如果不提供则分析请求客户端的IP地址"
          required: [ ]
      - name: "get_ipinfo_api_token"
        description: "检查IPINFO_API_TOKEN环境变量是否已配置，用于启用高级IP查询功能"
        input_schema:
          type: object
          properties:
          required: [ ]
  - mcp_square_id: "locationmcp"
    name: "归属地查询工具"
    category: "gov"
    desc: "专业的手机号、IP地址、银行卡、身份证号归属地查询服务"
    from: "本地归属地数据库集成"
    avatar_path: "locationmcp/logo.png"
    detail_path: "locationmcp/detail.md"
    feature: "支持手机号归属地、IP地址归属地、银行卡归属行、身份证号归属地查询，提供批量查询和文件处理功能"
    manual: "通过调用相应的查询工具获取手机号、IP地址、银行卡、身份证号的归属地信息，支持单个查询和批量文件处理"
    scenario: "电信运营商分析、地理位置统计、金融风控、身份验证、用户画像分析、数据清洗等场景"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "为用户提供全面的归属地查询服务，帮助快速获取各类号码和地址的归属信息"
    tools:
      - name: "queryMobileLocation"
        description: "手机号归属地查询"
        input_schema:
          type: object
          properties:
            - field: "mobileNumbers"
              type: "array"
              description: "手机号码数组，支持批量查询"
          required:
            - "mobileNumbers"
      - name: "queryIpLocation"
        description: "IP归属地查询"
        input_schema:
          type: object
          properties:
            - field: "ipAddresses"
              type: "array"
              description: "IP地址数组，支持批量查询"
          required:
            - "ipAddresses"
      - name: "queryBankCard"
        description: "银行卡归属查询"
        input_schema:
          type: object
          properties:
            - field: "cardNumbers"
              type: "array"
              description: "银行卡号数组，支持批量查询"
          required:
            - "cardNumbers"
      - name: "queryIdLocation"
        description: "身份证号归属地查询"
        input_schema:
          type: object
          properties:
            - field: "idNumbers"
              type: "array"
              description: "身份证号数组，支持批量查询"
          required:
            - "idNumbers"
      - name: "batchQueryMobileLocationFromFile"
        description: "手机号批量文件查询"
        input_schema:
          type: object
          properties:
            - field: "inputFilePath"
              type: "string"
              description: "输入文件路径，文件格式为txt，每行一个手机号码"
            - field: "outputFilePath"
              type: "string"
              description: "输出文件路径，结果将以CSV格式保存"
          required:
            - "inputFilePath"
            - "outputFilePath"
      - name: "batchQueryIpLocationFromFile"
        description: "IP地址批量文件查询"
        input_schema:
          type: object
          properties:
            - field: "inputFilePath"
              type: "string"
              description: "输入文件路径，文件格式为txt，每行一个IP地址"
            - field: "outputFilePath"
              type: "string"
              description: "输出文件路径，结果将以CSV格式保存"
          required:
            - "inputFilePath"
            - "outputFilePath"
      - name: "batchQueryBankCardFromFile"
        description: "银行卡批量文件查询"
        input_schema:
          type: object
          properties:
            - field: "inputFilePath"
              type: "string"
              description: "输入文件路径，文件格式为txt，每行一个银行卡号"
            - field: "outputFilePath"
              type: "string"
              description: "输出文件路径，结果将以CSV格式保存"
          required:
            - "inputFilePath"
            - "outputFilePath"
      - name: "batchQueryIdLocationFromFile"
        description: "身份证号批量文件查询"
        input_schema:
          type: object
          properties:
            - field: "inputFilePath"
              type: "string"
              description: "输入文件路径，文件格式为txt，每行一个身份证号"
            - field: "outputFilePath"
              type: "string"
              description: "输出文件路径，结果将以CSV格式保存"
          required:
            - "inputFilePath"
            - "outputFilePath"
  - mcp_square_id: "sequentialthinking"
    name: "序列思维工具"
    category: "gov"
    desc: "动态反思性问题解决工具，通过灵活的思维过程分析复杂问题"
    from: "认知科学与思维训练理论"
    avatar_path: "sequentialthinking/logo.png"
    detail_path: "sequentialthinking/detail.md"
    feature: "支持动态调整思维步骤、修订前序思考、分支探索、不确定性处理，提供完整的问题分析链条"
    manual: "通过设定思维步骤逐步分析问题，可随时调整总步骤数、修订之前的思考、创建分支探索不同方案，适合处理初始范围不明确的复杂问题"
    scenario: "复杂问题分解、多步骤解决方案规划、教育培训思维训练、不确定性问题探索、需要反思修正的分析任务、创新设计思维等场景"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "为用户提供结构化的思维分析工具，帮助系统性地分解和解决复杂问题，支持思维过程的动态调整和优化"
    tools:
      - name: "sequentialthinking"
        description: "序列思维分析工具"
        input_schema:
          type: object
          properties:
            - field: "thought"
              type: "string"
              description: "当前思维步骤内容，可包括分析、修订、质疑、分支等"
            - field: "nextThoughtNeeded"
              type: "boolean"
              description: "是否需要下一个思维步骤"
            - field: "thoughtNumber"
              type: "integer"
              description: "当前思维步骤编号，最小值为1"
            - field: "totalThoughts"
              type: "integer"
              description: "预估总思维步骤数，可动态调整，最小值为1"
            - field: "isRevision"
              type: "boolean"
              description: "是否修订之前的思维"
            - field: "revisesThought"
              type: "integer"
              description: "修订的思维步骤编号，最小值为1"
            - field: "branchFromThought"
              type: "integer"
              description: "分支起点的思维步骤编号，最小值为1"
            - field: "branchId"
              type: "string"
              description: "分支标识符"
            - field: "needsMoreThoughts"
              type: "boolean"
              description: "是否需要更多思维步骤"
          required:
            - "thought"
            - "nextThoughtNeeded"
            - "thoughtNumber"
            - "totalThoughts"
  - mcp_square_id: "baidumapgov"
    name: "百度地图服务"
    category: "gov"
    desc: "基于百度地图API的综合地理信息服务工具，提供地理编码、路线规划、地点检索等功能"
    from: "百度地图开放平台API"
    avatar_path: "baidumapgov/logo.png"
    detail_path: "baidumapgov/detail.md"
    feature: "支持地理编码与逆地理编码、地点检索与详情查询、路线规划与距离计算、实时天气查询、交通状况分析、IP定位、POI智能标注等全方位地理信息服务"
    manual: "通过调用相应工具函数，输入地址、坐标、关键词等参数，获取地理位置信息、路线规划、天气数据等服务结果，支持多种出行方式和检索模式"
    scenario: "位置服务应用、导航系统、物流配送、出行规划、天气查询、交通分析、地理信息系统、智能推荐、位置标注等场景"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "为开发者提供完整的地理信息服务解决方案，涵盖从基础的地址解析到复杂的路线规划和实时信息查询"
    tools:
      - name: "map_geocode"
        description: "地理编码服务"
        input_schema:
          type: object
          properties:
            - field: "address"
              type: "string"
              description: "待解析的地址（最多支持84个字节。可以输入两种样式的值，分别是：1、标准的结构化地址信息，如北京市海淀区上地十街十号【推荐，地址结构越完整，解析精度越高】2、支持\"*路与*路交叉口\"描述方式，如北一环路和阜阳路的交叉路口第二种方式并不总是有返回结果，只有当地址库中存在该地址描述时才有返回。）"
          required:
            - "address"
      - name: "map_reverse_geocode"
        description: "全球逆地理编码"
        input_schema:
          type: object
          properties:
            - field: "latitude"
              type: "number"
              description: "纬度坐标"
            - field: "longitude"
              type: "number"
              description: "经度坐标"
          required:
            - "latitude"
            - "longitude"
      - name: "map_search_places"
        description: "地点检索服务（包括城市检索、圆形区域检索、多边形区域检索）"
        input_schema:
          type: object
          properties:
            - field: "query"
              type: "string"
              description: "检索关键字"
            - field: "region"
              type: "string"
              description: "检索行政区划区域"
            - field: "bounds"
              type: "string"
              description: "检索多边形区域"
            - field: "location"
              type: "string"
              description: "圆形区域检索中心点，不支持多个点"
          required:
            - "query"
      - name: "map_place_details"
        description: "地点详情检索服务"
        input_schema:
          type: object
          properties:
            - field: "uid"
              type: "string"
              description: "poi的uid"
            - field: "scope"
              type: "string"
              description: "检索结果详细程度。取值为1 或空，则返回基本信息；取值为2，返回检索POI详细信息"
          required:
            - "uid"
      - name: "map_distance_matrix"
        description: "计算多个出发地和目的地的距离和路线用时"
        input_schema:
          type: object
          properties:
            - field: "origins"
              type: "array"
              description: "起点的纬度,经度。"
            - field: "destinations"
              type: "array"
              description: "终点的纬度,经度。"
            - field: "mode"
              type: "string"
              description: "路线类型，可选值：driving（驾车）、walking（步行）、riding（骑行）、motorcycle（摩托车）"
          required:
            - "origins"
            - "destinations"
      - name: "map_directions"
        description: "路线规划服务， 计算出发地到目的地的距离、路线用时、路线方案"
        input_schema:
          type: object
          properties:
            - field: "origin"
              type: "string"
              description: "起点经纬度，格式为：纬度,经度；小数点后不超过6位，40.056878,116.30815"
            - field: "destination"
              type: "string"
              description: "终点经纬度，格式为：纬度,经度；小数点后不超过6位，40.056878,116.30815"
            - field: "mode"
              type: "string"
              description: "路线规划类型，可选值：driving（驾车）、walking（步行）、riding（骑行）、transit（公交）"
          required:
            - "origin"
            - "destination"
      - name: "map_weather"
        description: "通过行政区划代码或者经纬度坐标获取实时天气信息和未来5天天气预报"
        input_schema:
          type: object
          properties:
            - field: "districtId"
              type: "string"
              description: "行政区划代码（适用于区、县级别）"
            - field: "location"
              type: "string"
              description: "经纬度，经度在前纬度在后，逗号分隔，格式如116.404,39.915"
          required: [ ]
      - name: "map_ip_location"
        description: "通过IP地址获取位置信息"
        input_schema:
          type: object
          properties:
            - field: "ip"
              type: "string"
              description: "IP地址"
          required:
            - "ip"
      - name: "map_road_traffic"
        description: "根据城市和道路名称查询具体道路的实时拥堵评价和拥堵路段、拥堵距离、拥堵趋势等信息"
        input_schema:
          type: object
          properties:
            - field: "roadName"
              type: "string"
              description: "道路名称"
            - field: "city"
              type: "string"
              description: "城市名称"
            - field: "bounds"
              type: "string"
              description: "矩形区域，左下角和右上角的经纬度坐标点，坐标对间使用;号分隔，格式为：纬度,经度;纬度,经度，如39.912078,116.464303;39.918276,116.475442"
            - field: "vertexes"
              type: "string"
              description: "多边形边界点，经纬度顺序为：纬度,经度； 顶点顺序需按逆时针排列, 格式如vertexes=39.910528,116.472926;39.918276,116.475442;39.916671,116.459056;39.912078,116.464303"
            - field: "center"
              type: "string"
              description: "中心点坐标，如39.912078,116.464303"
            - field: "radius"
              type: "number"
              description: "查询半径，单位：米"
          required: [ ]
      - name: "map_poi_extract"
        description: "POI智能标注"
        input_schema:
          type: object
          properties:
            - field: "textContent"
              type: "string"
              description: "描述POI的文本内容"
          required:
            - "textContent"
  - mcp_square_id: "qieman"
    name: "Qieman Fund Analytics"
    category: "gov"
    desc: "提供全面的基金数据查询、投资分析和风险评估功能"
    from: "qieman"
    avatar_path: "qieman/logo.png"
    detail_path: "qieman/detail.md"
    feature: "关键特性包括基金数据批量查询、历史净值分析、业绩回测、风险评估、资产配置分析、投资组合诊断、蒙特卡洛模拟、基金相关性分析等30多项专业金融工具。支持基金搜索匹配、公告资讯查询、投顾观点检索等功能。"
    manual: "要使用Qieman MCP Server，需要在MCP配置中添加相应的服务器配置。服务器提供RESTful API接口，支持批量查询和实时数据获取。所有工具都遵循统一的参数格式，支持基金代码列表批量操作。"
    scenario: "Qieman可用于专业投资分析、基金研究、投资组合管理、风险控制等场景。\n使用场景包括：基金筛选和对比分析、投资组合构建和优化、风险评估和回测分析、资产配置方案设计、基金公告和市场资讯跟踪、投资决策支持等专业金融应用。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Qieman是一个专业的金融数据MCP服务器，提供全方位的基金分析和投资管理功能，使LLM能够进行专业的基金数据查询、投资分析、风险评估和资产配置等金融服务。"
    tools:
      - name: BatchGetFundsHolding
        description: "批量查询基金持仓情况。包括：十大重仓股、十大重仓债。"
        input_schema:
          type: object
          properties:
            - field: fundCodes
              type: array
              description: "基金代码列表，单次最多查20个。例如: [\"100032\",\"162411\"]"
          required:
            - fundCodes

      - name: BatchGetFundTradeLimit
        description: "批量获取基金交易信息，返回是否可交易、起购金额、定投金额等信息"
        input_schema:
          type: object
          properties:
            - field: fundCodes
              type: array
              description: "基金代码列表，单次最多查20个。例如: [\"100032\",\"162411\"]"
          required:
            - fundCodes

      - name: BatchGetFundsHolderInfo
        description: "批量获取基金资产规模持有人结构数据"
        input_schema:
          type: object
          properties:
            - field: fundCodes
              type: array
              description: "基金代码列表，单次最多查20个。例如: [\"100032\",\"162411\"]"
          required:
            - fundCodes

      - name: BatchGetFundsFeeRule
        description: "批量返回基金费率规则。包括\"认购费率\"（subscribeFeeRate）、\"申购费率\"（allotFeeRate）、\"赎回费率\"（redeemFeeRate）、\"管理费率\"（runFeeRate）"
        input_schema:
          type: object
          properties:
            - field: fundCodes
              type: array
              description: "基金代码列表，单次最多查20个。例如: [\"100032\",\"162411\"]"
          required:
            - fundCodes

      - name: BatchGetFundsDividendRecord
        description: "提供基金代码列表，批量返回基金分红记录"
        input_schema:
          type: object
          properties:
            - field: fundCodes
              type: array
              description: "基金代码列表，单次最多查20个。例如: [\"100032\",\"162411\"]"
          required:
            - fundCodes

      - name: BatchGetFundNavHistory
        description: "批量返回基金历史净值，包括：单位净值、累计净值、日涨跌。"
        input_schema:
          type: object
          properties:
            - field: fundCodes
              type: array
              description: "基金代码列表，单次最多查20个。例如: [\"100032\",\"162411\"]"
            - field: isDesc
              type: boolean
              description: "是否按时间倒叙。默认是倒叙"
            - field: dimensionType
              type: string
              description: "时间维度。对应字典中 key=navTimeDimensionType 的值 (可选值: 'oneMonth', 'quarter', 'halfYear', 'oneYear', 'twoYear', 'threeYear', 'fiveYear', 'thisYear', 'setupDay')"
          required:
            - fundCodes

      - name: GetBatchFundPerformance
        description: "批量返回基金业绩表现数据，包含业绩分析指标（收益能力、风险控制等）和阶段收益（近1月、近1年、成立以来等）的详细信息。支持一次查询多只基金的业绩对比，每次最多支持20只基金的查询。"
        input_schema:
          type: object
          properties:
            - field: fundCodes
              type: array
              description: "基金代码列表，单次最多查20个。例如: [\"100032\",\"162411\"]"
          required:
            - fundCodes

      - name: BatchGetFundTradeRules
        description: "查询特定交易时间进行的基金交易操作包含的交易规则信息。支持申购、认购、赎回和转换等操作类型，返回包含最低/最高购买金额、预计确认日期、到账日期、收益产生日期、费率规则等详细交易规则数据。尽量提供精确的txnTime，无法确定可以询问用户。"
        input_schema:
          type: object
          properties:
            - field: fundCodes
              type: array
              description: "基金代码列表，单次最多查20个。例如: [\"100032\",\"162411\"]"
            - field: op
              type: string
              description: "交易操作类型: allot - 申购, subscribe - 认购, redeem: 赎回 (可选值: 'subscribe', 'allot', 'redeem', 'convert')"
            - field: txnTime
              type: string
              description: "交易时间，可选参数，支持两种格式：1. 仅日期格式(YYYY-MM-DD)如2024-12-30，将使用当天中午12点；2. 带时分秒格式(YYYY-MM-DD HH:mm:ss)如2024-12-30 13:00:00"
          required:
            - fundCodes
            - op

      - name: GetPopularFund
        description: "返回近期访问数量前x的基金"
        input_schema:
          type: object
          properties:
            - field: size
              type: number
              description: "返回多少条基金"

      - name: BatchGetFundsDetail
        description: "返回基金的详细信息，包括基本概况（最新净值，规模，基准，风险等级，基金类型）、经理信息、业绩表现、持仓分析、资产配置、行业分布、净值历史、交易限制等完整数据。"
        input_schema:
          type: object
          properties:
            - field: fundCodes
              type: array
              description: "基金代码列表，单次最多查20个。例如: [\"100032\",\"162411\"]"
          required:
            - fundCodes

      - name: BatchGetFundsSplitHistory
        description: "批量返回所有基金拆分记录，包括拆分日、拆分比例。"
        input_schema:
          type: object
          properties:
            - field: fundCodes
              type: array
              description: "基金代码列表，单次最多查20个。例如: [\"100032\",\"162411\"]"
          required:
            - fundCodes

      - name: RenderHtmlToPdf
        description: "将HTML内容转换为PDF文档，支持自定义页面格式、背景打印和页边距设置，并返回访问URL（可以使用markdown的链接语法显示这个URL供用户点击）"
        input_schema:
          type: object
          properties:
            - field: html
              type: string
              description: "HTML内容"
            - field: options
              type: object
              description: "PDF选项配置，包括format、printBackground、margin等"

      - name: RenderEchart
        description: "根据提供的 ECharts 配置和尺寸参数，渲染图表并转换为图片，返回图片的 URL。"
        input_schema:
          type: object
          properties:
            - field: option
              type: string
              description: "ECharts配置，支持JSON字符串或JavaScript代码"
            - field: width
              type: string
              description: "图表宽度，单位px，比如800表示800px"
            - field: height
              type: string
              description: "图表高度，单位px，比如600表示600px"
            - field: devicePixelRatio
              type: number
              description: "设备像素比"

      - name: GetFundAnnouncements
        description: "查询基金的公告数据，包含基金代码、基金名称、基金全称、公告ID、公告日期、公告来源、公告标题、公告链接、公告类型，支持按时间范围、公告类型和标题关键词查询。"
        input_schema:
          type: object
          properties:
            - field: pageSize
              type: number
              description: "每页返回记录数，默认20，最大100; 示例: 5"
            - field: pageNum
              type: number
              description: "分页查询的页码，从 1 开始，默认 1; 示例: 1"
            - field: fundCodes
              type: array
              description: "基金代码列表"
            - field: startDate
              type: string
              description: "开始日期，默认为 1900-01-01; 示例: \"2025-01-01\""
            - field: endDate
              type: string
              description: "结束日期，默认为当前日期; 示例: \"2025-04-01\""
            - field: announcementType
              type: string
              description: "公告类型，可选值：ALL（全部）、ISSUE_OPERATION（发行运作）、DIVIDEND（分红配送）、PERIODIC_REPORT（定期报告）、OTHER（其他公告），默认为ALL。值为null或空字符串时等同于ALL，表示不过滤公告类型。 (可选值: 'ALL', 'ISSUE_OPERATION', 'DIVIDEND', 'PERIODIC_REPORT', 'OTHER'); 示例: \"ALL\""
            - field: keyword
              type: string
              description: "公告标题关键词，支持模糊搜索; 示例: \"分红\""
          required:
            - fundCodes

      - name: GetTxnDayRange
        description: "以某时间为中心获取一个时间段内的交易日。centerTime：格式是YYYY-MM-DD HH:mm:ss，默认不填就是当前时间（建议大部分情况都不要填）"
        input_schema:
          type: object
          properties:
            - field: fundCode
              type: string
              description: "基金代码"
            - field: centerTime
              type: string
              description: "中心时间"
            - field: beforeDays
              type: string
              description: "往前递推偏移（必填）"
            - field: afterDays
              type: string
              description: "往后递推偏移（必填）"
          required:
            - beforeDays
            - afterDays

      - name: GetAnnouncementContent
        description: "获取特定基金公告的详细内容"
        input_schema:
          type: object
          properties:
            - field: fundCode
              type: string
              description: "公告所属的基金代码"
            - field: announcementId
              type: string
              description: "要获取的公告ID"
          required:
            - fundCode
            - announcementId

      - name: GetCurrentTime
        description: "获取当前时间。注意，模型AI你是不知道当前时间的，需要调用此工具获取当前时间。"
        input_schema:
          type: object

      - name: SearchFinancialNews
        description: "根据关键词和时间范围搜索财经资讯内容，支持分页查询，返回符合条件的财经资讯列表，包括资讯标题、摘要、来源、链接及发布时间等信息。默认不需要提供date参数，除非用户明确要求。"
        input_schema:
          type: object
          properties:
            - field: keyword
              type: string
              description: "搜索关键词; 示例: \"股票\""
            - field: startDate
              type: string
              description: "搜索开始日期 (YYYY-MM-DD); 示例: \"2024-01-01\""
            - field: endDate
              type: string
              description: "搜索结束日期 (YYYY-MM-DD); 示例: \"2024-03-20\""
            - field: page
              type: number
              description: "页码 (默认: 1)"
            - field: pageSize
              type: number
              description: "每页数量 (默认: 20)"

      - name: SearchManagerViewpoint
        description: "根据时间范围和关键词搜索基金经理的行业观点及市场分析（如果用户问你对某个行业的看法，可以调用此工具进行参考）。支持按关键词匹配标题或内容，可筛选特定时间段内的观点，并提供分页功能。"
        input_schema:
          type: object
          properties:
            - field: keyword
              type: string
              description: "搜索关键词，用于匹配标题或观点内容"
            - field: startDate
              type: string
              description: "搜索开始日期（YYYY-MM-DD）"
            - field: endDate
              type: string
              description: "搜索结束日期（YYYY-MM-DD）"
            - field: page
              type: number
              description: "页码"
            - field: pageSize
              type: number
              description: "每页记录数"

      - name: searchInvestAdviserContent
        description: "盈米/且慢的投顾内容和市场观点。基于关键词、作者、时间范围和内容类型等条件搜索投资顾问内容。建议区分作者进行观点表达。"
        input_schema:
          type: object
          properties:
            - field: keyword
              type: string
              description: "搜索关键词; 示例: \"市场分析\""
            - field: author
              type: string
              description: "作者名称筛选; 示例: \"张三\""
            - field: startDate
              type: string
              description: "搜索开始日期 (YYYY-MM-DD); 示例: \"2023-01-01\""
            - field: endDate
              type: string
              description: "搜索结束日期 (YYYY-MM-DD); 示例: \"2023-12-31\""
            - field: page
              type: number
              description: "分页页码; 示例: 1"
            - field: pageSize
              type: number
              description: "每页记录数; 示例: 20"
            - field: type
              type: string
              description: "内容类型筛选 (可选值: '文章', '碎碎念', '专栏', '社区', '自有策略的内容'); 示例: \"文章\""
            - field: skip_attachment
              type: boolean
              description: "是否跳过附件"

      - name: GetFundsBackTest
        description: "基于基金列表进行回测分析。只需提供基金列表，返回回测分析结果。该接口用于对给定基金组合进行回测分析，计算包括年化收益率、最大回撤、波动率、夏普比率等指标，并提供诊断结果和雷达图评分。（注意不要提供fundName）"
        input_schema:
          type: object
          properties:
            - field: fundList
              type: array
              description: "基金列表，包含基金代码和持仓金额"
          required:
            - fundList

      - name: MonteCarloSimulate
        description: "针对资产配置组合进行蒙特卡洛模拟计算（测算未来收益概率）。接收对象形式的资产权重配置，返回蒙特卡洛模拟结果。该接口基于提供的资产配置权重，执行蒙特卡洛模拟计算，生成不同投资周期的预期收益分布、波动率情景和各种百分位数的收益率数据，并提供语义化描述和可视化图表（可以用markown image显示）。"
        input_schema:
          type: object
          properties:
            - field: weights
              type: object
              description: "资产权重对象，包含六大类资产权重配置"
            - field: frequency
              type: string
              description: "模拟周期频率，可选值: YEAR(年度)、MONTH(月度)、WEEK(周度)、DAY(日度)"
            - field: periodCount
              type: number
              description: "周期长度（年），最小值: 1"
            - field: simulationCount
              type: number
              description: "模拟次数，最小值: 1000"
          required:
            - weights

      - name: AnalyzePortfolioRisk
        description: "组合风险评估接口，计算组合的风险指标。该接口接收基金代码和权重信息，返回包含风险评分、R方、残差方差等多维度风险指标的分析结果。"
        input_schema:
          type: object
          properties:
            - field: holdings
              type: array
              description: "持仓信息，包含权重和基金代码"
          required:
            - holdings

      - name: GetAssetAllocation
        description: "获取基金组合的资产配置分析结果，只需提供基金列表，只返回资产配置分析结果。该接口分析用户的资产配置情况，包括雷达图评分、诊断结果、资产大类配置详情及子账户资产配置分析（注意不需要提供fundName）"
        input_schema:
          type: object
          properties:
            - field: fundList
              type: array
              description: "基金列表，包含基金代码、基金名称和持仓金额"
          required:
            - fundList

      - name: GetFundsCorrelation
        description: "获取基金相关性分析结果。只需提供基金列表，只返回基金相关性分析结果。该接口分析多只基金之间的相关性系数，生成雷达图评分和诊断结果，帮助进行投资组合分析。"
        input_schema:
          type: object
          properties:
            - field: fundList
              type: array
              description: "基金列表，包含基金代码、基金名称和持仓金额"
          required:
            - fundList

      - name: AnalyzeFundRisk
        description: "基金风险分析接口，获取多个基金的风险评分及说明。该接口通过传入基金代码列表，返回每个基金的风险评分、R方值、残差方差、标准误差等风险指标，以及相应的风险描述文本。"
        input_schema:
          type: object
          properties:
            - field: fundCodes
              type: array
              description: "基金代码列表"
          required:
            - fundCodes

      - name: GetAssetAllocationPlan
        description: "根据投资三性参数获取资产配置方案。提供预期年化收益率 or 预期最大回撤 or 预期投资期限，获得由盈米设计的资产配置方案。"
        input_schema:
          type: object
          properties:
            - field: expectedAnnualizedReturnRate
              type: number
              description: "预期年化收益率，如 0.05 即代表 5%"
            - field: expectedInvestTime
              type: string
              description: "预期投资期限枚举类型\nspare - 活期\noneYear - 1年以内\noneToThree - 1-3年\nthreeToFive - 3-5年\noverFive - 5年以上 (可选值: 'spare', 'oneYear', 'oneToThree', 'threeToFive', 'overFive')"
            - field: expectedDrawdown
              type: number
              description: "预期最大回撤，如 0.02 即代表 2%"

      - name: DiagnoseFundPortfolio
        description: "获取用户当前基金持仓的全面分析评估，包括资产配置状况、基金间相关性和历史回测表现。报告从风险分散度、资产类别分布和收益表现三个维度进行评分（1-5分）及诊断，并提供相应优化建议。 分析内容包括： 资产配置：评估当前资产类别分布合理性，提供多元化配置建议 相关性分析：计算各基金间相关系数，评估风险分散程度 回测表现：模拟当前配置在历史期间的表现，包括年化收益率、最大回撤、波动率等关键指标"
        input_schema:
          type: object
          properties:
            - field: fundList
              type: array
              description: "基金列表，包含基金代码、基金名称和持仓金额"
          required:
            - fundList

      - name: GetCompositeModel
        description: "通过资产配置方案ID获取对应的复合模型\n复合模型是资产配置方案的具体落地实现，提供每个大类资产对应的实际基金及其配置比例"
        input_schema:
          type: object
          properties:
            - field: assetPlanId
              type: string
              description: "资产配置方案ID"
          required:
            - assetPlanId

      - name: SearchFunds
        description: "搜索基金、根据基金名称匹配基金代码。通过名称（可用于确定基金代码）、代码、拼音、交易状态等信息进行搜索。同时可以按照收益、限额、费率等进行排序。（注意如果使用了keyword，就不要使用\"分类\"这个参数，另外returnYear指的是近一年收益）"
        input_schema:
          type: object
          properties:
            - field: keyword
              type: string
              description: "基金名称关键字，支持分词搜索"
            - field: tradeStatus
              type: string
              description: "交易状态 (可选值: '', '不限', '正常开放', '认购期', '暂停申购', '暂停赎回', '暂停交易')"
            - field: category
              type: string
              description: "分类 (可选值: '', '不限', '偏股型', '指数型', 'QDII型', '商品型', '债券型', '货币型', '国企改革', '工业4.0', '国防军工', '城镇化', '消费', '节能环保', '美丽中国', '养老', '价值蓝筹', '金融', '一带一路', '农林牧渔', '资源', 'TMT', '新能源', '文化传媒', '健康中国', '新兴产业', '量化投资', '定增', '逆向投资', '沪港深', '量化对冲', '打新', '股票型', '偏股混合型', '平衡混合型', '灵活配置型', '偏债混合型', '综合指数', '规模指数', '策略指数', '风格指数', '行业主题指数', '定制指数', '债券指数', '国际股票型', '国际混合型', '国际债券型', '国际另类投资', '全球市场', '美国市场', '欧洲市场', '香港市场', '亚太市场', '新兴市场', '大中华市场', '黄金', '白银', '油气', '纯债', '一级债', '二级债', '高杠杆', '利率债', '信用债', '可转债', '偏股债')"
            - field: sortColumn
              type: string
              description: "选择要排序的列，可选值：成立日期、基金规模、收益率、近一年收益、起购金额、基金限额、选股能力、择时能力、最新股票仓位、综合费率、跟踪误差、七日年化收益率、万份收益"
            - field: sortOrder
              type: string
              description: "选择排序的顺序，如果是查找最大、最多等，可以是\"降序\"，否则为\"升序\" (可选值: '', '升序', '降序')"
            - field: page
              type: number
              description: "页码，从0开始"
            - field: size
              type: number
              description: "每页数量"

      - name: GuessFundCode
        description: "根据基金名称匹配最相近的基金代码。"
        input_schema:
          type: object
          properties:
            - field: fundNameOrCode
              type: string
              description: "基金名称/代码"
          required:
            - fundNameOrCode
  - mcp_square_id: "unionpaymcpserver"
    name: "银联MCP支付服务器"
    category: "gov"
    desc: "银联基于MCP协议为AI智能体提供的支付工具服务器，支持签约支付、二维码支付、查询等全方位支付服务"
    from: "中国银联"
    avatar_path: "unionpaymcpserver/logo.png"
    detail_path: "unionpaymcpserver/detail.md"
    feature: "签约支付、二维码支付、支付查询、退款退货、解约服务、风险管控、多种接入方式、安全加密、实时通知"
    manual: "需要先注册成为银联网络商户并获取商户私钥，配置环境变量后通过npx -y unionpay-mcp-server命令启动，支持Cursor、Cline等MCP客户端"
    scenario: "在线支付、移动支付、电商平台、酒店预订、行程规划、智能体应用、自动化交易、风险控制"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "银联MCP支付服务器是一个功能完整的支付解决方案，通过MCP协议为AI智能体提供安全便捷的支付能力，支持签约支付、二维码支付等多种支付方式，适用于各类智能体应用场景"
    tools:
      - name: create-contract-order-unionpay-payment
        description: "创建一笔签约支付订单，并返回授权签约链接"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8至40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: certifTp
              type: string
              description: "证件类型，格式：2位数字"
            - field: certifId
              type: string
              description: "证件号码，格式：1至20位字母数字"
            - field: customerNm
              type: string
              description: "用户姓名，格式：1至120字母数字"
            - field: phoneNo
              type: string
              description: "手机号，格式：1至20位手机号"
            - field: riskRateInfo
              type: string
              description: "风险信息域的JSON字符串格式"
            - field: merCatCode
              type: string
              description: "商户类别，收单接入时必填"
            - field: merName
              type: string
              description: "商户名称，收单接入时必填"
            - field: merAbbr
              type: string
              description: "商户简称，收单接入时必填"
            - field: subMerId
              type: string
              description: "二级商户代码，平台商户接入时必填"
            - field: subMerName
              type: string
              description: "二级商户名称，平台商户接入时必填"
            - field: subMerAbbr
              type: string
              description: "二级商户简称，平台商户接入时必填"
          required:
            - orderId
            - txnTime
            - certifTp
            - certifId
            - customerNm
            - phoneNo
            - riskRateInfo
      - name: create-contract-unionpay-payment
        description: "发起签约交易，并返回签约信息，该交易是签约下单的后续交易"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8至40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: origOrderId
              type: string
              description: "签约下单交易请求的订单号orderId"
            - field: origTxnTime
              type: string
              description: "签约下单交易应答的txnTime"
            - field: tokenType
              type: string
              description: "token类型，格式：2位数字"
          required:
            - orderId
            - txnTime
            - origOrderId
            - origTxnTime
            - tokenType
      - name: contract-pay-sms
        description: "创建一笔支付短信，当需要在支付前做短信验证时调用此接口"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8至40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: token
              type: string
              description: "签约交易返回的token"
            - field: txnAmt
              type: string
              description: "交易金额"
            - field: currencyCode
              type: string
              description: "交易币种，默认156人民币"
          required:
            - orderId
            - txnTime
            - token
            - txnAmt
      - name: pay-contract-order-unionpay-payment
        description: "创建一笔签约支付订单，并返回用户支付结果"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8至40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: certifTp
              type: string
              description: "证件类型，格式：2位数字"
            - field: certifId
              type: string
              description: "证件号码，格式：1至20位字母数字"
            - field: customerNm
              type: string
              description: "用户姓名，格式：1至120字母数字"
            - field: phoneNo
              type: string
              description: "手机号，格式：1至20位手机号"
            - field: riskRateInfo
              type: string
              description: "风险信息域的JSON字符串格式"
            - field: currencyCode
              type: string
              description: "交易币种，默认156人民币"
            - field: token
              type: string
              description: "签约交易返回的token"
          required:
            - orderId
            - txnTime
            - certifTp
            - certifId
            - customerNm
            - phoneNo
            - riskRateInfo
            - token
      - name: refund-contract-order-unionpay-payment
        description: "创建一笔退货订单，并返回退货结果"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8至40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: origOrderId
              type: string
              description: "支付交易请求的订单号orderId"
            - field: origTxnTime
              type: string
              description: "交易应答的txnTime"
            - field: txnAmt
              type: string
              description: "需要退货的金额"
          required:
            - orderId
            - txnTime
            - origOrderId
            - origTxnTime
            - txnAmt
      - name: query-unionpay-payment
        description: "发起查询交易，支持签约交易查询、支付交易查询、退款等查询类交易"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8至40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
          required:
            - orderId
            - txnTime
      - name: cancel-contract-order-unionpay-payment
        description: "创建一笔解约订单，并返回解约结果，该交易是签约的反向交易"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8至40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: token
              type: string
              description: "签约交易返回的token"
          required:
            - orderId
            - txnTime
            - token
      - name: apply-unionpay-qrCode
        description: "申请消费二维码，返回qrCode"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8~40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: payTimeout
              type: string
              description: "二维码有效时间"
            - field: txnAmt
              type: string
              description: "交易金额，单位元"
          required:
            - orderId
            - txnTime
            - payTimeout
            - txnAmt
      - name: refund-unionpay-qrCode
        description: "对之前二维码交易进行退货，仅30天之内交易可退货"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8~40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: origTxnTime
              type: string
              description: "原始交易的交易时间，格式：YYYYMMDDhhmmss"
            - field: origOrderId
              type: string
              description: "原始交易的订单号，格式：8~40位字母数字"
            - field: origQryId
              type: string
              description: "原始交易的查询ID，格式：查询订单请求返回的若干位数字"
            - field: txnAmt
              type: string
              description: "待退货金额，单位元"
          required:
            - orderId
            - txnTime
            - origTxnTime
            - origOrderId
            - origQryId
            - txnAmt
      - name: query-unionpay-QrCode-trade
        description: "发起二维码类查询交易，支持申码支付交易查询、退款等查询类交易"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "被查询交易订单号，当使用原交易orderId和txnTime查询时必填"
            - field: txnTime
              type: string
              description: "被查询交易交易时间，当使用原交易orderId和txnTime查询时必填"
            - field: queryId
              type: string
              description: "被查询交易流水号，当使用原交易流水号查询时必填"
  - mcp_square_id: "hefengmcpweather"
    name: "HeFeng Weather MCP Server"
    category: "gov"
    desc: "基于模型上下文协议（MCP）的天气服务服务器，通过和风天气API提供中国地区的天气 forecast 数据，支持实时、逐小时及每日天气预报"
    from: "modelscope"
    avatar_path: "hefengmcpweather/logo.png"
    detail_path: "hefengmcpweather/detail.md"
    feature: "关键特性包括获取实时天气数据、提供24小时/72小时/168小时逐小时预报、支持3天/7天/10天/15天/30天每日预报、可通过经纬度查询位置天气、提供全中文天气描述"
    manual: "可通过NPX配置MCP服务器，在Claude桌面配置文件中添加服务信息，需传入和风天气API密钥（--apiKey参数），通过调用get-weather工具接口获取天气数据"
    scenario: "适用于需要查询中国地区天气的场景，如日常出行规划、户外活动安排、长期行程天气参考等，可集成到各类需要天气信息的对话系统或应用中"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "HeFeng Weather MCP Server是基于MCP协议的天气查询工具，通过和风天气API提供多维度的天气预报服务，支持经纬度定位和中文描述，简化天气数据的获取流程"
    tools:
      - name: get-weather
        description: "获取特定位置的天气 forecast 数据，支持实时、逐小时及每日预报"
        input_schema:
          type: object
          properties:
            - field: longitude
              type: number
              description: "位置的经度坐标"
            - field: latitude
              type: number
              description: "位置的纬度坐标"
            - field: forecastType
              type: string
              default: "realtime"
              description: "预报类型，可选值包括realtime（实时）、hourly24（24小时逐小时）、hourly72（72小时逐小时）、hourly168（168小时逐小时）、daily3（3天每日）、daily7（7天每日）、daily10（10天每日）、daily15（15天每日）、daily30（30天每日）"
          required:
            - longitude
            - latitude
  - mcp_square_id: "surfmcp"
    name: "Surf MCP Server"
    category: "gov"
    desc: "面向冲浪爱好者和网络用户的MCP服务器，通过Stormglass API获取特定位置和日期的潮汐信息"
    from: "modelscope"
    avatar_path: "surfmcp/logo.png"
    detail_path: "surfmcp/detail.md"
    feature: "关键特性包括根据经纬度查询潮汐信息、支持特定日期的潮汐查询、返回详细的高低潮数据及观测站信息、自动处理UTC时区"
    manual: "需安装Python 3.x和Stormglass API密钥，通过克隆仓库、uv工具安装依赖进行配置。需在Claude桌面配置文件中添加服务器信息，包含API密钥环境变量"
    scenario: "适用于冲浪爱好者查询潮汐时间以规划冲浪活动，也可用于需要潮汐数据的相关场景，如海洋活动安排、沿海作业时间规划等"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Surf MCP Server是基于MCP协议的潮汐信息查询工具，通过Stormglass API提供特定经纬度和日期的潮汐数据，助力冲浪等海洋活动的时间规划"
    tools:
      - name: get_tides
        description: "获取特定位置和日期的潮汐信息，包括高低潮时间、高度及观测站信息"
        input_schema:
          type: object
          properties:
            - field: latitude
              type: float
              description: "位置的纬度值"
            - field: longitude
              type: float
              description: "位置的经度值"
            - field: date
              type: string
              description: "查询的日期，格式为YYYY-MM-DD"
          required:
            - latitude
            - longitude
            - date
  - mcp_square_id: "redis"
    name: "Redis MCP Server"
    category: "gov"
    desc: "基于模型上下文协议（MCP）的Redis数据库访问服务器，使大语言模型（LLMs）能够通过标准化工具与Redis键值存储进行交互"
    from: "modelcontextprotocol"
    avatar_path: "redis/logo.png"
    detail_path: "redis/detail.md"
    feature: "关键特性包括设置带过期时间的键值对、通过键获取值、删除单个或多个键、按模式列出键，支持连接重试机制（指数退避，最多5次重试）"
    manual: "需先安装并运行Redis服务器（Windows用户建议使用WSL或Memurai），默认端口6379。可通过Docker或NPX配置MCP服务器，调用工具接口实现Redis操作"
    scenario: "适用于需要LLM与Redis数据库交互的场景，如缓存数据读写、临时数据存储、键值对管理等，可集成到需要Redis支持的对话系统或自动化流程中"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Redis MCP Server是基于MCP协议的Redis访问工具，提供键值对的增删查改及键列表功能，简化LLM与Redis数据库的交互流程"
    tools:
      - name: set
        description: "设置Redis键值对，支持可选的过期时间"
        input_schema:
          type: object
          properties:
            - field: key
              type: string
              description: "Redis键名"
            - field: value
              type: string
              description: "存储的值"
            - field: expireSeconds
              type: number
              optional: true
              description: "过期时间（秒），可选参数"
          required:
            - key
            - value
      - name: get
        description: "通过键从Redis获取对应的值"
        input_schema:
          type: object
          properties:
            - field: key
              type: string
              description: "要检索的Redis键名"
          required:
            - key
      - name: delete
        description: "从Redis中删除一个或多个键"
        input_schema:
          type: object
          properties:
            - field: key
              type: string | string[]
              description: "单个键名或键名数组"
          required:
            - key
      - name: list
        description: "列出匹配指定模式的Redis键"
        input_schema:
          type: object
          properties:
            - field: pattern
              type: string
              default: "*"
              description: "匹配键的模式，默认值为*（匹配所有键）"
          required: [ ]
  - mcp_square_id: "markdownifymcp"
    name: "markdownifymcp"
    category: "gov"
    desc: "将HTML字符串转换为Markdown格式的工具库"
    from: "modelcontextprotocol"
    avatar_path: "markdownifymcp/logo.png"
    detail_path: "markdownifymcp/detail.md"
    feature: "关键特性包括支持常见HTML元素（标题、列表、链接、图片等）转换、自定义转换规则、遵循CommonMark标准输出。"
    manual: "要使用markdownify-mcp，需传入HTML内容及配置选项，通过核心转换函数生成Markdown字符串。可通过配置项控制元素转换开关及格式优化。"
    scenario: "适用于需要将HTML内容（如网页片段、富文本编辑器内容）转换为Markdown的场景，例如博客迁移、文档格式转换、内容备份等。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "markdownify-mcp是一个轻量工具库，用于将HTML转换为结构化的Markdown，支持自定义转换规则，适配多种HTML元素转换需求。"
    tools:
      - name: convertHtmlToMarkdown
        description: "核心转换函数，将输入的HTML字符串转换为Markdown格式。"
        input_schema:
          type: object
          properties:
            - field: htmlContent
              type: string
              description: "待转换的HTML字符串，例如：<h1>标题</h1><p>段落内容</p>"
            - field: options
              type: object
              description: "转换配置选项（可选），用于自定义转换行为"
              properties:
                - field: elements
                  type: object
                  description: "元素转换开关，控制是否转换特定HTML元素"
                  properties:
                    - field: heading
                      type: boolean
                      default: true
                      description: "是否转换标题标签（h1-h6）"
                    - field: paragraph
                      type: boolean
                      default: true
                      description: "是否转换段落标签（p）"
                    - field: list
                      type: boolean
                      default: true
                      description: "是否转换列表标签（ul/ol/li）"
                    - field: code
                      type: boolean
                      default: true
                      description: "是否转换代码块（pre/code）及行内代码（code）"
                    - field: link
                      type: boolean
                      default: true
                      description: "是否转换链接标签（a）"
                    - field: image
                      type: boolean
                      default: true
                      description: "是否转换图片标签（img）"
                    - field: bold
                      type: boolean
                      default: true
                      description: "是否转换粗体标签（strong/b）"
                    - field: italic
                      type: boolean
                      default: true
                      description: "是否转换斜体标签（em/i）"
                    - field: blockquote
                      type: boolean
                      default: true
                      description: "是否转换块引用标签（blockquote）"
                - field: formatting
                  type: object
                  description: "格式优化配置"
                  properties:
                    - field: preserveWhitespace
                      type: boolean
                      default: false
                      description: "是否保留HTML中的原始空白字符"
                    - field: compactLists
                      type: boolean
                      default: true
                      description: "是否压缩列表格式（移除列表项之间的空行）"
                    - field: escapeSpecialChars
                      type: boolean
                      default: true
                      description: "是否自动转义Markdown特殊字符（如*、_、[]等）"
                - field: customRules
                  type: array
                  description: "自定义转换规则数组，用于扩展默认转换逻辑"
                  items:
                    type: object
                    properties:
                      - field: tag
                        type: string
                        description: "目标HTML标签名（如'hr'、'table'）"
                      - field: converter
                        type: function
                        description: "自定义转换函数，接收标签DOM节点，返回转换后的Markdown字符串"
          required:
            - htmlContent
  - mcp_square_id: "excelmcpserver"
    name: "Excel MCP Server"
    category: "gov"
    desc: "基于模型上下文协议（MCP）的Excel文件处理服务器，提供Excel文件的读取、写入和分析功能"
    from: "modelcontextprotocol"
    avatar_path: "excelmcpserver/logo.png"
    detail_path: "excelmcpserver/detail.md"
    feature: "关键特性包括读取工作表列表及数据、创建和写入Excel文件、分析工作表结构、自动缓存管理及操作日志管理"
    manual: "可通过Smithery自动安装或手动配置MCP服务器进行使用，支持Windows及其他平台。通过调用工具接口实现Excel文件的各类处理操作"
    scenario: "适用于需要处理Excel文件的场景，如读取工作表数据、批量写入数据、分析表格结构、生成Excel模板等，可集成到各类需要Excel交互的应用中"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Excel MCP Server是基于MCP协议的Excel处理工具，支持Excel文件的读写、结构分析、缓存及日志管理，简化Excel文件的程序化处理流程"
    tools:
      - name: analyzeExcelStructure
        description: "获取Excel文件结构，包括工作表列表和列标题，返回JSON格式结果"
        input_schema:
          type: object
          properties:
            - field: fileAbsolutePath
              type: string
              description: "Excel文件的绝对路径"
            - field: headerRows
              type: number
              default: 1
              description: "标题行数，默认值为1"
          required:
            - fileAbsolutePath
      - name: exportExcelStructure
        description: "将Excel文件结构（工作表和标题）导出到新的Excel模板文件"
        input_schema:
          type: object
          properties:
            - field: sourceFilePath
              type: string
              description: "源Excel文件路径"
            - field: targetFilePath
              type: string
              description: "目标Excel模板文件路径"
            - field: headerRows
              type: number
              default: 1
              description: "标题行数，默认值为1"
          required:
            - sourceFilePath
            - targetFilePath
      - name: readSheetNames
        description: "获取Excel文件中所有工作表的名称"
        input_schema:
          type: object
          properties:
            - field: fileAbsolutePath
              type: string
              description: "Excel文件的绝对路径"
          required:
            - fileAbsolutePath
      - name: readDataBySheetName
        description: "读取Excel文件中指定工作表的数据"
        input_schema:
          type: object
          properties:
            - field: fileAbsolutePath
              type: string
              description: "Excel文件的绝对路径"
            - field: sheetName
              type: string
              description: "要读取的工作表名称"
            - field: headerRow
              type: number
              default: 1
              description: "标题行号，默认值为1"
            - field: dataStartRow
              type: number
              default: 2
              description: "数据起始行号，默认值为2"
          required:
            - fileAbsolutePath
            - sheetName
      - name: readSheetData
        description: "读取Excel文件中所有工作表的数据"
        input_schema:
          type: object
          properties:
            - field: fileAbsolutePath
              type: string
              description: "Excel文件的绝对路径"
            - field: headerRow
              type: number
              default: 1
              description: "标题行号，默认值为1"
            - field: dataStartRow
              type: number
              default: 2
              description: "数据起始行号，默认值为2"
          required:
            - fileAbsolutePath
      - name: writeDataBySheetName
        description: "向Excel文件中指定的工作表写入数据，若工作表已存在则覆盖"
        input_schema:
          type: object
          properties:
            - field: fileAbsolutePath
              type: string
              description: "Excel文件的绝对路径"
            - field: sheetName
              type: string
              description: "要写入数据的工作表名称"
            - field: data
              type: array
              description: "要写入的数据数组"
          required:
            - fileAbsolutePath
            - sheetName
            - data
      - name: writeSheetData
        description: "创建新的Excel文件并写入数据，支持多个工作表"
        input_schema:
          type: object
          properties:
            - field: fileAbsolutePath
              type: string
              description: "新Excel文件的绝对路径"
            - field: data
              type: object
              description: "包含多个工作表数据的对象"
          required:
            - fileAbsolutePath
            - data
      - name: clearFileCache
        description: "清除指定Excel文件的缓存数据"
        input_schema:
          type: object
          properties:
            - field: fileAbsolutePath
              type: string
              description: "需要清除缓存的Excel文件的绝对路径"
          required:
            - fileAbsolutePath
  - mcp_square_id: "docxprocessing"
    name: "Docx Processing"
    category: "gov"
    desc: "基于FastMCP的Docx文档处理服务，支持在Cursor中使用AI助手创建、编辑和管理Word文档"
    from: "FastMCP"
    avatar_path: "docxprocessing/logo.png"
    detail_path: "docxprocessing/detail.md"
    feature: "支持完整的文档操作（创建、打开、保存）；支持格式化设置（字体、颜色、大小、对齐）；支持表格处理（创建、编辑、合并拆分单元格）；支持插入图片并设置大小；支持布局控制（页边距、分页符）；支持查询功能（获取文档信息、段落内容）；支持查找替换；支持按段落编辑（保留原格式）"
    manual: "确保Python 3.10+已安装，执行命令：pip3 install python-docx mcp。\n在Cursor设置中添加MCP服务：类型选择Command，命令填写\"python3 /path/to/MCP_dox/server.py\"（需替换实际路径）。\n添加后即可在Cursor中使用自然语言操作Word文档"
    scenario: "该服务适用于自动化文档处理场景，如自动生成报告、批量编辑文档、插入表格和图片、调整文档格式等。\n具体场景包括：自动创建和格式化文档、在文档中添加表格并填充数据、设置文档的页边距和分页、查找并替换文档中的内容、按段落编辑文档内容而不改变原有格式"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "MCP-Doc是一个基于FastMCP的文档处理服务，通过自然语言指令在Cursor中操作Word文档，支持创建、编辑、保存文档，以及丰富的格式设置、表格处理和布局控制功能"
    tools:
      - name: create_document
        description: "创建新的Word文档"
        input_schema:
          type: object
          properties:
            - field: file_path
              type: string
              description: "文档保存路径（如：/home/user/document.docx）"
          required:
            - file_path

      - name: open_document
        description: "打开现有Word文档"
        input_schema:
          type: object
          properties:
            - field: file_path
              type: string
              description: "要打开的文档路径（如：/home/user/existing.docx）"
          required:
            - file_path

      - name: add_paragraph
        description: "向文档添加段落"
        input_schema:
          type: object
          properties:
            - field: content
              type: string
              description: "要添加的段落文本内容"
            - field: bold
              type: boolean
              description: "是否设置为粗体（true/false）"
            - field: alignment
              type: string
              description: "对齐方式（left/center/right/justify）"
          required:
            - content

      - name: add_table
        description: "在文档中添加表格"
        input_schema:
          type: object
          properties:
            - field: rows
              type: integer
              description: "表格行数"
            - field: columns
              type: integer
              description: "表格列数"
            - field: data
              type: array
              description: "表格内容数据（二维数组）"
          required:
            - rows
            - columns

      - name: add_picture
        description: "在文档中插入图片"
        input_schema:
          type: object
          properties:
            - field: image_path
              type: string
              description: "图片文件路径"
            - field: width
              type: integer
              description: "图片宽度（单位：毫米）"
            - field: height
              type: integer
              description: "图片高度（单位：毫米）"
          required:
            - image_path

      - name: find_and_replace
        description: "在文档中查找并替换文本"
        input_schema:
          type: object
          properties:
            - field: find_text
              type: string
              description: "要查找的文本"
            - field: replace_text
              type: string
              description: "替换后的文本"
          required:
            - find_text
            - replace_text

      - name: edit_section_by_keyword
        description: "通过关键词定位并编辑文档段落"
        input_schema:
          type: object
          properties:
            - field: keyword
              type: string
              description: "用于定位段落的关键词"
            - field: new_content
              type: string
              description: "替换后的新内容"
          required:
            - keyword
            - new_content

      - name: save_document
        description: "保存当前文档"
        input_schema:
          type: object
          properties:
            - field: file_path
              type: string
              description: "文档保存路径（可选，不提供则覆盖原文件）"
          required: [ ]
  - mcp_square_id: "mongodb"
    name: "MongoDB"
    category: "gov"
    desc: "使LLM能够直接与MongoDB数据库交互，通过自然语言查询集合、检查模式和管理数据"
    from: "Model Context Protocol"
    avatar_path: "mongodb/logo.png"
    detail_path: "mongodb/detail.md"
    feature: "支持集合模式检查、文档查询和过滤、索引管理以及文档操作（插入、更新、删除）"
    manual: "需要安装Node.js 18+。可通过以下方式安装：\n- 使用npx直接运行：`npx mongo-mcp <mongodb-connection-url>`\n- 通过Smithery自动安装：`npx -y @smithery/cli install mongo-mcp --client claude`\n在Claude Desktop配置文件中添加MCP服务器配置，指定MongoDB连接URL"
    scenario: "适用于需要与MongoDB数据库交互的各种应用场景，包括：\n- 数据分析：查询和分析数据库中的用户、产品或订单数据\n- 内容管理：管理文档型数据库中的内容记录\n- 系统监控：检查数据库结构和索引状态\n- 自动化操作：执行文档的增删改查操作"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "MongoDB MCP Server是一个模型上下文协议服务器，使LLM能够直接与MongoDB数据库交互，支持自然语言查询、模式检查、索引管理和文档操作"
    tools:
      - name: find
        description: "查询集合中的文档"
        input_schema:
          type: object
          properties:
            - field: collection
              type: string
              description: "要查询的集合名称"
            - field: filter
              type: object
              description: "MongoDB查询过滤器"
            - field: projection
              type: object
              description: "返回字段投影"
          required:
            - collection

      - name: listCollections
        description: "列出数据库中的所有集合"
        input_schema:
          type: object
          properties: [ ]
          required: [ ]

      - name: insertOne
        description: "向集合中插入单个文档"
        input_schema:
          type: object
          properties:
            - field: collection
              type: string
              description: "目标集合名称"
            - field: document
              type: object
              description: "要插入的文档内容"
          required:
            - collection
            - document

      - name: updateOne
        description: "更新集合中的单个文档"
        input_schema:
          type: object
          properties:
            - field: collection
              type: string
              description: "目标集合名称"
            - field: filter
              type: object
              description: "用于定位文档的过滤器"
            - field: update
              type: object
              description: "更新操作内容"
          required:
            - collection
            - filter
            - update

      - name: deleteOne
        description: "删除集合中的单个文档"
        input_schema:
          type: object
          properties:
            - field: collection
              type: string
              description: "目标集合名称"
            - field: filter
              type: object
              description: "用于定位文档的过滤器"
          required:
            - collection
            - filter

      - name: createIndex
        description: "在集合上创建新索引"
        input_schema:
          type: object
          properties:
            - field: collection
              type: string
              description: "目标集合名称"
            - field: keys
              type: object
              description: "索引键定义"
            - field: options
              type: object
              description: "索引选项（可选）"
          required:
            - collection
            - keys

      - name: dropIndex
        description: "删除集合上的索引"
        input_schema:
          type: object
          properties:
            - field: collection
              type: string
              description: "目标集合名称"
            - field: indexName
              type: string
              description: "要删除的索引名称"
          required:
            - collection
            - indexName

      - name: indexes
        description: "列出集合上的所有索引"
        input_schema:
          type: object
          properties:
            - field: collection
              type: string
              description: "目标集合名称"
          required:
            - collection
  - mcp_square_id: "postgrespro"
    name: "PostgreSQL Pro"
    category: "gov"
    desc: "支持AI代理在整个开发过程中与PostgreSQL数据库交互的MCP服务器"
    from: "Crystal DBA"
    avatar_path: "postgrespro/logo.png"
    detail_path: "postgrespro/detail.md"
    feature: "提供数据库健康分析、索引调优、查询计划验证、模式智能、安全的SQL执行\n支持标准输入/输出和服务器发送事件两种传输方式\n提供受限模式（生产环境）和无限制模式（开发环境）"
    manual: " 安装选项：\n- Docker: docker pull crystaldba/postgres-mcp\n- Python: pipx install postgres-mcp 或 uv pip install postgres-mcp\n 在 Claude Desktop 配置文件中添加 MCP 服务器配置：\n\\n\"postgres\": {\\n \"command\": \"docker\",\\n \"args\": [\"run\", \"-i\", \"--rm\", \"-e\", \"DATABASE_URI\", \"crystaldba/postgres-mcp\", \"--access-mode=restricted\"],\\n \"env\": {\\n \"DATABASE_URI\": \"postgresql://username:password@host:port/dbname\"\\n }\\n}\\n"
    scenario: "适用于数据库开发运维全周期：\n- 开发阶段：自动生成 SQL，优化查询性能 \n- 测试阶段：分析慢查询，验证执行计划 \n- 生产阶段：监控数据库健康，自动索引调优 \n- 维护阶段：检测复制延迟，预防事务 ID 回卷"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Postgres MCP Pro 是专为 AI 代理设计的数据库交互服务器，提供工业级索引调优算法、\n 全面的健康检查和安全的 SQL 执行环境，支持开发到生产全生命周期管理"
    tools:
      - name: list_schemas
        description: "列出PostgreSQL实例中的所有数据库模式"
        input_schema:
          type: object
          properties: [ ]
          required: [ ]

      - name: list_objects
        description: "列出指定模式中的数据库对象"
        input_schema:
          type: object
          properties:
            - field: schema
              type: string
              description: "目标模式名称"
          required:
            - schema

      - name: get_object_details
        description: "获取数据库对象的详细元数据"
        input_schema:
          type: object
          properties:
            - field: object_name
              type: string
              description: "数据库对象名称"
            - field: schema
              type: string
              description: "对象所在模式"
          required:
            - object_name
            - schema

      - name: execute_sql
        description: "在数据库上执行SQL语句"
        input_schema:
          type: object
          properties:
            - field: sql
              type: string
              description: "要执行的SQL语句"
          required:
            - sql

      - name: explain_query
        description: "获取SQL查询的执行计划"
        input_schema:
          type: object
          properties:
            - field: query
              type: string
              description: "要分析的SQL查询"
            - field: hypothetical_indexes
              type: array
              description: "模拟索引定义（可选）"
          required:
            - query

      - name: get_top_queries
        description: "根据执行时间获取最慢的SQL查询"
        input_schema:
          type: object
          properties:
            - field: limit
              type: integer
              description: "返回结果数量限制"
          required: [ ]

      - name: analyze_workload_indexes
        description: "分析工作负载并推荐最优索引"
        input_schema:
          type: object
          properties:
            - field: storage_budget
              type: integer
              description: "索引存储预算（MB）"
          required: [ ]

      - name: analyze_query_indexes
        description: "为特定查询推荐最优索引"
        input_schema:
          type: object
          properties:
            - field: queries
              type: array
              description: "要优化的SQL查询列表（最多10条）"
          required:
            - queries

      - name: analyze_db_health
        description: "执行全面的数据库健康检查"
        input_schema:
          type: object
          properties:
            - field: check_types
              type: array
              description: "要执行的检查类型（可选）"
          required: [ ]
  - mcp_square_id: "dmssecurity"
    name: "Database Security"
    category: "gov"
    desc: "提供安全的数据访问网关和智能查询引擎，支持40+数据源"
    from: "Alibaba Cloud"
    avatar_path: "dmssecurity/logo.png"
    detail_path: "dmssecurity/detail.md"
    feature: "安全访问（账户密码安全管理、细粒度权限控制、高风险 SQL 识别）\n 智能数据查询（内置 NL2SQL 算法、个性化知识库）\n 多数据源支持（40 + 主流数据库 / 数据仓库）"
    manual: "前置要求：安装 uv 和 Python 3.10+，获取阿里云 AK/SK 或 STS Token\n 运行方式：\n- 源码运行：配置 ALIBABA_CLOUD_ACCESS_KEY_ID 等环境变量 \n- PyPI 包运行：使用 uvx 执行 alibabacloud-dms-mcp-server\n 支持两种模式：\n- 多实例模式：管理多个数据库实例 \n- 单数据库模式：固定访问指定数据库"
    scenario: "应用场景：\n- DBA 统一管理生产 / 测试 / 开发环境数据库 \n- 开发人员安全访问固定数据库 \n- 数据分析师使用自然语言查询业务数据 \n- 企业数据审计和安全合规管理"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "AlibabaCloud DMS MCP Server 是 AI 时代的数据安全访问网关，\n 提供安全的数据库访问控制和智能的自然语言查询能力，\n 支持 40 + 主流数据库和数据仓库"
    tools:
      - name: addInstance
        description: "添加阿里云数据库实例到DMS"
        input_schema:
          type: object
          properties:
            - field: host
              type: string
              description: "数据库主机地址"
            - field: port
              type: integer
              description: "数据库端口号"
            - field: instance_type
              type: string
              description: "实例类型（如MySQL, PostgreSQL等）"
          required:
            - host
            - port
            - instance_type

      - name: listInstances
        description: "搜索DMS中的数据库实例"
        input_schema:
          type: object
          properties:
            - field: env_type
              type: string
              description: "环境类型（生产/测试/开发）"
          required: [ ]

      - name: getDatabase
        description: "获取指定数据库的详细信息"
        input_schema:
          type: object
          properties:
            - field: schemaName
              type: string
              description: "数据库名称"
          required:
            - schemaName

      - name: listTable
        description: "列出指定数据库中的表"
        input_schema:
          type: object
          properties:
            - field: db_name
              type: string
              description: "数据库名称（多实例模式需要）"
          required: [ ]

      - name: getTableDetailInfo
        description: "获取表的详细结构信息"
        input_schema:
          type: object
          properties:
            - field: table_name
              type: string
              description: "表名称"
          required:
            - table_name

      - name: executeScript
        description: "执行SQL脚本并返回结果"
        input_schema:
          type: object
          properties:
            - field: sql
              type: string
              description: "要执行的SQL脚本"
          required:
            - sql

      - name: nl2sql
        description: "将自然语言问题转换为SQL查询"
        input_schema:
          type: object
          properties:
            - field: question
              type: string
              description: "自然语言问题"
          required:
            - question

      - name: askDatabase
        description: "使用自然语言查询数据库（单数据库模式）"
        input_schema:
          type: object
          properties:
            - field: question
              type: string
              description: "自然语言问题"
          required:
            - question
  - mcp_square_id: "mysqlsse"
    name: "MySQL SSE"
    category: "gov"
    desc: "基于SSE的MySQL查询服务器，提供安全的数据库操作功能"
    from: "FastMCP"
    avatar_path: "mysqlsse/logo.png"
    detail_path: "mysqlsse/detail.md"
    feature: "支持 SSE 实时数据传输；提供 MySQL 数据库查询接口；包含完整的安全机制（风险等级控制、SQL 注入防护、危险操作拦截）；自动事务管理；敏感信息保护；元数据查询结果自动格式化"
    manual: " 安装步骤：\n1. 克隆项目：git clone [项目地址]\n2. 安装依赖：pip install -r requirements.txt\n3. 配置.env 文件（设置 MySQL 连接信息和安全配置）\n4. 启动服务器：python src/server.py\n 服务器默认运行在 http://127.0.0.1:3000/sse"
    scenario: "应用场景：\n- 开发环境：执行高风险操作，获取详细错误信息 \n- 生产环境：安全执行低风险查询操作 \n- 数据库元数据管理：获取表结构、索引信息 \n- 数据查询分析：执行安全的数据查询操作"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "MySQL SSE服务器是基于FastMCP框架构建的数据库操作工具，通过SSE提供实时数据传输，支持SQL查询、元数据查询、数据库信息获取等功能，内置完善的安全机制保护数据库安全"
    tools:
      - name: mysql_query
        description: "执行SQL查询"
        input_schema:
          type: object
          properties:
            - field: sql
              type: string
              description: "要执行的SQL语句"
            - field: parameters
              type: array
              description: "查询参数（可选）"
          required:
            - sql
      - name: mysql_show_tables
        description: "获取数据库表列表"
        input_schema:
          type: object
          properties:
            - field: pattern
              type: string
              description: "表名匹配模式（可选）"
            - field: limit
              type: integer
              description: "结果数量限制（可选）"
          required: [ ]
      - name: mysql_describe_table
        description: "描述表结构"
        input_schema:
          type: object
          properties:
            - field: table_name
              type: string
              description: "表名称"
          required:
            - table_name
      - name: mysql_show_databases
        description: "获取数据库列表"
        input_schema:
          type: object
          properties:
            - field: include_system
              type: boolean
              description: "是否包含系统数据库（可选）"
          required: [ ]
      - name: mysql_show_indexes
        description: "获取表索引信息"
        input_schema:
          type: object
          properties:
            - field: table_name
              type: string
              description: "表名称"
          required:
            - table_name
      - name: mysql_paginate_results
        description: "结果分页功能"
        input_schema:
          type: object
          properties:
            - field: sql
              type: string
              description: "SQL查询语句"
            - field: page
              type: integer
              description: "页码"
            - field: per_page
              type: integer
              description: "每页记录数"
          required:
            - sql
            - page
            - per_page
  - mcp_square_id: "officeword"
    name: "Office Word"
    category: "gov"
    desc: "提供Word文档的自动化创建、编辑和内容提取功能"
    from: "modelcontextprotocol"
    avatar_path: "officeword/logo.png"
    detail_path: "officeword/detail.md"
    feature: "支持创建新文档、添加内容（段落/表格/图片）、读取文档内容、文档格式转换（如Word转PDF）等核心Word操作功能"
    manual: "1. 安装依赖: pip install mcp-server-office-word\n2. 配置环境：确保系统已安装 Microsoft Word 或使用兼容的文档处理库 \n3. 启动服务: python -m mcp_server_office_word"
    scenario: "- 自动化生成报告 / 合同 / 信函等标准化文档 \n- 批量处理 Word 文档内容（如数据提取或格式转换）\n- 将 LLM 生成的内容直接输出为格式化的 Word 文档 \n- 企业文档处理流程自动化（如简历处理 / 标书生成）"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Office Word MCP服务器为LLM提供Word文档的自动化处理能力，实现文档创建、内容编辑和格式转换的全流程操作。"
    tools:
      - name: "create_document"
        description: "创建新的Word文档"
        input_schema:
          type: object
          properties:
            - field: "filename"
              type: "string"
              description: "文档保存路径"
          required:
            - "filename"
      - name: "add_paragraph"
        description: "向文档添加文本段落"
        input_schema:
          type: object
          properties:
            - field: "document"
              type: "string"
              description: "文档对象引用"
            - field: "text"
              type: "string"
              description: "要添加的文本内容"
            - field: "style"
              type: "string"
              description: "段落样式（如Heading 1/Normal）"
          required:
            - "document"
            - "text"
      - name: "add_table"
        description: "向文档添加表格"
        input_schema:
          type: object
          properties:
            - field: "document"
              type: "string"
              description: "要操作的文档对象引用"
            - field: "rows"
              type: "integer"
              description: "表格的行数"
            - field: "columns"
              type: "integer"
              description: "表格的列数"
            - field: "data"
              type: "array"
              description: "用于填充表格的二维数组数据"
          required:
            - "document"
            - "rows"
            - "columns"
      - name: "convert_to_pdf"
        description: "将Word文档转换为PDF格式"
        input_schema:
          type: object
          properties:
            - field: "input_path"
              type: "string"
              description: "源Word文档路径"
            - field: "output_path"
              type: "string"
              description: "PDF输出路径"
          required:
            - "input_path"
            - "output_path"
  - mcp_square_id: "bingcn"
    name: "Bing Search"
    category: "gov"
    desc: "提供必应搜索引擎的网络搜索功能"
    from: "modelcontextprotocol"
    avatar_path: "bingcn/logo.png"
    detail_path: "bingcn/detail.md"
    feature: "关键特性包括通过必应API执行实时网络搜索，返回结构化搜索结果（标题/URL/摘要），支持多语言查询和结果过滤。"
    manual: "1. 安装依赖: pip install mcp-server-bing-cn\n2. 配置环境变量: export BING_SEARCH_KEY=<你的API密钥>\n3. 启动服务: python -m mcp_server_bing_cn"
    scenario: "- 需要获取实时网络信息的场景（如新闻查询 / 事实核查）\n- 知识库补充：当本地知识不足时检索最新网络资源 \n- 多语言搜索：支持中文 / 英文及其他语言查询"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "必应搜索MCP服务器，为LLM提供实时网络搜索能力，使其能够访问最新网络信息并返回结构化结果。"
    tools:
      - name: "web_search"
        description: "通过必应API执行网络搜索"
        input_schema:
          type: object
          properties:
            - field: "query"
              type: "string"
              description: "搜索关键词或自然语言问题"
            - field: "max_results"
              type: "integer"
              description: "返回结果数量 (默认5，最大10)"
            - field: "language"
              type: "string"
              description: "搜索语言代码 (如zh-CN/en-US，默认自动检测)"
          required:
            - "query"
  - mcp_square_id: "sqlite"
    name: "SQLite Database"
    category: "gov"
    desc: "提供轻量级SQLite数据库的创建、查询和管理功能"
    from: "modelcontextprotocol"
    avatar_path: "sqlite/logo.png"
    detail_path: "sqlite/detail.md"
    feature: "支持数据库创建/连接、执行SQL查询（SELECT/INSERT/UPDATE/DELETE）、表结构操作（CREATE/ALTER/DROP TABLE）、事务管理（BEGIN/COMMIT/ROLLBACK）、数据库备份与导出。"
    manual: "1. 安装: pip install mcp-server-sqlite\n2. 无需额外数据库服务，零配置启动 \n3. 启动服务: python -m mcp_server_sqlite"
    scenario: "小型应用的数据存储与管理、原型开发阶段的快速数据持久化、嵌入式设备的本地数据存储、数据分析的临时数据库、教育场景的SQL学习工具"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "SQLite MCP服务器为LLM提供轻量级嵌入式数据库操作能力，支持完整的SQL语法和事务管理，适用于本地数据存储需求。"
    tools:
      - name: "execute_sql"
        description: "执行SQL查询并返回结果"
        input_schema:
          type: object
          properties:
            - field: "db_path"
              type: "string"
              description: "数据库文件路径（如不存在则自动创建）"
            - field: "query"
              type: "string"
              description: "要执行的SQL语句"
            - field: "parameters"
              type: "array"
              description: "SQL参数化查询的参数列表"
          required:
            - "db_path"
            - "query"
      - name: "create_table"
        description: "创建新数据表"
        input_schema:
          type: object
          properties:
            - field: "db_path"
              type: "string"
              description: "数据库文件路径"
            - field: "table_name"
              type: "string"
              description: "要创建的数据表名称"
            - field: "columns"
              type: "array"
              description: "列定义列表（如 ['id INTEGER PRIMARY KEY', 'name TEXT']）"
          required:
            - "db_path"
            - "table_name"
            - "columns"
      - name: "export_database"
        description: "导出数据库为SQL文件"
        input_schema:
          type: object
          properties:
            - field: "db_path"
              type: "string"
              description: "源数据库文件路径"
            - field: "output_file"
              type: "string"
              description: "导出的SQL文件路径"
          required:
            - "db_path"
            - "output_file"
  - mcp_square_id: "chartgenerator"
    name: "Chart Generator"
    category: "gov"
    desc: "提供基于AntV/G2Plot的专业级数据可视化图表生成服务"
    from: "modelcontextprotocol"
    avatar_path: "chartgenerator/logo.png"
    detail_path: "chartgenerator/detail.md"
    feature: "支持20+图表类型：折线图/柱状图/饼图/散点图/雷达图等、自动数据适配与智能图表推荐、深度可定制：主题/颜色/标注/动画效果、响应式设计，支持多端展示"
    manual: "1. 安装: pip install mcp-server-chart\n2. 无需额外依赖，纯 JavaScript 渲染 \n3. 启动服务: python -m mcp_server_chart\n4. 访问: http://localhost:8000/docs 查看 API 文档 "
    scenario: "数据分析报告自动生成、实时业务数据监控仪表盘、学术研究数据可视化、大模型生成数据的即时图表展示、自动化报表系统集成"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "基于AntV/G2Plot的图表生成MCP服务器，为LLM提供专业级数据可视化能力，支持一键生成可交互的统计图表。"
    tools:
      - name: "generate_chart"
        description: "生成指定类型的图表"
        input_schema:
          type: object
          properties:
            - field: "chart_type"
              type: "string"
              enum: [ "line", "bar", "pie", "scatter", "area", "radar" ]
              description: "图表类型"
            - field: "data"
              type: "array"
              items:
                type: "object"
              description: "图表数据集"
            - field: "title"
              type: "string"
              description: "图表标题"
            - field: "width"
              type: "integer"
              description: "图表宽度(默认800)"
            - field: "height"
              type: "integer"
              description: "图表高度(默认500)"
            - field: "theme"
              type: "string"
              enum: [ "light", "dark" ]
              description: "主题风格(默认light)"
          required:
            - "chart_type"
            - "data"
      - name: "auto_recommend_chart"
        description: "根据数据结构自动推荐最佳图表类型"
        input_schema:
          type: object
          properties:
            - field: "data"
              type: "array"
              items:
                type: "object"
              description: "数据集"
            - field: "analysis_target"
              type: "string"
              description: "分析目标（如：趋势分析/占比分析/分布分析）"
          required:
            - "data"
      - name: "export_chart"
        description: "导出图表为图片或HTML"
        input_schema:
          type: object
          properties:
            - field: "chart_config"
              type: "object"
              description: "图表配置对象"
            - field: "format"
              type: "string"
              enum: [ "png", "jpg", "svg", "html" ]
              description: "导出格式(默认html)"
            - field: "output_path"
              type: "string"
              description: "输出文件路径"
          required:
            - "chart_config"
            - "output_path"
  - mcp_square_id: "edgeonepages"
    name: "EdgeOne Pages"
    category: "gov"
    desc: "提供基于腾讯云EdgeOne的全球静态网站托管与边缘部署服务"
    from: "modelcontextprotocol"
    avatar_path: "edgeonepages/logo.png"
    detail_path: "edgeonepages/detail.md"
    feature: "全球加速：通过200+边缘节点实现毫秒级内容分发、自动HTTPS：免费SSL证书自动申请与续签、智能缓存：AI驱动的缓存策略优化、安全防护：集成WAF和DDoS防护、持续部署：Git仓库自动构建部署"
    manual: "1. 安装: pip install mcp-server-edgeone-pages\n2. 配置认证: export EDGEONE_ACCOUNT_ID=<your_account_id> 和 export EDGEONE_API_KEY=<your_api_key>\n3. 部署网站: eop deploy --site-name mysite --dist-dir ./dist"
    scenario: "- 静态网站全球部署 \n- 前端框架应用托管（Vue/React/Angular）\n- 边缘计算应用分发 \n- 全球营销活动页面快速上线 \n- 灾难恢复与多区域冗余部署"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "EdgeOne Pages MCP服务器为LLM提供企业级静态网站托管能力，实现一键全球部署、智能加速和安全防护的完整解决方案"
    tools:
      - name: "deploy_site"
        description: "部署静态网站到EdgeOne全球边缘网络"
        input_schema:
          type: object
          properties:
            - field: "site_name"
              type: "string"
              description: "站点唯一标识名称"
            - field: "dist_dir"
              type: "string"
              description: "本地构建目录路径"
            - field: "environment"
              type: "string"
              enum: [ "production", "preview" ]
              description: "部署环境（生产/预览）"
            - field: "cache_strategy"
              type: "string"
              enum: [ "smart", "aggressive", "none" ]
              description: "缓存策略（默认smart）"
          required:
            - "site_name"
            - "dist_dir"
      - name: "bind_domain"
        description: "绑定自定义域名到站点"
        input_schema:
          type: object
          properties:
            - field: "site_name"
              type: "string"
              description: "要操作的站点名称"
            - field: "domain"
              type: "string"
              description: "完整域名（如www.example.com）"
            - field: "ssl_mode"
              type: "string"
              enum: [ "auto", "manual", "off" ]
              description: "SSL证书模式（默认auto）"
          required:
            - "site_name"
            - "domain"
      - name: "purge_cache"
        description: "清除边缘节点缓存"
        input_schema:
          type: object
          properties:
            - field: "site_name"
              type: "string"
              description: "要操作的站点名称"
            - field: "purge_all"
              type: "boolean"
              description: "是否清除全站缓存"
            - field: "urls"
              type: "array"
              description: "指定清除的URL路径列表"
          required:
            - "site_name"
      - name: "manage_env_vars"
        description: "管理站点环境变量"
        input_schema:
          type: object
          properties:
            - field: "site_name"
              type: "string"
              description: "要操作的站点名称"
            - field: "action"
              type: "string"
              enum: [ "set", "delete", "list" ]
              description: "要执行的操作"
            - field: "variables"
              type: "object"
              description: "键值对环境变量（用于set操作）"
          required:
            - "site_name"
            - "action"
  - mcp_square_id: "mcpserverchart"
    name: "McpChart"
    category: "industry"
    desc: "可视化图标"
    from: "AntV"
    avatar_path: "mcpserverchart/logo.png"
    detail_path: "mcpserverchart/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "丰富的图表类型，支持超过25种可视化图表，涵盖常见的统计图表（折线图、柱状图、饼图等）、关系类图表（组织架构图、思维导图、网络图等）及标注地图和路径地图。"
    manual: "推荐使用docker安装dbhub，连接方式使用sse，镜像名称为bytebase/dbhub，也支持使用npm安装"
    scenario: "数据分析与报告\n教育与培训\n项目管理\n地理信息系统"
    summary: "MCP Server Chart 是蚂蚁AntV团队推出的可视化图表生成工具。工具基于Model Context Protocol（MCP）协议，支持超过25种可视化图表，包括常见的统计图表（如折线图、柱状图、饼图）和关系类图表（如组织架构图、思维导图、网络图等），支持标注地图和路径地图。用户只需简单文本输入，能快速生成图表，无需复杂操作。工具支持多种客户端接入，如Cherry Studio、Claude Desktop等，提供SSE和Streamable传输协议，方便集成到不同平台。"
    tools:
      - name: generate_area_chart
        description: "Generate a area chart to show data trends under continuous independent variables and observe the overall data trend"
        input_schema:
          type: object
          properties:
            - field: data
              type: array
              description: "Data for area chart, such as, [{ time: '2018', value: 99.9 }]."
            - field: theme
              type: string
              description: "Set the theme for the chart"
            - field: width
              type: number
              description: "Set the width of chart, default is 600."
            - field: height
              type: number
              description: "Set the height of chart, default is 400."
            - field: title
              type: string
              description: "Set the title of chart."
            - field: axisXTitle
              type: string
              description: "Set the x-axis title of chart."
            - field: axisYTitle
              type: string
              description: "Set the y-axis title of chart."
          required:
            - data
  - mcp_square_id: "dbhub"
    name: "DBHub"
    category: "industry"
    desc: "一站式数据管理"
    from: "bytedase"
    avatar_path: "dbhub/logo.png"
    detail_path: "dbhub/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "关键特性包括支持多种数据库，包括 PostgreSQL、MySQL、MariaDB、SQL Server、SQLite 和 Oracle。"
    manual: "推荐使用docker安装dbhub，连接方式使用sse，镜像名称为bytebase/dbhub，也支持使用npm安装"
    scenario: "DBHub 是一个通用的数据库网关，支持多种数据库，包括 PostgreSQL、MySQL、MariaDB、SQL Server、SQLite 和 Oracle。"
    summary: "DBHub 是一个通用的数据库网关，实现了模型上下文协议（MCP）服务器接口。 它允许与 MCP 兼容的客户端连接并探索不同的数据库。 支持多种数据库，包括 PostgreSQL、MySQL、MariaDB、SQL Server、SQLite 和 Oracle。"
    tools:
      - name: run_query
        description: "Execute a SQL query"
        input_schema:
          type: object
          properties:
            - field: query
              type: string
              description: "sql cmd"
          required:
            - query
  - mcp_square_id: "mcphub"
    name: "MCPHub"
    category: "industry"
    desc: "一站式管理mcp服务器聚合平台"
    from: "other"
    avatar_path: "mcphub/logo.png"
    detail_path: "mcphub/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "广泛的 MCP 服务器支持：无缝集成任何 MCP 服务器，配置简单。集中式管理控制台：在一个简洁的 Web UI 中实时监控所有服务器的状态和性能指标。灵活的协议兼容：完全支持 stdio 和 SSE 两种 MCP 协议。"
    manual: "推荐使用docker安装mcphub，连接方式使用sse，镜像名称为samanhappy/mcphub，也支持使用npm安装"
    scenario: "适用于MCP服务管理。"
    summary: "MCPHub 通过将多个 MCP（Model Context Protocol）服务器组织为灵活的流式 HTTP（SSE）端点，简化了管理与扩展工作。系统支持按需访问全部服务器、单个服务器或按场景分组的服务器集合。"
    tools:
      - name: list_tools
        description: "list all tools"
  - mcp_square_id: "climcpserver"
    name: "run_command"
    category: "industry"
    desc: "命令行执行"
    from: "other"
    avatar_path: "climcpserver/logo.png"
    detail_path: "climcpserver/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "在受限制的目录中执行命令，支持配置shell运算符。"
    manual: "安装cli-mcp-server可以使用npx安装"
    scenario: "适用于在受控环境中执行shell命令，例如列出文件、查看文件内容等。"
    summary: "一种用于在指定目录中执行shell命令的工具，支持配置shell运算符，确保命令在安全环境中执行。"
    tools:
      - name: run_command
        description: "Allows command (CLI) execution in the directory: /allowed/dir\n\nAvailable commands: ls, cat, pwd\nAvailable flags: -l, -a, -h\n\nShell operators (&&, ||, |, >, >>, <, <<, ;) are not supported. Set ALLOW_SHELL_OPERATORS=true to enable."
        input_schema:
          type: object
          properties:
            - field: command
              type: string
              description: "Single command to execute (example: 'ls -l' or 'cat file.txt')"
          required:
            - command
  - mcp_square_id: "mcpshellserver"
    name: "ShellServer"
    category: "industry"
    desc: "在指定目录执行命令行工具"
    from: "other"
    avatar_path: "mcpshellserver/logo.png"
    detail_path: "mcpshellserver/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "支持多参数命令执行、标准输入传递、工作目录指定和超时控制"
    manual: "安装cli-mcp-server可以使用uv或者npx安装"
    scenario: "适用于需要在特定目录执行命令行工具的场景，如文件操作、编译命令等"
    summary: "一个命令行工具执行器，允许在指定目录执行命令，并可配置标准输入内容和超时限制。确保命令在安全环境中执行，避免 shell 注入风险"
    tools:
      - name: shell_execute
        description: "在指定目录执行命令行工具\n允许的命令: ls, cat, pwd, echo"
        input_schema:
          type: object
          properties:
            - field: command
              type: array
              items:
                type: string
              description: "命令及其参数数组"
            - field: stdin
              type: string
              description: "通过标准输入传递给命令的内容"
            - field: directory
              type: string
              description: "命令执行的工作目录"
            - field: timeout
              type: integer
              description: "最大执行时间（秒）"
              minimum: 0
          required:
            - command
            - directory
  - mcp_square_id: "mcpmermaid"
    name: "Mermaid"
    category: "industry"
    desc: "将 Mermaid markdown 语法描述的图表转换为 PNG 图像，允许 AI 助手和其他应用程序实现图表可视化。"
    from: "other"
    avatar_path: "mcpmermaid/logo.png"
    detail_path: "mcpmermaid/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "支持多种图表主题，高质量渲染，输出选项灵活"
    manual: "安装cli-mcp-server可以使用uv或者npx安装"
    scenario: "智能文档生成；实验平台架构展示"
    summary: "为 AI 应用和其他程序提供了将 Mermaid 图表转换为 PNG 图像的能力。通过标准化的协议接口，实现了与 AI 助手的无缝集成，具有主题多样、渲染质量高、输出灵活等特点。其使用方式多样，适用于多种需要图表可视化的 AI 相关场景，有助于提升 AI 应用在图表生成与展示方面的效率和效果"
    tools:
      - name: generate_mermaid_diagram
        description: "Generate mermaid diagram and chart with mermaid syntax dynamically. Mermaid is a JavaScript based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams. The main purpose of Mermaid is to help documentation catch up with development."
        input_schema:
          type: object
          properties:
            - field: mermaid
              type: string
              description: "用于生成图表的Mermaid语法，例如：graph TD; A-->B; A-->C; B-->D; C-->D;"
            - field: theme
              type: string
              enum: [ "default", "base", "forest", "dark", "neutral" ]
              description: "图表主题（可选），默认值为'default'"
            - field: backgroundColor
              type: string
              description: "图表背景色（可选），默认值为'white'"
            - field: outputType
              type: string
              description: "图表输出类型，可选'png'、'svg'或'mermaid'，默认值为'png'"
          required:
            - mermaid
  - mcp_square_id: "mongomcp"
    name: "MongoMcp"
    category: "industry"
    desc: "MongoDB 比较与同步工具"
    from: "第三方 MongoDB 工具生态"
    avatar_path: "mongomcp/logo.png"
    detail_path: "mongomcp/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "支持 MongoDB 数据结构与内容的精准比对，包括集合结构、文档字段、索引配置等；提供数据同步功能，可实现不同 MongoDB 实例间的增量或全量数据同步；支持跨版本 MongoDB 环境的比对与同步，兼容主流版本；具备可视化比对结果展示，清晰呈现差异点。"
    manual: "推荐通过官方 GitHub 仓库下载安装包，支持 Windows、Linux、MacOS 系统；安装后配置 MongoDB 连接信息（主机、端口、用户名、密码、数据库名）；选择比对模式（结构比对 / 数据比对）或同步模式，执行操作后查看结果报告。"
    scenario: "数据库迁移与升级 \n 多环境数据一致性校验 \n 主从库数据同步监控 \n 开发与生产环境数据差异排查"
    summary: "Mongo-Cmp 的 MCP 工具是一款基于 Model Context Protocol（MCP）协议的 MongoDB 专用比对与同步工具。它聚焦于 MongoDB 数据库的结构与数据一致性管理，支持跨版本环境，提供可视化结果展示，操作便捷。适用于数据库迁移、多环境校验等场景，帮助用户高效维护 MongoDB 数据的准确性与一致性，是 MongoDB 生态中数据管理的实用工具。"
    tools:
      - name: find
        description: "Query documents in a collection using MongoDB query syntax"
        input_schema:
          type: object
          properties:
            - field: collection
              type: string
              description: "Name of the collection to query"
            - field: filter
              type: object
              description: "MongoDB query filter"
            - field: limit
              type: number
              description: "Maximum documents to return"
            - field: projection
              type: object
              description: "Fields to include/exclude"
          required:
            - collection
  - mcp_square_id: "websitedownloader"
    name: "WebsiteDownloaderMcp"
    category: "industry"
    desc: "网站内容下载与本地化工具"
    from: "开源社区 / MCP 生态贡献者"
    avatar_path: "websitedownloader/logo.png"
    detail_path: "websitedownloader/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "支持整站递归下载，包括 HTML、CSS、JS、图片等资源；自动修正资源路径，确保本地离线可访问；可配置下载深度与并发数，平衡效率与服务器负载；支持断点续传，应对网络中断场景；保留原始网站目录结构，便于内容管理。"
    manual: " 通过 pip 安装工具包（pip install mcp-website-downloader）；使用命令行指定目标 URL（mcp-download --url https://example.com）；可选参数配置：--depth（下载深度，默认 5）、--concurrency（并发数，默认 3）、--output（保存路径，默认./website-offline）；执行后自动开始下载，进度实时显示。"
    scenario: "网站离线备份与归档 \n 学术资料离线查阅 \n 网络环境受限下的内容访问 \n 网站迁移前的内容完整性校验"
    summary: "Website-Downloader 的 MCP 工具是一款基于 Model Context Protocol（MCP）协议的网站本地化工具，专注于将在线网站内容完整下载并转换为可离线访问的本地资源。其支持整站递归下载、路径自动修正与断点续传，通过灵活的参数配置适配不同场景需求。适用于网站备份、离线查阅等场景，为用户提供便捷的网站内容本地化解决方案。"
    tools:
      - name: download_website
        description: "Download an entire website using wget"
        input_schema:
          type: object
          properties:
            - field: url
              type: string
              description: "URL of the website to download"
            - field: outputPath
              type: string
              description: "Path where the website should be downloaded (optional, defaults to current directory)"
            - field: depth
              type: number
              description: "Maximum depth level for recursive downloading (optional, defaults to infinite)"
          required:
            - url
  - mcp_square_id: "markdownify"
    name: "MarkdownifyMcp"
    category: "industry"
    desc: "文本格式转换工具"
    from: "other"
    avatar_path: "markdownify/logo.png"
    detail_path: "markdownify/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "支持多种格式转换为 Markdown，包括 HTML、Word 文档、纯文本等；保留原始内容的排版结构，如标题层级、列表、表格、链接等；可自定义转换规则，调整格式处理细节；转换速度快，处理大文件效率高；支持批量转换多个文件。"
    manual: "可通过 npm 安装（npm install markdownify-mcp），也可下载桌面客户端；打开工具后，选择输入格式和源文件；设置输出路径和转换选项（如是否保留图片链接）；点击转换按钮，完成后查看生成的 Markdown 文件。"
    scenario: "文档格式统一处理 \n 网络文章备份为 Markdown\n 学术论文格式转换 \n 多文件批量格式转换处理"
    summary: "markdownify-mcp 的 MCP 工具是一款基于 Model Context Protocol（MCP）协议的格式转换工具。它能将多种格式的文本高效转换为 Markdown 格式，且能较好保留原始排版结构，还支持自定义规则和批量转换。适用于多种需要处理文本格式的场景，为用户提供了便捷的格式转换解决方案。"
    tools:
      - name: "pdf-to-markdown"
        description: "Convert a PDF file to markdown"
        input_schema:
          type: "object"
          properties:
            - field: filepath
              type: "string"
              description: "Absolute path of the PDF file to convert"
          required:
            - filepath
  - mcp_square_id: "elasticsearchmcpserver"
    name: "ElasticsearchMcpServer"
    category: "industry"
    desc: "Elasticsearch 搜索引擎的 MCP 协议适配服务"
    from: "Elasticsearch 社区 / MCP 协议适配团队"
    avatar_path: "elasticsearchmcpserver/logo.png"
    detail_path: "elasticsearchmcpserver/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "实现 MCP 协议与 Elasticsearch 的无缝对接，支持通过 MCP 协议接口操作 Elasticsearch；支持索引管理、文档 CRUD、复杂查询等核心功能的 MCP 标准化调用；提供实时查询结果反馈，支持流式响应（SSE）；可配置访问权限与请求限流，保障服务稳定性；兼容多个 Elasticsearch 版本（7.x+）。"
    manual: "推荐使用 docker 部署（docker pull elasticsearch-mcp-server:latest），配置文件指定 Elasticsearch 连接地址与 MCP 端口；启动容器后，通过 MCP 客户端（如 mcp-cli）连接，使用标准 MCP 指令交互；示例：查询索引（mcp request --action search --index myindex --query '{\"match\": { \"title\": \"test\" } }'）。"
    scenario: "多系统 Elasticsearch 统一访问层 \nAI 助手集成全文检索能力 \n 跨平台搜索服务标准化对接 \n 分布式日志检索的 MCP 协议适配"
    summary: "elasticsearch-mcp-server 的 MCP 工具是基于 Model Context Protocol（MCP）协议的 Elasticsearch 适配服务。它为 Elasticsearch 提供了标准化的 MCP 协议接口，支持核心搜索与管理功能，兼容多版本且部署灵活。适用于需要统一访问 Elasticsearch 或集成搜索能力到 MCP 生态的场景，简化了跨平台搜索服务的对接流程。"
    tools:
      - name: "get_document"
        description: "Get a document by ID"
        input_schema:
          type: "object"
          properties:
            - field: index
              type: "string"
              description: "Name of the index"
            - field: id
              type: "string"
              description: "Document ID"
          required:
            - index
            - id
  - mcp_square_id: "qrcodemcp"
    name: "QrcodeMcp"
    category: "industry"
    desc: "二维码生成与解析工具"
    from: "other"
    avatar_path: "qrcodemcp/logo.png"
    detail_path: "qrcodemcp/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "支持文本、网址、联系人等多种信息生成二维码；可自定义二维码尺寸、颜色（前景色、背景色）、容错级别；提供二维码解析功能，能识别图像中的二维码并提取信息；支持批量生成多个二维码，输出格式包括 PNG、JPEG、SVG 等；兼容不同版本二维码标准（QR Code 2.0）。"
    manual: " 通过 npm 安装（npm install qrcode-mcp），或使用 docker 镜像（docker pull qrcode-mcp:latest）；生成二维码：调用 API 传入内容及参数，如 qrcode-mcp generate --content 'https://example.com' --size 200 --color '#000000' --output ./qrcode.png；解析二维码：qrcode-mcp decode --input ./qrcode.png。"
    scenario: "营销活动中的信息快速传播（如网址、优惠码）\n 会议签到时的身份信息二维码生成 \n 物资管理中的标签二维码制作 \n 移动端与 PC 端的信息快速交互"
    summary: "qrcode_mcp 的 MCP 工具是一款基于 Model Context Protocol（MCP）协议的二维码处理工具，集生成与解析功能于一体。它支持多种信息类型和自定义参数，能批量处理且输出格式多样，兼容主流二维码标准。适用于营销、会议、物资管理等场景，为信息的快速传递与识别提供了便捷的解决方案。"
    tools:
      - name: "generate_qr_code"
        description: "Generate QR code(生成二维码图片) from text and return as image with description"
        input_schema:
          type: "object"
          properties:
            - field: text
              type: "string"
              description: "Text content to convert to QR code"
            - field: box_size
              type: "int"
              description: "Size of each box in pixels (1-50)"
            - field: border
              type: "int"
              description: "Number of boxes for border (0-20)"
            - field: fill_color
              type: "str"
              description: "Foreground color,default is black"
            - field: back_color
              type: "str"
              description: "Background color,default is  white"
          required:
            - urls
  - mcp_square_id: "mcpimagecompression"
    name: "McpImageCompression"
    category: "industry"
    desc: "图像压缩与优化工具"
    from: "other"
    avatar_path: "mcpimagecompression/logo.png"
    detail_path: "mcpimagecompression/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "支持多种图像格式压缩，包括 JPEG、PNG、WebP、GIF 等；提供不同压缩级别可选，平衡图像质量与文件大小；采用智能压缩算法，在减少文件体积的同时最大程度保留图像细节；支持批量压缩多个图像文件，提升处理效率；可设置压缩后的图像尺寸、格式转换等参数。"
    manual: "可通过 npm 安装（npm install mcp-image-compression），或使用 docker 镜像（docker pull mcp-image-compression:latest）；调用工具时，传入源图像路径、输出路径及压缩参数（如 --quality 80 表示质量保留 80%）；示例命令：mcp-compress --input ./images --output ./compressed --format webp --quality 75。"
    scenario: "网站图像优化以提升加载速度 \n 移动应用资源压缩减少存储空间占用 \n 社交媒体内容上传前的体积优化 \n 图像批量处理与格式转换"
    summary: "mcp-image-compression 的 MCP 工具是一款基于 Model Context Protocol（MCP）协议的图像处理工具，专注于图像的压缩与优化。它支持多种图像格式，提供灵活的压缩参数设置，采用智能算法保障压缩效果，且支持批量处理。适用于网站、移动应用等场景的图像优化，能有效减少图像文件体积，提升传输和加载效率。"
    tools:
      - name: "image_compression"
        description: "Compress an image"
        input_schema:
          type: "object"
          properties:
            - field: urls
              type: "string"
              description: "URL of the image to compress,If it's a local file, do not add any prefix. array join by ','"
            - field: quantity
              type: "number"
              description: "Number of transcripts to return"
            - field: format
              type: "string"
              description: "Image format"
          required:
            - urls
  - mcp_square_id: "mcpinternetspeedtest"
    name: "McpInternetSpeedTest"
    category: "industry"
    desc: "网络速度测试与分析工具"
    from: "网络工具开发团队 / MCP 生态贡献者"
    avatar_path: "mcpinternetspeedtest/logo.png"
    detail_path: "mcpinternetspeedtest/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "支持下载速度、上传速度、延迟（Ping）和抖动（Jitter）的全方位测试；提供多节点测试选择，可指定测试服务器位置；测试结果以直观数据和图表形式展示，包含详细参数；支持定时自动测试，记录网络性能变化趋势；兼容多种网络类型（有线、无线、移动数据）。"
    manual: "通过 pip 安装（pip install mcp-internet-speed-test），或使用 docker 部署（docker run -it mcp-internet-speed-test）；命令行执行基础测试：mcp-speed-test；可选参数：--server（指定服务器 ID）、--interval（定时测试间隔，单位分钟）、--output（结果保存路径）；测试完成后查看实时生成的结果报告。"
    scenario: "家庭网络性能评估与问题排查 \n 企业网络带宽监控与优化 \n 远程办公网络环境检测 \n 网络服务质量（QoS）验证"
    summary: "mcp-internet-speed-test 的 MCP 工具是一款基于 Model Context Protocol（MCP）协议的网络速度测试工具。它能全面测试网络的下载、上传速度及延迟等指标，支持多节点选择和定时测试，结果展示直观。适用于家庭、企业等多种场景的网络性能评估与监控，为网络优化和问题排查提供可靠数据支持。"
    tools:
      - name: "measure_download_speed"
        description: "Measure download speed using incremental file sizes."
        input_schema:
          type: "object"
          properties:
            - field: size_limit
              type: "string"
              description: "Maximum file size to test (default: 100MB)"
          required:
            - size_limit
  - mcp_square_id: "biosppy"
    name: "BioSPPy 生物信号处理"
    category: "medical"
    desc: "专业的生物信号处理服务，专注于ECG（心电图）和EMG（肌电图）的时域/频域分析"
    from: "BioSPPy"
    avatar_path: "biosppy/logo.png"
    detail_path: "biosppy/detail.md"
    feature: "提供完整的ECG信号分析（R峰检测、心率变异性计算）、EMG信号分析（肌肉激活检测）、时域/频域特征提取、信号质量评估等功能"
    manual: "安装依赖：pip install biosppy numpy scipy fastmcp\n启动服务：python biosppy_mcp_sse.py\n配置Cursor MCP：在.cursor/mcp_settings.json中添加SSE端点配置"
    scenario: "心脏功能评估、运动生理学研究、肌肉疲劳检测、临床诊断、康复医学、体育科学、医疗设备数据处理"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "基于BioSPPy的专业生物信号处理服务，提供ECG和EMG的深度分析，包括时域指标（SDNN、RMSSD等）和频域指标（LF、HF功率等）计算"
    tools:
      - name: "analyze_ecg"
        description: "完整的ECG信号分析，包括R峰检测、心率计算和心跳模板提取"
        input_schema:
          type: object
          properties:
            - field: "signal"
              type: "array"
              description: "ECG信号数据点列表"
            - field: "sample_rate"
              type: "integer"
              description: "采样率(Hz)，建议250-1000Hz"
            - field: "show_plot"
              type: "boolean"
              description: "是否显示图表（服务中通常设为False）"
          required:
            - "signal"
            - "sample_rate"
      - name: "extract_ecg_features"
        description: "提取ECG时域和频域特征，包括心率变异性指标"
        input_schema:
          type: object
          properties:
            - field: "signal"
              type: "array"
              description: "ECG信号数据点列表"
            - field: "sample_rate"
              type: "integer"
              description: "采样率(Hz)"
          required:
            - "signal"
            - "sample_rate"
      - name: "ecg_time_domain"
        description: "专门的ECG时域指标分析，计算SDNN、RMSSD、pNN50等专业HRV指标"
        input_schema:
          type: object
          properties:
            - field: "signal"
              type: "array"
              description: "ECG信号数据点列表"
            - field: "sample_rate"
              type: "integer"
              description: "采样率(Hz)"
          required:
            - "signal"
            - "sample_rate"
      - name: "analyze_emg"
        description: "完整的EMG信号分析，包括肌肉激活检测和信号包络提取"
        input_schema:
          type: object
          properties:
            - field: "signal"
              type: "array"
              description: "EMG信号数据点列表"
            - field: "sample_rate"
              type: "integer"
              description: "采样率(Hz)，建议1000-2000Hz"
            - field: "show_plot"
              type: "boolean"
              description: "是否显示图表"
          required:
            - "signal"
            - "sample_rate"
      - name: "extract_emg_features"
        description: "提取EMG时域和频域特征，用于肌肉活动评估"
        input_schema:
          type: object
          properties:
            - field: "signal"
              type: "array"
              description: "EMG信号数据点列表"
            - field: "sample_rate"
              type: "integer"
              description: "采样率(Hz)"
          required:
            - "signal"
            - "sample_rate"
      - name: "emg_time_domain"
        description: "专门的EMG时域指标分析，计算15种时域特征"
        input_schema:
          type: object
          properties:
            - field: "signal"
              type: "array"
              description: "EMG信号数据点列表"
            - field: "sample_rate"
              type: "integer"
              description: "采样率(Hz)"
          required:
            - "signal"
            - "sample_rate"
      - name: "list_supported_metrics"
        description: "获取支持的分析指标列表"
        input_schema:
          type: object
          properties:
      - name: "generate_test_signal"
        description: "生成ECG/EMG测试信号"
        input_schema:
          type: object
          properties:
            - field: "signal_type"
              type: "string"
              description: "信号类型：'ecg'或'emg'"
            - field: "duration"
              type: "number"
              description: "信号时长(秒)"
            - field: "sample_rate"
              type: "integer"
              description: "采样率(Hz)"
            - field: "noise_level"
              type: "number"
              description: "噪声水平(0.0-1.0)"
            - field: "heart_rate"
              type: "number"
              description: "心率(仅ECG使用)"
            - field: "amplitude"
              type: "number"
              description: "信号幅度"
          required:
            - "signal_type"
            - "duration"
            - "sample_rate"
      - name: "signal_quality_assessment"
        description: "信号质量评估，检测干扰和异常"
        input_schema:
          type: object
          properties:
            - field: "signal"
              type: "array"
              description: "生理信号数据"
            - field: "signal_type"
              type: "string"
              description: "信号类型：'ecg'或'emg'"
            - field: "sample_rate"
              type: "integer"
              description: "采样率(Hz)"
          required:
            - "signal"
            - "sample_rate"
  - mcp_square_id: "desensitization"
    name: "Medical Desensitization"
    category: "medical"
    desc: "专业的医疗文本脱敏微服务，提供静态和动态两种脱敏模式"
    from: "FastMCP"
    avatar_path: "desensitization/logo.png"
    detail_path: "desensitization/detail.md"
    feature: |
      1. 双模脱敏：静态脱敏(查询展示)和动态脱敏(数据导出)
      2. 混合检测引擎：正则表达式规则+LLM智能增强
      3. LLM一步式智能脱敏
      4. 灵活的脱敏策略(掩码/替换/哈希/移除)
      5. 运行时配置与管理
      6. 高效的批量处理
      7. 健壮的架构设计(智能降级/类型安全/一致性保障)
    manual: |
      1. 配置环境变量(可选)：export OPENAI_API_KEY="sk-xxxxxxx"
      2. 启动服务器：python medical_desensitization_mcp.py
      3. 服务器默认运行在 http://0.0.0.0:8008/mcp
    scenario: |
      1. 医疗数据查询展示时的敏感信息隐藏
      2. 医疗数据导出共享时的隐私保护
      3. 医疗AI模型训练数据预处理
      4. 医疗系统间数据交换的安全保障
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "专业的医疗文本脱敏服务，结合正则表达式和LLM双重检测，提供静态和动态两种脱敏模式，保障医疗数据隐私安全。"
    tools:
      - name: "detect_sensitive_fields"
        description: "检测文本中的敏感字段"
        input_schema:
          type: object
          properties:
            - field: text
              type: string
              description: "待检测的医疗文本"
            - field: use_llm
              type: boolean
              description: "是否使用LLM增强检测(默认true)"
          required:
            - text
      - name: "configure_llm"
        description: "配置LLM设置"
        input_schema:
          type: object
          properties:
            - field: api_key
              type: string
              description: "DeepSeek API密钥"
            - field: base_url
              type: string
              description: "API基础URL(默认https://api.deepseek.com)"
            - field: model
              type: string
              description: "模型名称(默认deepseek-chat)"
            - field: temperature
              type: number
              description: "温度参数(默认0.1)"
            - field: max_tokens
              type: integer
              description: "最大token数(默认1024)"
          required:
            - api_key
      - name: "get_llm_status"
        description: "获取LLM状态信息"
        input_schema:
          type: object
          properties:
      - name: "llm_direct_desensitize"
        description: "使用LLM直接进行文本脱敏(推荐方法)"
        input_schema:
          type: object
          properties:
            - field: text
              type: string
              description: "待脱敏的医疗文本"
            - field: mode
              type: string
              description: "脱敏模式(static用于查询显示/dynamic用于数据导出)"
          required:
            - text

      - name: "batch_llm_desensitize"
        description: "使用LLM批量直接脱敏"
        input_schema:
          type: object
          properties:
            - field: text
              type: array
              description: "待脱敏文本列表"
            - field: mode
              type: string
              description: "脱敏模式(static/dynamic)"
            - field: export_format
              type: string
              description: "导出格式(json/csv/txt)"
          required:
            - texts
      - name: "static_desensitize_text"
        description: "静态脱敏-查询时隐藏关键信息"
        input_schema:
          type: object
          properties:
            - field: text
              type: string
              description: "待脱敏的医疗文本"
            - field: custom_rules
              type: string
              description: "可选的自定义规则(JSON字符串)"
          required:
            - text
      - name: "dynamic_desensitize_text"
        description: "动态脱敏-导出时替换数据"
        input_schema:
          type: object
          properties:
            - field: text
              type: string
              description: "待脱敏的医疗文本"
            - field: custom_rules
              type: string
              description: "可选的自定义规则(JSON字符串)"
          required:
            - text
      - name: "batch_desensitize"
        description: "批量脱敏处理"
        input_schema:
          type: object
          properties:
            - field: texts
              type: array
              description: "待脱敏文本列表"
            - field: rules
              type: array
              description: "自定义脱敏规则列表"
            - field: export_format
              type: string
              description: "导出格式(json/csv/txt)"
          required:
            - texts
      - name: "create_custom_rule"
        description: "创建自定义脱敏规则"
        input_schema:
          type: object
          properties:
            - field: field_type
              type: string
              description: "字段类型(name/id_card/phone/address等)"
            - field: pattern
              type: string
              description: "匹配的正则表达式"
            - field: static_type
              type: string
              description: "静态脱敏类型(mask/replace/hash/remove)"
            - field: dynamic_type
              type: string
              description: "动态脱敏类型(mask/replace/hash/remove)"
            - field: mask_char
              type: string
              description: "掩码字符(默认*)"
          required:
            - field_type
            - pattern
      - name: "get_default_rules"
        description: "获取默认脱敏规则列表"
        input_schema:
          type: object
          properties: []
      - name: "clear_replacement_cache"
        description: "清除替换缓存，确保每次运行生成不同的替换值"
        input_schema:
          type: object
          properties:
  - mcp_square_id: "dicomanonymize"
    name: "DICOM脱敏工具"
    category: "medical"
    desc: "支持DICOM医学影像的元数据与像素级自动脱敏"
    from: "DicomAnonymize-MCP-SSE"
    avatar_path: "dicomanonymize/logo.png"
    detail_path: "dicomanonymize/detail.md"
    feature: "遵循DICOM PS3.15标准，集成元数据字段清除、UID重编码、日期偏移及OCR检测像素脱敏能力；支持CT/MR模态的2D/3D影像处理。"
    manual: "安装依赖：pip install fastmcp pydicom paddleocr scikit-image opencv-python numpy。运行：python main.py"
    scenario: "适用于医院影像数据隐私合规处理、医学AI训练数据预处理、跨机构数据共享前的隐私清理等。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "DicomAnonymize-MCP-SSE 是一个用于医学影像隐私脱敏的标准化工具集，集成在MCP框架下，兼容智能体自动调用，支持高并发DICOM处理。"
    tools:
      - name: meta_anonymize_dicom
        description: "基于DICOM PS3.15标准删除敏感元数据并进行UID重编码与日期偏移"
        input_schema:
          type: object
          properties:
            - field: input_path
              type: string
              description: "原始DICOM文件路径"
            - field: output_path
              type: string
              description: "脱敏后DICOM文件保存路径"
            - field: date_offset_days
              type: integer
              description: "日期偏移天数，默认+100"
          required:
            - input_path
            - output_path
      - name: visual_anonymize_dicom
        description: "检测并遮盖DICOM像素中的烧录文字（如姓名、ID），符合DICOM PS3.15 E.3.2规范"
        input_schema:
          type: object
          properties:
            - field: input_path
              type: string
              description: "原始DICOM文件路径"
            - field: output_path
              type: string
              description: "像素脱敏后DICOM文件保存路径"
          required:
            - input_path
            - output_path
  - mcp_square_id: "elasticsearch"
    name: "ES计算工具"
    category: "medical"
    desc: "提供基于Elasticsearch的数据查询、统计和导出功能"
    from: "modelcontextprotocol"
    avatar_path: "elasticsearch/logo.png"
    detail_path: "elasticsearch/detail.md"
    feature: "支持多种查询类型、数据导出和聚合统计功能"
    manual: "通过Python脚本启动服务，默认端口9031。支持环境变量配置ES连接参数。"
    scenario: "适用于需要对ES数据进行复杂查询、统计分析和报表导出的工业场景"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "基于Elasticsearch的计算工具，提供数据查询、统计分析和报表导出功能"
    tools:
      - name: "mcp_search"
        description: "执行ES查询"
        input_schema:
          type: object
          properties:
            - field: "index"
              type: "string"
              description: "索引名称"
            - field: "properties"
              type: "string"
              description: "要查询的字段名"
            - field: "query_value"
              type: "string|number|array"
              description: "查询值(字符串/数字/范围数组)"
            - field: "query_type"
              type: "string"
              description: "查询类型(match/gte/range)"
          required:
            - "index"
            - "properties"
            - "query_value"
      - name: "mcp_q2w"
        description: "导出查询结果到Excel"
        input_schema:
          type: object
          properties:
            - field: "index_name"
              type: "string"
              description: "索引名称"
            - field: "query"
              type: "object"
              description: "查询条件(JSON格式)"
            - field: "output_file"
              type: "string"
              description: "输出文件路径(.xlsx或.csv)"
          required:
            - "index_name"
            - "query"
            - "output_file"
      - name: "mcp_aggregate"
        description: "执行聚合统计"
        input_schema:
          type: object
          properties:
            - field: "index"
              type: "string"
              description: "索引名称"
            - field: "filter_conditions"
              type: "object"
              description: "过滤条件(JSON格式)"
            - field: "field_name"
              type: "string"
              description: "统计字段名"
            - field: "operation"
              type: "string"
              description: "聚合操作(sum/avg/max/min/count)"
          required:
            - "index"
            - "field_name"
            - "operation"
  - mcp_square_id: "funasr"
    name: "医药语音识别"
    category: "medical"
    desc: "基于中科院语音所Paraformer-large模型的专业医药语音识别服务"
    from: "Paraformer (中科院语音所)"
    avatar_path: "funasr/logo.png"
    detail_path: "funasr/detail.md"
    feature: "支持16kHz中文语音识别，医药专业术语增强，流式音频处理和文件识别。内置丰富的医药专业词汇库，包括常用药品名、医学术语、药理术语、解剖术语等，可自动纠正识别错误并优化医药文本准确性。"
    manual: "安装依赖：pip install funasr librosa soundfile fastmcp\n启动服务：python paraformer_medical_asr_mcp.py\n测试服务：python test_paraformer_medical_asr.py"
    scenario: |
      1. 医院门诊: 医生处方录音自动转写
      2. 药房管理: 药品名称语音识别和核对
      3. 医学教育: 医学术语语音学习和测试
      4. 病历录入: 医生查房记录语音转文字
      5. 药物咨询: 患者用药咨询录音整理
      6. 医疗会议: 学术讨论和病例分析记录
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "基于Paraformer-large大模型的专业医药语音识别服务，提供高精度的医药语音转写和文本增强功能，支持流式音频和文件两种处理模式。"
    tools:
      - name: "medical_asr_stream"
        description: "医药语音流式识别"
        input_schema:
          type: object
          properties:
            - field: "audio_data"
              type: "string"
              description: "Base64编码的音频数据"
            - field: "output_format"
              type: "string"
              description: "输出格式: 'text', 'detailed', 'enhanced'"
          required:
            - "audio_data"
      - name: "medical_asr_file"
        description: "医药语音文件识别"
        input_schema:
          type: object
          properties:
            - field: "file_path"
              type: "string"
              description: "音频文件路径"
            - field: "output_format"
              type: "string"
              description: "输出格式: 'text', 'detailed', 'enhanced'"
          required:
            - "file_path"
      - name: "enhance_medical_text"
        description: "医药文本后处理增强"
        input_schema:
          type: object
          properties:
            - field: "text"
              type: "string"
              description: "待增强的文本"
          required:
            - "text"
      - name: "get_medical_vocab"
        description: "获取医药专业词汇"
        input_schema:
          type: object
          properties:
      - name: "check_audio_format"
        description: "检查音频格式兼容性"
        input_schema:
          type: object
          properties:
            - field: "file_path"
              type: "string"
              description: "音频文件路径"
          required:
            - "file_path"
      - name: "get_model_info"
        description: "获取模型信息"
        input_schema:
          type: object
          properties:
  - mcp_square_id: "funasrfiles"
    name: "医疗长音频转写"
    category: "medical"
    desc: "基于中科院语音所Paraformer-large模型的专业医疗长音频转写服务，专门针对医疗会议、会诊、学术讲座等场景优化"
    from: "中科院语音所Paraformer"
    avatar_path: "funasrfiles/logo.png"
    detail_path: "funasrfiles/detail.md"
    feature: |
      关键特性包括：
      - 智能分段处理长时间医疗音频
      - 内置医疗会议专业词汇库(6大类)
      - 实时进度监控和异步处理
      - 多格式结果导出(JSON/SRT/VTT/TEXT)
      - 医疗专业词汇优化和文本增强
    manual: |
      安装依赖:
      pip install funasr librosa soundfile fastmcp
      
      启动服务:
      python paraformer_long_medical_transcribe_mcp.py
      
      Cursor MCP配置(.cursor/mcp_settings.json):
      {
        "mcpServers": {
          "paraformer_long_medical": {
            "type": "sse",
            "url": "http://localhost:9099/sse",
            "timeout": 1800
          }
        }
      }
    scenario: |
      该服务适用于以下医疗场景：
      - 医疗会议记录：MDT会议、学术讨论自动转写
      - 多学科会诊：跨科室会诊录音整理和归档
      - 病例讨论：疑难病例讨论会议记录转写
      - 学术讲座：医学培训、继续教育讲座转写
      - 手术讨论：术前讨论、手术方案制定记录
      - 临床教学：医学院教学录音转写和整理
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "基于Paraformer-large模型的医疗长音频转写服务，提供智能分段、医疗术语增强、多格式导出等功能，专为医疗会议场景优化"
    tools:
      - name: "long_medical_audio_transcribe"
        description: "医疗长音频智能分段转写"
        input_schema:
          type: object
          properties:
            - field: "file_path"
              type: string
              description: "音频文件路径"
            - field: "chunk_length"
              type: integer
              description: "音频分段长度(秒)，默认30"
            - field: "overlap_length"
              type: integer
              description: "分段重叠长度(秒)，默认2"
            - field: "async_mode"
              type: boolean
              description: "是否异步处理，默认True"
          required:
            - "file_path"
      - name: "batch_medical_transcribe"
        description: "批量医疗音频转写"
        input_schema:
          type: object
          properties:
            - field: "file_paths"
              type: array
              description: "音频文件路径列表"
            - field: "chunk_length"
              type: integer
              description: "音频分段长度(秒)，默认30"
          required:
            - "file_paths"
      - name: "get_transcribe_progress"
        description: "获取转写进度"
        input_schema:
          type: object
          properties:
            - field: "task_id"
              type: string
              description: "任务ID"
          required:
            - "task_id"
      - name: "export_transcription_result"
        description: "导出转写结果"
        input_schema:
          type: object
          properties:
            - field: "task_id"
              type: string
              description: "任务ID"
            - field: "format_type"
              type: string
              description: "导出格式(json/text/srt/vtt)，默认json"
          required:
            - "task_id"
      - name: "medical_meeting_enhance"
        description: "医疗会议文本结构化增强"
        input_schema:
          type: object
          properties:
            - field: "text"
              type: string
              description: "待增强的医疗会议文本"
            - field: "meeting_type"
              type: string
              description: "会议类型(general/mdt/case_discussion/surgery_discussion)，默认general"
          required:
            - "text"
      - name: "segment_audio_analysis"
        description: "音频智能分段分析"
        input_schema:
          type: object
          properties:
            - field: "file_path"
              type: string
              description: "音频文件路径"
            - field: "analysis_type"
              type: string
              description: "分析类型(basic/detailed/energy)，默认basic"
          required:
            - "file_path"
      - name: "get_service_status"
        description: "获取服务状态"
        input_schema:
          type: object
          properties:
          required:
  - mcp_square_id: "heartpy"
    name: "HeartPy HRV Analysis"
    category: "medical"
    desc: "基于HeartPy的专业心电信号分析服务，支持PPG/ECG/BVP信号的HRV分析和质量评估"
    from: "HeartPy"
    avatar_path: "heartpy/logo.png"
    detail_path: "heartpy/detail.md"
    feature: |
      关键特性包括：
      - 支持30+种HRV指标计算（时域、频域、非线性）
      - 自动峰值检测和异常值处理
      - 信号质量评估和改进建议
      - 测试信号生成功能
      - 多生理信号格式支持（PPG/ECG/BVP）
    manual: |
      安装依赖: `pip install heartpy numpy fastmcp`
      启动服务: `python heartpy_mcp_sse.py`
      配置Cursor MCP: 在.cursor/mcp_settings.json中添加SSE端点配置
    scenario: |
      适用于以下场景：
      - 医疗健康：心律不齐检测、心血管风险评估
      - 运动科学：训练强度监控、恢复状态评估
      - 压力监测：自主神经活动评估
      - 睡眠研究：睡眠质量分析
      - 可穿戴设备数据分析
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "基于HeartPy科学计算库的专业心电信号分析服务，提供全面的HRV分析和信号质量评估功能"
    tools:
      - name: "analyze_ppg"
        description: "对PPG/ECG/BVP信号进行自动HRV分析"
        input_schema:
          type: object
          properties:
            - field: "signal"
              type: "array"
              description: "生理信号数据点列表 (如：[0.1, 0.11, 0.09, ...])"
            - field: "sample_rate"
              type: "integer"
              description: "采样率 (Hz)，范围10-10000，默认100"
            - field: "filter_signal"
              type: "boolean"
              description: "是否对信号进行滤波预处理，默认true"
          required:
            - "signal"
      - name: "list_supported_metrics"
        description: "获取支持的HRV指标分类列表"
        input_schema:
          type: object
          properties: [ ]
          required: [ ]
      - name: "get_signal_quality_info"
        description: "评估信号质量，不进行完整的HRV分析"
        input_schema:
          type: object
          properties:
            - field: "signal"
              type: "array"
              description: "生理信号数据点列表"
            - field: "sample_rate"
              type: "integer"
              description: "采样率 (Hz)，默认100"
          required:
            - "signal"
      - name: "generate_test_signal"
        description: "生成用于测试的模拟PPG信号"
        input_schema:
          type: object
          properties:
            - field: "duration"
              type: "number"
              description: "信号时长 (秒)，默认30.0"
            - field: "sample_rate"
              type: "integer"
              description: "采样率 (Hz)，默认100"
            - field: "hr"
              type: "number"
              description: "目标心率 (BPM)，默认72.0"
            - field: "noise_level"
              type: "number"
              description: "噪声水平 (0.0-1.0)，默认0.05"
          required: [ ]
  - mcp_square_id: "medcat"
    name: "MedCAT Clinical Tools"
    category: "medical"
    desc: "基于MedCAT的临床文本处理工具集，提供实体识别、去标识化、上下文分析和关系抽取功能"
    from: "FastMCP"
    avatar_path: "medcat/logo.png"
    detail_path: "medcat/detail.md"
    feature: "混合模型架构(MedCAT+LLM)，智能降级与增强，高度可配置，标准化接口"
    manual: |
      1. 安装依赖: pip install fastmcp pydantic
      2. 配置环境变量(可选):
         - MedCAT相关模型路径(MEDCAT_MODEL_PATH等)
         - LLM API Key(OPENAI_API_KEY或DEEPSEEK_API_KEY)
      3. 启动服务: python medcat_mcp_server.py
    scenario: |
      1. 电子病历结构化处理
      2. 临床研究数据提取
      3. 患者隐私信息保护
      4. 医学知识图谱构建
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "基于MedCAT和LLM的临床文本处理微服务，提供实体识别、去标识化、上下文分析和关系抽取功能"
    tools:
      - name: clinical_entity_recognition
        description: "临床实体识别与链接工具"
        input_schema:
          type: object
          properties:
            - field: text
              type: string
              description: "输入的临床文本"
            - field: return_meta
              type: boolean
              description: "是否返回元信息"
          required:
            - text
      - name: batch_document_processing
        description: "批量文档实体抽取工具"
        input_schema:
          type: object
          properties:
            - field: texts
              type: array
              description: "文档文本列表"
              items:
                type: string
            - field: max_workers
              type: integer
              description: "最大并发工作线程数"
          required:
            - texts
      - name: clinical_text_deidentification
        description: "临床文本去标识化工具"
        input_schema:
          type: object
          properties:
            - field: text
              type: string
              description: "输入的临床文本"
            - field: deid_mode
              type: string
              description: "去标识化模式(mask/replace/remove)"
          required:
            - text
      - name: entity_context_analysis
        description: "实体上下文判别工具"
        input_schema:
          type: object
          properties:
            - field: text
              type: string
              description: "输入的临床文本"
          required:
            - text
      - name: clinical_relation_extraction
        description: "实体关系抽取工具"
        input_schema:
          type: object
          properties:
            - field: text
              type: string
              description: "输入的临床文本"
            - field: min_confidence
              type: number
              description: "最小置信度阈值(0-1)"
          required:
            - text
  - mcp_square_id: "medocr"
    name: "MedOCR MCP"
    category: "medical"
    desc: "医学影像及报告的OCR识别MCP插件，实现医学图片和文档的自动文字提取与结构化。"
    from: "agent-maas/mcp"
    avatar_path: "medocr/logo.png"
    detail_path: "medocr/detail.md"
    feature: "集成高精度OCR模型，支持医学影像、截图、扫描文档等多种格式的文本识别，可输出结构化内容，支持批量处理与区域自定义。"
    manual: "克隆MedOCR_MCP仓库，参考文档配置OCR模型环境，通过命令行或API调用实现图片、PDF、DICOM截图等多种输入的文本识别与导出。"
    scenario: "适用于医院、科研机构、医学AI公司等场景，助力病历数字化、医学文档归档、报告自动结构化与辅助数据挖掘。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "MedOCR MCP为医学场景下的图片及文档文本识别提供高效工具，提升医学信息化与数据结构化水平，支持多模态、多场景文本提取。"
    tools:
      - name: ocr_image
        description: "对医学图片或扫描文档进行文字识别与提取"
        input_schema:
          type: object
          properties:
            - field: image_path
              type: string
              description: "待识别的图片文件路径，支持JPG、PNG、TIFF等格式"
            - field: roi
              type: array
              description: "可选，感兴趣区域的坐标或框参数，指定识别区域"
          required:
            - image_path
      - name: ocr_batch
        description: "批量对多个医学图片或PDF文档进行文字识别"
        input_schema:
          type: object
          properties:
            - field: input_dir
              type: string
              description: "包含待识别文件的文件夹路径"
            - field: output_dir
              type: string
              description: "识别结果保存的文件夹路径"
          required:
            - input_dir
            - output_dir
      - name: ocr_dicom
        description: "对DICOM影像截图或嵌入图片进行OCR文本提取"
        input_schema:
          type: object
          properties:
            - field: dicom_path
              type: string
              description: "包含DICOM影像的文件或文件夹路径"
            - field: frame_index
              type: integer
              description: "可选，指定需要提取的帧序号（多帧DICOM适用）"
          required:
            - dicom_path
  - mcp_square_id: "medsam2d"
    name: "MedSAM 2D MCP"
    category: "medical"
    desc: "基于MedSAM模型的医学影像智能分割MCP插件，支持多种自动与交互式分割能力。"
    from: "agent-maas/mcp"
    avatar_path: "medsam2d/logo.png"
    detail_path: "medsam2d/detail.md"
    feature: "集成了先进的大模型分割算法，支持自动、点选、框选等交互式医学影像分割，结果可导出为标准医学影像格式，适配多种临床及科研应用。"
    manual: "克隆MedSAM_mcp仓库，按照文档部署插件并在医学影像处理平台中加载使用。可通过命令行或界面交互方式调用分割、掩膜编辑等工具。"
    scenario: "适用于医院放射科、科研机构、医学AI企业等在病灶自动标注、影像分析、数据预处理等场景，提升医学图像分割效率和准确性。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "MedSAM MCP是面向医学影像领域的智能分割工具，基于大模型分割算法，支持灵活的人机交互和多种影像格式处理，大幅提升影像标注与分析的智能化水平。"
    tools:
      - name: auto_segmentation
        description: "对医学影像进行全自动目标区域分割"
        input_schema:
          type: object
          properties:
            - field: image_path
              type: string
              description: "输入影像文件路径，支持DICOM、NIfTI等常见医学影像格式"
            - field: output_path
              type: string
              description: "分割结果保存路径"
          required:
            - image_path
      - name: interactive_segmentation
        description: "基于点或框交互，实现医学影像的智能分割"
        input_schema:
          type: object
          properties:
            - field: image_path
              type: string
              description: "待分割的影像文件路径"
            - field: prompts
              type: array
              description: "用户输入的交互提示（如点坐标或框参数）"
            - field: output_path
              type: string
              description: "分割结果保存路径"
          required:
            - image_path
            - prompts
      - name: mask_export
        description: "导出分割掩膜为标准医学影像格式"
        input_schema:
          type: object
          properties:
            - field: mask_path
              type: string
              description: "待导出的分割掩膜文件路径"
            - field: export_format
              type: string
              description: "导出格式（如DICOM、NIfTI等）"
          required:
            - mask_path
            - export_format
  - mcp_square_id: "medsam3d"
    name: "MedSAM 3D MCP"
    category: "medical"
    desc: "基于MedSAM模型的医学影像智能分割MCP插件，支持多种自动与交互式分割能力。"
    from: "agent-maas/mcp"
    avatar_path: "medsam3d/logo.png"
    detail_path: "medsam3d/detail.md"
    feature: "集成了先进的大模型分割算法，支持自动、点选、框选等交互式医学影像分割，结果可导出为标准医学影像格式，适配多种临床及科研应用。"
    manual: "克隆MedSAM_mcp仓库，按照文档部署插件并在医学影像处理平台中加载使用。可通过命令行或界面交互方式调用分割、掩膜编辑等工具。"
    scenario: "适用于医院放射科、科研机构、医学AI企业等在病灶自动标注、影像分析、数据预处理等场景，提升医学图像分割效率和准确性。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "MedSAM MCP是面向医学影像领域的智能分割工具，基于大模型分割算法，支持灵活的人机交互和多种影像格式处理，大幅提升影像标注与分析的智能化水平。"
    tools:
      - name: auto_segmentation
        description: "对医学影像进行全自动目标区域分割"
        input_schema:
          type: object
          properties:
            - field: image_path
              type: string
              description: "输入影像文件路径，支持DICOM、NIfTI等常见医学影像格式"
            - field: output_path
              type: string
              description: "分割结果保存路径"
          required:
            - image_path
      - name: interactive_segmentation
        description: "基于点或框交互，实现医学影像的智能分割"
        input_schema:
          type: object
          properties:
            - field: image_path
              type: string
              description: "待分割的影像文件路径"
            - field: prompts
              type: array
              description: "用户输入的交互提示（如点坐标或框参数）"
            - field: output_path
              type: string
              description: "分割结果保存路径"
          required:
            - image_path
            - prompts
      - name: mask_export
        description: "导出分割掩膜为标准医学影像格式"
        input_schema:
          type: object
          properties:
            - field: mask_path
              type: string
              description: "待导出的分割掩膜文件路径"
            - field: export_format
              type: string
              description: "导出格式（如DICOM、NIfTI等）"
          required:
            - mask_path
            - export_format
  - mcp_square_id: "mygene"
    name: "MyGene MCP"
    category: "medical"
    desc: "基于MyGene.info的基因信息检索MCP插件，支持多物种基因注释和生物医学知识查询。"
    from: "mygene.info"
    avatar_path: "mygene/logo.png"
    detail_path: "mygene/detail.md"
    feature: "可快速检索基因的ID、符号、功能、注释、相关疾病等信息，支持批量查询和多种数据库对接，适合生物医学大数据集成。"
    manual: "通过集成MyGene MCP，开发者可调用API或使用SDK在各类生物医学应用、知识图谱、自动化分析流水线中实现高效基因信息查询。详细用法参见官方文档和API说明。"
    scenario: "广泛应用于生物医学科研、基因组学分析、疾病机制研究、精准医疗、知识图谱建设、临床辅助决策等场景。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "MyGene MCP为生命科学和医疗健康领域提供强大的基因注释与生物医学知识查询能力，显著提升基因大数据分析和知识挖掘的效率。"
    tools:
      - name: gene_query
        description: "通过基因ID、基因符号或关键词检索目标基因的详细注释信息"
        input_schema:
          type: object
          properties:
            - field: query
              type: string
              description: "待查询的基因ID、基因名称或关键词，如TP53、ENSG00000141510等"
            - field: species
              type: string
              description: "物种名称或编号（可选），如human、mouse或9606"
            - field: fields
              type: array
              description: "可选，需返回的注释字段，如symbol、name、entrezgene、ensembl.gene、summary等"
          required:
            - query
      - name: batch_gene_query
        description: "批量查询多个基因的注释信息"
        input_schema:
          type: object
          properties:
            - field: queries
              type: array
              description: "待查询的基因列表，每个元素为基因ID或名称"
            - field: species
              type: string
              description: "物种名称或编号（可选），如human、mouse或9606"
            - field: fields
              type: array
              description: "可选，需返回的注释字段"
          required:
            - queries
      - name: gene_suggestion
        description: "根据部分拼写自动补全或推荐相关基因"
        input_schema:
          type: object
          properties:
            - field: prefix
              type: string
              description: "基因名称或ID的前缀字符串"
            - field: species
              type: string
              description: "物种名称或编号（可选）"
          required:
            - prefix
  - mcp_square_id: "myvariant"
    name: "MyVariant MCP"
    category: "medical"
    desc: "基于MyVariant.info的遗传变异注释与查询MCP插件，支持多类型基因变异的快速检索与功能解读。"
    from: "myvariant.info"
    avatar_path: "myvariant/logo.png"
    detail_path: "myvariant/detail.md"
    feature: "集成多数据库变异注释，支持SNP、INDEL、结构变异等多种基因变异类型的批量查询、注释、筛选和可视化，满足科研与临床多样需求。"
    manual: "通过集成MyVariant MCP，可在生物信息分析、临床遗传诊断、精准医学应用等场景下，调用API或SDK高效检索和注释基因变异信息，详细用法参见官方文档与API说明。"
    scenario: "广泛应用于生物医学研究、基因组分析、临床基因检测、遗传变异功能解读、变异致病性筛查和个性化医疗等领域。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "MyVariant MCP为科研和医疗领域用户提供一站式的遗传变异注释与查询服务，大幅提升基因变异大数据的处理、解读与知识发现效率。"
    tools:
      - name: variant_query
        description: "根据变异ID（如rsID、HGVS表达式等）查询详细注释信息"
        input_schema:
          type: object
          properties:
            - field: query
              type: string
              description: "变异ID、HGVS表达式或rs号，如rs58991260、chr1:g.35367G>A"
            - field: fields
              type: array
              description: "可选，需返回的注释字段，如dbsnp、clinvar、cosmic、cadd等"
          required:
            - query
      - name: batch_variant_query
        description: "批量查询多个基因变异的注释信息"
        input_schema:
          type: object
          properties:
            - field: queries
              type: array
              description: "待查询的变异ID、HGVS表达式或rs号的列表"
            - field: fields
              type: array
              description: "可选，需返回的注释字段"
          required:
            - queries
      - name: variant_filter
        description: "根据注释字段和过滤条件筛选目标变异"
        input_schema:
          type: object
          properties:
            - field: filter
              type: string
              description: "注释字段过滤条件，如'clinvar.rcv.clinical_significance:Pathogenic'"
            - field: size
              type: integer
              description: "可选，返回变异的数量上限"
          required:
            - filter
  - mcp_square_id: "neurokit2"
    name: "NeuroKit2 Physiological Analysis"
    category: "medical"
    desc: "基于NeuroKit2的多模态生理信号分析服务，支持ECG、EEG、EDA等多种信号类型的专业分析"
    from: "NeuroKit2"
    avatar_path: "neurokit2/logo.png"
    detail_path: "neurokit2/detail.md"
    feature: |
      1. 支持5种主要生理信号类型的专业分析
      2. 提供信号预处理、特征提取、质量评估全流程
      3. 科学算法经过同行评议
      4. 支持实时信号处理和批量数据分析
    manual: |
      安装依赖: pip install neurokit2 numpy scipy fastmcp
      启动服务: python neurokit2_mcp_sse.py
      配置Cursor MCP: 在.cursor/mcp_settings.json中添加服务配置
    scenario: |
      1. 神经科学研究: 大脑功能研究、认知神经科学实验
      2. 心理生理学: 情绪反应研究、压力评估
      3. 医疗监护: 心率监测、睡眠监测
      4. 运动科学: 运动员生理状态监测
      5. 人机交互: 脑机接口、情感计算
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "基于NeuroKit2的强大生理信号分析服务，提供ECG、EEG、EDA等多种生理信号的专业分析功能，包括信号预处理、特征提取、质量评估和测试信号生成。"
    tools:
      - name: analyze_ecg
        description: "完整的ECG信号分析，包括R峰检测、心率变异性计算等"
        input_schema:
          type: object
          properties:
            - field: signal
              type: array
              items:
                type: number
              description: "ECG信号数据点列表"
            - field: sample_rate
              type: integer
              description: "采样率(Hz)，ECG建议使用250-1000Hz"
            - field: method
              type: string
              description: "R峰检测方法: neurokit/pantompkins1985/hamilton2002/christov2004"
          required:
            - signal
            - sample_rate

      - name: detect_ecg_peaks
        description: "ECG R峰检测和心率计算"
        input_schema:
          type: object
          properties:
            - field: signal
              type: array
              items:
                type: number
              description: "ECG信号数据"
            - field: sample_rate
              type: integer
              description: "采样率(Hz)"
              default: 1000
            - field: method
              type: string
              description: "检测方法"
              default: "neurokit"
          required:
            - signal
            - sample_rate

      - name: analyze_eeg
        description: "EEG信号分析和频谱计算"
        input_schema:
          type: object
          properties:
            - field: signal
              type: array
              items:
                type: number
              description: "EEG信号数据"
            - field: sample_rate
              type: integer
              description: "采样率(Hz)，EEG通常使用250-1000Hz"
              default: 500
            - field: bands
              type: object
              description: "自定义频段，默认使用标准脑电频段"
          required:
            - signal
            - sample_rate

      - name: eeg_power_bands
        description: "专门的脑电频段功率分析"
        input_schema:
          type: object
          properties:
            - field: signal
              type: array
              items:
                type: number
              description: "EEG信号数据"
            - field: sample_rate
              type: integer
              description: "采样率(Hz)"
              default: 500
            - field: normalize
              type: boolean
              description: "是否标准化功率值"
              default: true
          required:
            - signal
            - sample_rate

      - name: analyze_eda
        description: "EDA(皮肤电导)信号分析"
        input_schema:
          type: object
          properties:
            - field: signal
              type: array
              items:
                type: number
              description: "EDA信号数据"
            - field: sample_rate
              type: integer
              description: "采样率(Hz)，EDA通常使用4-128Hz"
              default: 128
          required:
            - signal
            - sample_rate

      - name: list_supported_signals
        description: "返回NeuroKit2支持的生理信号类型和推荐参数"
        input_schema:
          type: object
          properties: [ ]

      - name: generate_test_signal
        description: "生成各种类型的测试生理信号"
        input_schema:
          type: object
          properties:
            - field: signal_type
              type: string
              description: "信号类型: ecg/eeg/eda/emg/rsp"
              default: "ecg"
            - field: duration
              type: number
              description: "信号时长(秒)"
              default: 30.0
            - field: sample_rate
              type: integer
              description: "采样率(Hz)"
              default: 1000
            - field: heart_rate
              type: number
              description: "ECG心率(BPM)"
              default: 70.0
            - field: noise
              type: number
              description: "噪声水平(0.0-1.0)"
              default: 0.1
            - field: scr_number
              type: integer
              description: "EDA信号中的SCR事件数量"
              default: 3
            - field: burst_number
              type: integer
              description: "EMG信号中的肌肉爆发数量"
              default: 5
            - field: respiratory_rate
              type: number
              description: "呼吸频率(次/分钟)"
              default: 15.0
          required:
            - signal_type

      - name: signal_quality_check
        description: "通用信号质量评估"
        input_schema:
          type: object
          properties:
            - field: signal
              type: array
              items:
                type: number
              description: "生理信号数据"
            - field: signal_type
              type: string
              description: "信号类型: ecg/eeg/eda"
              default: "ecg"
            - field: sample_rate
              type: integer
              description: "采样率(Hz)"
              default: 1000
          required:
            - signal
            - signal_type
            - sample_rate
  - mcp_square_id: "ohifdicomvisualization"
    name: "OHIF DICOM Visualization MCP"
    category: "medical"
    desc: "基于OHIF的医学影像DICOM可视化MCP插件，提供高效、交互式的多模态影像浏览与标注功能。"
    from: "agent-maas/mcp"
    avatar_path: "ohifdicomvisualization/logo.png"
    detail_path: "ohifdicomvisualization/detail.md"
    feature: "支持多种DICOM格式的可视化，具备2D/3D影像浏览、窗宽窗位调整、放大缩小、测量、结构化标注、分割掩膜叠加等核心功能，并可与PACS/数据库集成。"
    manual: "克隆OhifDicomVisualization_mcp仓库，根据文档配置环境并部署Web服务，通过浏览器访问，实现DICOM影像的在线浏览、交互操作和标注管理。"
    scenario: "广泛适用于医院、医学影像中心、科研及教学场景，实现影像的诊断浏览、会诊讨论、科研分析、教学演示和多模态数据交互标注。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "OHIF DICOM Visualization MCP提供了专业级医学影像的在线可视化与交互平台，集成多种临床和科研常用工具，提升影像分析与协作效率。"
    tools:
      - name: view_dicom
        description: "在线浏览和交互式查看DICOM影像数据"
        input_schema:
          type: object
          properties:
            - field: dicom_series_path
              type: string
              description: "待浏览的DICOM序列文件夹路径或远程URL"
          required:
            - dicom_series_path
      - name: adjust_window_level
        description: "调整DICOM影像窗宽和窗位，实现最佳对比度显示"
        input_schema:
          type: object
          properties:
            - field: window_width
              type: number
              description: "设置窗宽值"
            - field: window_center
              type: number
              description: "设置窗位值"
            - field: dicom_series_id
              type: string
              description: "对应的DICOM序列唯一标识"
          required:
            - window_width
            - window_center
            - dicom_series_id
      - name: annotate_image
        description: "在DICOM影像上进行结构化标注与分割掩膜叠加"
        input_schema:
          type: object
          properties:
            - field: dicom_series_id
              type: string
              description: "需标注的DICOM序列唯一标识"
            - field: annotation_type
              type: string
              description: "标注类型（如测量、框选、分割等）"
            - field: annotation_data
              type: object
              description: "标注内容或分割掩膜数据"
          required:
            - dicom_series_id
            - annotation_type
            - annotation_data
      - name: export_annotations
        description: "导出影像标注或分割结果，支持多种格式"
        input_schema:
          type: object
          properties:
            - field: dicom_series_id
              type: string
              description: "需导出的DICOM序列唯一标识"
            - field: export_format
              type: string
              description: "导出格式（如DICOM-SEG、JSON、PNG等）"
            - field: output_path
              type: string
              description: "导出文件保存路径"
          required:
            - dicom_series_id
            - export_format
            - output_path
  - mcp_square_id: "openmrsmcp"
    name: "OpenMRS电子病历接口"
    category: "medical"
    desc: "通过MCP协议访问OpenMRS系统中的结构化患者信息、诊断与医嘱数据"
    from: "modelcontextprotocol"
    avatar_path: "openmrsmcp/logo.png"
    detail_path: "openmrsmcp/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "支持基于OpenMRS REST API访问患者基本信息、就诊记录、诊断编码、用药记录与观察项数据，可用于医学问答、病历质控、临床研究数据提取等应用。"
    manual: "部署OpenMRS服务器并启用REST API模块，通过配置MCP连接参数（URL、认证信息）完成对接。适配多种HIS/EMR场景。"
    scenario: "适用于智慧医院数据接口、医疗LLM临床数据接入、辅助诊断系统、结构化病历研究平台等场景。"
    summary: "Openmrs-mcp 是连接开源OpenMRS电子病历系统的数据访问模块，封装REST API，提供标准化患者信息查询、诊断检索与医嘱数据获取功能，助力医疗AI系统与医院系统集成。"
    tools:
      - name: get_patient_by_identifier
        description: "根据患者标识符查询基本信息与就诊ID"
        input_schema:
          type: object
          properties:
            - field: identifier
              type: string
              description: "患者ID或注册编号"
          required:
            - identifier
      - name: get_patient_diagnoses
        description: "获取指定患者的诊断列表（ICD编码+诊断名称）"
        input_schema:
          type: object
          properties:
            - field: patient_uuid
              type: string
              description: "患者UUID（OpenMRS中的唯一标识）"
          required:
            - patient_uuid
      - name: get_patient_visits
        description: "查询患者的就诊记录（挂号时间、科室、医生等）"
        input_schema:
          type: object
          properties:
            - field: patient_uuid
              type: string
              description: "患者UUID"
          required:
            - patient_uuid
      - name: get_patient_observations
        description: "获取患者的检查/观察项（如体温、血压、化验结果）"
        input_schema:
          type: object
          properties:
            - field: patient_uuid
              type: string
              description: "患者UUID"
          required:
            - patient_uuid
  - mcp_square_id: "orthancdb"
    name: "OrthancDB MCP"
    category: "medical"
    desc: "基于Orthanc的医学影像数据库管理MCP插件，实现DICOM影像的高效存储、检索与集成管理。"
    from: "agent-maas/mcp"
    avatar_path: "orthancdb/logo.png"
    detail_path: "orthancdb/detail.md"
    feature: "支持DICOM影像的上传、查询、下载与元数据管理，具备Web服务接口，兼容主流PACS系统，可扩展脚本自动化和多用户权限控制。"
    manual: "克隆OrthancDB_mcp仓库，根据文档配置并启动Orthanc服务，使用API或Web界面进行DICOM影像的管理与集成调用。"
    scenario: "适用于医院、医学影像中心、科研机构等场景，用于构建本地或云端医学影像数据库，实现影像数据的集中管理、共享和与AI平台的对接。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "OrthancDB MCP为医学影像数据的高效存储、检索和管理提供一站式解决方案，助力数据合规流通和智能影像分析的基础建设。"
    tools:
      - name: upload_dicom
        description: "上传单个或批量DICOM文件至Orthanc数据库"
        input_schema:
          type: object
          properties:
            - field: dicom_path
              type: string
              description: "待上传的DICOM文件或文件夹路径"
            - field: patient_id
              type: string
              description: "关联的患者ID（可选，自动从DICOM标签获取）"
          required:
            - dicom_path
      - name: query_dicom
        description: "根据多种条件查询DICOM影像及元数据信息"
        input_schema:
          type: object
          properties:
            - field: query_criteria
              type: object
              description: "查询条件（如患者ID、检查时间、模态等）"
          required:
            - query_criteria
      - name: download_dicom
        description: "从Orthanc数据库中批量下载DICOM影像文件"
        input_schema:
          type: object
          properties:
            - field: study_uid
              type: string
              description: "需下载的检查（Study）唯一标识"
            - field: output_path
              type: string
              description: "下载后保存路径"
          required:
            - study_uid
            - output_path
      - name: manage_metadata
        description: "读取、修改或补充DICOM文件元数据"
        input_schema:
          type: object
          properties:
            - field: dicom_id
              type: string
              description: "DICOM文件或实例的唯一标识"
            - field: metadata_changes
              type: object
              description: "需要修改或补充的元数据内容"
          required:
            - dicom_id
            - metadata_changes
  - mcp_square_id: "slicer"
    name: "Slicer-MCP"
    category: "medical"
    desc: "标准化医学图像预处理与基础分析智能体工具集"
    from: "Slicer-MCP-SSE"
    avatar_path: "slicer/logo.png"
    detail_path: "slicer/detail.md"
    feature: "支持图像配准、重采样、裁剪、阈值分割与滤波等医学影像处理操作；兼容 DICOM、NIfTI 等多种格式，可嵌入 AI 流水线。"
    manual: "安装依赖：pip install fastmcp SimpleITK ants pydicom numpy。运行：python mcp_tool.py"
    scenario: "适用于医学影像的预处理、标准化、粗分割及批量自动化处理场景，如 AI 模型训练、临床辅助分析等。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Slicer-MCP 提供一组封装良好的医学图像处理工具，统一接口规范，适用于自动化分析与智能体交互，便于临床影像与 AI 融合开发。"
    tools:
      - name: image_registration
        description: "医学图像配准工具，支持 Rigid、Affine、SyN 三种配准类型"
        input_schema:
          type: object
          properties:
            - field: moving_path
              type: string
              description: "待配准图像路径"
            - field: fixed_path
              type: string
              description: "参考图像路径"
            - field: output_path
              type: string
              description: "配准结果保存路径"
            - field: mode
              type: string
              description: "配准类型：Rigid、Affine、SyN"
          required:
            - moving_path
            - fixed_path
            - output_path
      - name: resample_image
        description: "图像空间重采样，调整像素间距"
        input_schema:
          type: object
          properties:
            - field: image_path
              type: string
              description: "原始图像路径"
            - field: spacing
              type: string
              description: "新 spacing，格式如 '1,1,1'"
            - field: output_path
              type: string
              description: "输出图像路径"
          required:
            - image_path
            - spacing
            - output_path
      - name: crop_volume
        description: "三维体积裁剪，基于 ROI 指定截取区域"
        input_schema:
          type: object
          properties:
            - field: image_path
              type: string
              description: "输入图像路径"
            - field: roi
              type: string
              description: "裁剪区域 ROI，格式为 'xmin,xmax,ymin,ymax,zmin,zmax'"
            - field: output_path
              type: string
              description: "裁剪结果保存路径"
          required:
            - image_path
            - roi
            - output_path
      - name: threshold_segmentation
        description: "基于上下阈值范围的快速二值分割"
        input_schema:
          type: object
          properties:
            - field: image_path
              type: string
              description: "输入图像路径"
            - field: lower
              type: number
              description: "下阈值"
            - field: upper
              type: number
              description: "上阈值"
            - field: output_path
              type: string
              description: "输出二值图像路径"
          required:
            - image_path
            - lower
            - upper
            - output_path
      - name: basic_filter
        description: "基础滤波工具，支持高斯、中值、双边等多种类型"
        input_schema:
          type: object
          properties:
            - field: image_path
              type: string
              description: "输入图像路径"
            - field: output_path
              type: string
              description: "输出图像路径"
            - field: filter_type
              type: string
              description: "滤波类型：gaussian, mean, median, bilateral, laplacianofgaussian"
            - field: param
              type: number
              description: "滤波参数，控制平滑程度"
          required:
            - image_path
            - output_path
  - mcp_square_id: "speechbrain"
    name: "医疗声纹识别"
    category: "medical"
    desc: "基于SpeechBrain ECAPA-TDNN模型的医疗场景声纹认证和身份识别服务"
    from: "SpeechBrain"
    avatar_path: "speechbrain/logo.png"
    detail_path: "speechbrain/detail.md"
    feature: |
      关键特性包括：
      - 高精度ECAPA-TDNN声纹识别模型
      - 支持医生/患者/护士等医疗角色管理
      - 声纹注册、验证、识别一体化
      - 医疗场景说话人分析
      - 多说话人聚类和特征提取
      - 完整的说话人数据库管理
    manual: |
      安装依赖: pip install speechbrain torch scikit-learn librosa soundfile fastmcp
      启动服务: python speechbrain_medical_voiceprint_mcp.py
      测试服务: python test_speechbrain_medical_voiceprint.py
    scenario: |
      适用于医疗身份认证、病历录音分析、医疗会议记录等场景：
      - 门诊咨询场景的说话人角色识别
      - 病房查房录音的说话人聚类
      - 医疗会议的多说话人分析
      - 医生工作站声纹认证
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "基于深度学习的医疗场景声纹识别服务，提供完整的声纹注册、验证、识别和分析功能"
    tools:
      - name: enroll_speaker
        description: "医疗人员声纹注册"
        input_schema:
          type: object
          properties:
            - field: audio_data
              type: string
              description: "Base64编码的音频数据"
            - field: speaker_name
              type: string
              description: "说话人姓名"
            - field: role
              type: string
              description: "医疗角色(doctor/patient/nurse/therapist/technician/administrator/unknown)"
            - field: department
              type: string
              description: "科室/部门"
            - field: notes
              type: string
              description: "备注信息"
          required:
            - audio_data
            - speaker_name
      - name: verify_speaker
        description: "声纹身份验证(1:1验证)"
        input_schema:
          type: object
          properties:
            - field: audio_data
              type: string
              description: "Base64编码的音频数据"
            - field: speaker_id
              type: string
              description: "目标说话人ID"
          required:
            - audio_data
            - speaker_id
      - name: identify_speaker
        description: "声纹身份识别(1:N识别)"
        input_schema:
          type: object
          properties:
            - field: audio_data
              type: string
              description: "Base64编码的音频数据"
            - field: top_k
              type: integer
              description: "返回前K个最相似的说话人"
            - field: role_filter
              type: string
              description: "角色过滤器"
          required:
            - audio_data
      - name: medical_scene_analysis
        description: "医疗场景说话人分析"
        input_schema:
          type: object
          properties:
            - field: audio_data
              type: string
              description: "Base64编码的音频数据"
            - field: scene_type
              type: string
              description: "场景类型(general/consultation/ward_round/meeting/surgery_discussion)"
          required:
            - audio_data
      - name: speaker_clustering
        description: "多说话人聚类分析"
        input_schema:
          type: object
          properties:
            - field: audio_files
              type: array
              description: "音频文件路径列表或Base64数据列表"
            - field: cluster_method
              type: string
              description: "聚类方法(dbscan/kmeans)"
          required:
            - audio_files
      - name: extract_voice_features
        description: "声纹特征提取"
        input_schema:
          type: object
          properties:
            - field: audio_data
              type: string
              description: "Base64编码的音频数据"
            - field: return_raw
              type: boolean
              description: "是否返回原始特征向量"
          required:
            - audio_data
      - name: manage_speaker_database
        description: "说话人数据库管理"
        input_schema:
          type: object
          properties:
            - field: action
              type: string
              description: "操作类型(list/get/update/delete/stats)"
            - field: speaker_id
              type: string
              description: "说话人ID(某些操作需要)"
            - field: update_name
              type: string
              description: "更新的姓名"
            - field: update_role
              type: string
              description: "更新的角色"
            - field: update_department
              type: string
              description: "更新的科室"
            - field: update_notes
              type: string
              description: "更新的备注"
          required:
            - action
      - name: get_voiceprint_service_status
        description: "获取声纹识别服务状态"
        input_schema:
          type: object
          properties: [ ]
          required: [ ]
  - mcp_square_id: "congenitalheartdiseasepaperresource"
    name: "先天性心脏病文献资源库"
    category: "medical"
    desc: "提供先天性心脏病相关研究论文的结构化数据查询与使用接口"
    from: "modelcontextprotocol"
    avatar_path: "congenitalheartdiseasepaperresource/logo.png"
    detail_path: "congenitalheartdiseasepaperresource/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "该资源聚合了大量先天性心脏病的研究文献，涵盖病理机制、临床诊断、影像表现、治疗手段等，支持按关键词、作者、年份、期刊等维度筛选，并可进行结构化摘要提取。"
    manual: "安装 mcp-server-chd-paper 后运行服务器，或通过 FastMCP 直接部署服务。用户可调用接口进行文献检索、摘要获取与下载。"
    scenario: "适用于医学研究人员、医生、学生进行先天性心脏病相关文献查询、知识抽取与临床科研支持。尤其适合科研选题前的资料梳理或AI模型训练的参考数据准备。"
    summary: "该MCP资源库聚焦先天性心脏病领域的科研文献，结合文献解析与结构化处理能力，为医学人工智能建模、临床科研和教育提供关键支撑。"
    tools:
      - name: query_chd_papers
        description: "按条件查询先天性心脏病相关的研究文献"
        input_schema:
          type: object
          properties:
            - field: keyword
              type: string
              description: "查询关键词，可为疾病亚型、治疗方式、病理机制等"
            - field: year_range
              type: string
              description: "检索的时间范围，如 '2010-2023'"
            - field: author
              type: string
              description: "第一作者或通讯作者姓名"
            - field: journal
              type: string
              description: "期刊名称，如 'Circulation'"
          required:
            - keyword
      - name: get_paper_summary
        description: "获取指定文献的结构化摘要信息"
        input_schema:
          type: object
          properties:
            - field: paper_id
              type: string
              description: "文献唯一ID，由系统自动生成"
          required:
            - paper_id
      - name: download_paper
        description: "下载指定文献的原始PDF文件（如有权限）"
        input_schema:
          type: object
          properties:
            - field: paper_id
              type: string
              description: "文献唯一ID"
            - field: format
              type: string
              description: "下载格式，可选 'pdf', 'bibtex'"
          required:
            - paper_id
  - mcp_square_id: "druginstructionresource"
    name: "合理用药智能指令资源"
    category: "medical"
    desc: "面向临床用药场景的智能指令生成与用药合理性校验服务"
    from: "modelcontextprotocol"
    avatar_path: "druginstructionresource/logo.png"
    detail_path: "druginstructionresource/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "支持自然语言解析、患者特征建模、药物相互作用检查、适应症匹配与个体化用药推荐。具备对不合理用药行为的结构化反馈能力。"
    manual: "安装 mcp-server-drug-instruction 后运行服务，可通过 RESTful API 或 FastMCP 接入智能体。输入患者信息、药品、疾病指令后，可获取结构化合理用药建议。"
    scenario: "适用于电子病历系统（EMR）、智能问诊助手、药事服务平台、医学生教学等场景。支持人机混合决策与标准化数据接口。"
    summary: "DrugInstruction-resource 提供基于规则库与知识图谱的智能用药建议服务，结合患者特征与药品数据库，生成个体化、合理的用药指令或反馈建议。"
    tools:
      - name: parse_drug_instruction
        description: "解析自然语言用药请求，提取核心结构信息（疾病、药物、患者特征）"
        input_schema:
          type: object
          properties:
            - field: instruction
              type: string
              description: "自然语言形式的用药请求（如：'老年糖尿病患者能吃二甲双胍吗？'）"
          required:
            - instruction
      - name: check_drug_reasonability
        description: "评估当前用药方案是否合理，返回交互式建议"
        input_schema:
          type: object
          properties:
            - field: patient_profile
              type: object
              description: "患者信息，如年龄、性别、肝肾功能、妊娠状态等"
            - field: drug_list
              type: array
              description: "药品列表，每个元素为药品通用名"
            - field: diagnosis
              type: string
              description: "主要诊断或适应症"
          required:
            - patient_profile
            - drug_list
      - name: recommend_safe_drugs
        description: "基于患者特征与疾病自动推荐安全合理的药物列表"
        input_schema:
          type: object
          properties:
            - field: patient_profile
              type: object
              description: "患者信息，如年龄、性别、基础疾病等"
            - field: diagnosis
              type: string
              description: "诊断名称或疾病分类"
          required:
            - patient_profile
            - diagnosis
  - mcp_square_id: "herbstandardresource"
    name: "中药标准资源库"
    category: "medical"
    desc: "提供中药材、中成药、配伍禁忌、成分功效等标准化知识查询能力"
    from: "modelcontextprotocol"
    avatar_path: "herbstandardresource/logo.png"
    detail_path: "herbstandardresource/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "支持中药名称别名解析、成分与功效查询、药对搭配规范、配伍禁忌检测、药食同源条目检索等，适配临床问答与中医药智能体调用。"
    manual: "安装 mcp-server-herb-standard 后运行服务，支持自然语言或结构化调用，适配中药领域知识问答、用药分析或组方验证等任务。"
    scenario: "广泛应用于中医药问答助手、中药组方系统、合理用药平台、中药教育工具等场景。"
    summary: "HerbStandard-resource 是一个中药领域标准知识服务接口，涵盖药材、成分、功效、禁忌等结构化数据，支持智能问答、搭配校验和药对推荐。"
    tools:
      - name: query_herb_info
        description: "查询中药材的基本信息，包括性味归经、功效主治、来源等"
        input_schema:
          type: object
          properties:
            - field: herb_name
              type: string
              description: "中药名称或别名（如：黄芪、当归、党参）"
          required:
            - herb_name
      - name: check_herb_combination
        description: "检测两味或多味中药材的配伍是否合理，是否存在配伍禁忌"
        input_schema:
          type: object
          properties:
            - field: herb_list
              type: array
              description: "中药材名称数组，如 ['甘草', '干姜', '芒硝']"
          required:
            - herb_list
      - name: get_herb_pair_usage
        description: "查询常用药对的临床搭配、用途及现代研究支持"
        input_schema:
          type: object
          properties:
            - field: herb1
              type: string
              description: "第一味中药名称"
            - field: herb2
              type: string
              description: "第二味中药名称"
          required:
            - herb1
            - herb2
      - name: get_herb_by_effect
        description: "根据功效需求推荐中药材列表"
        input_schema:
          type: object
          properties:
            - field: effect
              type: string
              description: "功效名称（如：益气补血、清热解毒、祛风湿）"
          required:
            - effect
  - mcp_square_id: "medimageresource"
    name: "医学影像资源库"
    category: "medical"
    desc: "提供医学影像的读取、格式转换、关键参数提取与预处理能力"
    from: "modelcontextprotocol"
    avatar_path: "medimageresource/logo.png"
    detail_path: "medimageresource/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "支持DICOM文件读取、像素数组提取、影像元数据结构化、体素信息标准化、影像与报告关联管理等多项功能。"
    manual: "安装 mcp-server-medimage 后运行服务，适配影像AI开发、质控分析、数据管理等使用场景，可通过REST或FastMCP调用。"
    scenario: "适用于AI训练数据准备、DICOM服务器自动处理、医学图像预处理管线构建、医学报告与影像数据管理等场景。"
    summary: "MedImage-resource 提供对医学影像文件（尤其是 DICOM）的读取、结构化解析和基础处理能力，是医学影像AI系统构建的重要组件模块。"
    tools:
      - name: load_dicom
        description: "加载 DICOM 文件并解析基本信息与像素数据"
        input_schema:
          type: object
          properties:
            - field: file_path
              type: string
              description: "DICOM 文件路径"
          required:
            - file_path
      - name: extract_dicom_metadata
        description: "提取 DICOM 文件中的关键信息（患者、设备、序列参数等）"
        input_schema:
          type: object
          properties:
            - field: file_path
              type: string
              description: "DICOM 文件路径"
          required:
            - file_path
      - name: convert_to_nifti
        description: "将 DICOM 序列转换为 NIfTI 格式（.nii）"
        input_schema:
          type: object
          properties:
            - field: dicom_folder
              type: string
              description: "DICOM 文件夹路径（包含序列）"
          required:
            - dicom_folder
      - name: get_image_shape_spacing
        description: "获取影像的体素尺寸、空间分辨率等结构信息"
        input_schema:
          type: object
          properties:
            - field: file_path
              type: string
              description: "DICOM 或 NIfTI 文件路径"
          required:
            - file_path
  - mcp_square_id: "medterminologycodingresource"
    name: "医学术语编码资源库"
    category: "medical"
    desc: "提供ICD、SNOMED、LOINC等医学术语标准编码的查询与结构化对接能力"
    from: "modelcontextprotocol"
    avatar_path: "medterminologycodingresource/logo.png"
    detail_path: "medterminologycodingresource/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "支持自然语言到编码的映射、编码反查、模糊匹配、诊断/检验项目标准化等，适配中英文多语言处理，支持ICD-10、ICD-11、SNOMED CT、LOINC等标准。"
    manual: "安装 mcp-server-medcoding 后运行服务，可通过 REST 或 FastMCP 接入。适用于电子病历、智能问诊、辅助编码等任务。"
    scenario: "适用于医院信息系统（HIS）、电子病历（EMR）、质控平台、医学LLM中结构化诊断或检验项目标准对接场景。"
    summary: "MedTerminologyCoding-resource 是医学术语标准编码资源服务，支持主流医学编码体系的映射与查询，是临床结构化文书、智能问诊与知识图谱的重要接口模块。"
    tools:
      - name: map_term_to_code
        description: "将自然语言术语映射为标准编码（ICD、SNOMED、LOINC）"
        input_schema:
          type: object
          properties:
            - field: term
              type: string
              description: "临床术语（如 '糖尿病性视网膜病变'）"
            - field: coding_system
              type: string
              description: "编码体系（如 'ICD-10', 'ICD-11', 'SNOMED', 'LOINC'）"
          required:
            - term
            - coding_system
      - name: lookup_code_description
        description: "根据编码返回对应术语解释与分类结构"
        input_schema:
          type: object
          properties:
            - field: code
              type: string
              description: "标准编码（如 'E11.3'）"
            - field: coding_system
              type: string
              description: "编码体系（如 'ICD-10'）"
          required:
            - code
            - coding_system
      - name: fuzzy_match_terms
        description: "模糊匹配输入术语，返回最相关的标准术语及编码建议"
        input_schema:
          type: object
          properties:
            - field: input_text
              type: string
              description: "自由文本或症状描述（如 '高血压伴肾功能不全'）"
            - field: coding_system
              type: string
              description: "目标编码体系（如 'ICD-11'）"
          required:
            - input_text
            - coding_system
  - mcp_square_id: "oncologyexpertconsensusresource"
    name: "肿瘤专家共识资源库"
    category: "medical"
    desc: "提供结构化肿瘤相关专家共识文献查询、筛选与摘要提取能力"
    from: "modelcontextprotocol"
    avatar_path: "oncologyexpertconsensusresource/logo.png"
    detail_path: "oncologyexpertconsensusresource/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "支持按癌种、年份、发布机构筛选共识文献，提取核心推荐意见、证据等级与摘要内容，适配智能问答系统与临床决策支持模块。"
    manual: "安装 mcp-server-oncology-consensus 后运行服务，支持通过 REST 或 FastMCP 接口查询与调用专家共识文献内容。"
    scenario: "适用于智能问诊系统、肿瘤知识图谱构建、辅助决策系统、科研查新服务等医疗信息场景。"
    summary: "OncologyExpertConsensus-resource 是一个专注于肿瘤疾病领域专家共识的结构化知识服务模块，支持精准推荐与共识摘要获取。"
    tools:
      - name: query_consensus_by_filter
        description: "按癌种、年份、机构等条件检索专家共识文献"
        input_schema:
          type: object
          properties:
            - field: cancer_type
              type: string
              description: "癌种名称，如 '肺癌'、'肝癌'"
            - field: year_range
              type: string
              description: "时间范围，如 '2018-2024'"
            - field: organization
              type: string
              description: "发布机构，如 'CSCO'、'NCCN'"
          required:
            - cancer_type
      - name: get_consensus_summary
        description: "获取某份专家共识的结构化摘要内容"
        input_schema:
          type: object
          properties:
            - field: consensus_id
              type: string
              description: "共识文献唯一ID"
          required:
            - consensus_id
      - name: extract_recommendation_points
        description: "提取专家共识中各章节的推荐要点与证据等级"
        input_schema:
          type: object
          properties:
            - field: consensus_id
              type: string
              description: "共识文献唯一ID"
          required:
            - consensus_id
  - mcp_square_id: "kuaizi"
    name: "Kuaizi-视频创作"
    category: "edu"
    desc: "Kuaizi MCP Server 打造了LLM Agent与Kuaizi SaaS平台能力的无缝融合，通过6大核心服务接口，全方位赋能商业视频制作流程。"
    from: "https://www.modelscope.cn/"
    avatar_path: "kuaizi/logo.png"
    detail_path: "kuaizi/detail.md"
    feature: "从AI脚本生成、灵光索创意挖掘、智镜视频结构解析，到一键成片自动合成、长视频智能切片及多语言AI配音，为用户提供端到端的视频内容生产解决方案。"
    manual: "可在Cursor中使用或Trae中使用"
    scenario: "<p>以下是一个虚拟的简化使用场景，以帮助用户理解Kuaizi MCP服务各个工具的能力：</p>

<p>传统工作流</p>

<p>剪辑师小林接到美妆客户需求后，手动搜索热门视频灵感，花3小时撰写分镜脚本，因不熟悉实验室镜头拍摄，额外租借显微设备重拍产品特写。剪辑时反复调试转场特效，导出后又针对抖音、小红书分别调整视频尺寸和字幕位置，全程耗时48小时。</p>

<p>Agent智能工作流</p>

<p>小林将客户需求输入给Agent，Agent使用灵光索自动生成关键词\"口罩压妆测试/油皮极限挑战\"
  导入竞品爆款视频输入给Agent，Agent使用智镜解析工具，拆解出\"痛点放大+数据背书+素人对比\"结构
  Agent基于小林的需求，使用AI脚本生成工具生成输出分镜：虚拟实验室显微动画开场（0-3秒）+ 博主戴口罩运动实拍（4-12秒）+ AI生成的12小时持妆数据动态图表（13-15秒）
  最终Agent使用一键成片自动合成横竖双版本，同步添加\"蹭妆音效\"和动态大字幕，抖音版额外生成川渝方言配音
  效率跃迁</p>
  
  <p>原需2天的制作压缩至90分钟，且成片同时登上抖音美妆榜和小红书热门搜索。</p>"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "使用概述"
    tools:
      - name: "script_generate"
        description: "输入视频主题和关键词，自动生成包含镜头分组、画面描述和口播台词的结构化视频脚本"
        input_schema:
          type: object
          properties:
            - field: "content"
              type: "string"
              description: "本主题、商品卖点、促销机制等信息（字符串，必传）"
            - field: "language"
              type: "string"
              description: "描述语言（字符串，默认中文）"
      - name: "Video_analysis"
        description: "输入爆款视频链接，智能解析视频结构并生成可复用的创作脚本模板。"
        input_schema:
          type: object
          properties:
            - field: "video_url"
              type: "string"
              description: "解析视频链接"
      - name: "Video_generate"
        description: "输入产品素材和核心卖点，自动合成带AI配音、字幕和背景音乐的多版本营销视频"
        input_schema:
          type: object
          properties:
            - field: "input"
              type: "string"
              description: "营销视频关键词，品牌名、产品名、产品卖点（字符串）"
            - field: "material_list"
              type: "string"
              description: "用于合成识别的图片或视频素材（字符串）"
  - mcp_square_id: "imagegen"
    name: "图像生成MCP服务"
    category: "edu"
    desc: "Image Generation MCP Server 是一个图像生成服务，基于Replicate Flux模型，提供通过文本描述生成图像的功能。"
    from: "https://www.mcpworld.com/"
    avatar_path: "imagegen/logo.png"
    detail_path: "imagegen/detail.md"
    feature: "使用文本提示生成图像
支持多种图像格式（webp、jpg、png）
可配置图像宽高比
支持生成多张图像（1-4张）
支持随机种子设置以实现可重复生成"
    manual: "需要Node.js环境和npm包管理器。通过Smithery安装。"
    scenario: "需要快速生成图像的创意设计
基于文本描述生成视觉内容的应用
需要批量生成图像的自动化流程"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "使用概述"
    tools:
      - name: "generate_image"
        description: "根据文本提示生成图像"
        input_schema:
          type: object
          properties:
            - field: "prompt"
              type: "string"
              description: "图像生成的文本描述（字符串，必传）"
  - mcp_square_id: "bazi"
    name: "八字MCP"
    category: "edu"
    desc: "八字 MCP是参天 AI 推出的首个面向玄学领域的 MCP，针对 GPT 和 DeepSeek 等算命工具常出现的排盘错误，提供精准的八字数据，助力性格分析、命运预测等应用。"
    from: "https://www.modelscope.cn/"
    avatar_path: "bazi/logo.png"
    detail_path: "bazi/detail.md"
    feature: "精准排盘：提供全面的八字排盘信息。
AI 赋能：为 AI 智能体提供可靠八字服务。
社区共建：欢迎命理爱好者参与交流与开发"
    manual: "使用npx安装"
    scenario: "性格分析、命运预测等"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "使用概述"
    tools:
      - name: "getBaziDetail"
        description: "根据给定的公历或农历时间计算八字信息。"
        input_schema:
          type: object
          properties:
            - field: "Arguments"
              type: "string"
              description: "ISO 格式的阳历时间。例如：2000-05-15T12:00:00+08:00。 "
            - field: "lunarDatetime"
              type: "string"
              description: "农历时间。例如：2000-05-15 12:00:00。"
            - field: "gender"
              type: "Number"
              description: "性别。可选。0 - 女，1-男。默认 1。"
      - name: "getSolarTimes"
        description: "根据给定的八字返回可能的公历时间列表。 "
        input_schema:
          type: object
          properties:
            - field: "bazi"
              type: "string"
              description: "八字，各柱用空格隔开。"
      - name: "getChineseCalendar"
        description: "获取指定公历时间（默认今天）的黄历信息。 "
        input_schema:
          type: object
          properties:
            - field: "solarDatetime"
              type: "string"
              description: "ISO 格式的阳历时间。"
  - mcp_square_id: "mcplogogen"
    name: "MCP视觉生成器"
    category: "edu"
    desc: "此服务器使用 FAL AI 提供 logo 生成功能，包括图像生成、背景移除和自动缩放等工具。"
    from: "modelcontextprotocol"
    avatar_path: "mcplogogen/logo.png"
    detail_path: "mcplogogen/detail.md"
    feature: "此服务器使用 FAL AI 提供 logo 生成功能，包括图像生成、背景移除和自动缩放等工具。"
    manual: "可以选择通过``uv``直接运行而无需安装"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
  - mcp_square_id: "jimengpic"
    name: "即梦AI图片生成 MCP 服务"
    category: "edu"
    desc: "基于火山引擎即梦AI的图片生成MCP（Model Context Protocol）服务。"
    from: "https://www.modelscope.cn/"
    avatar_path: "jimengpic/logo.png"
    detail_path: "jimengpic/detail.md"
    feature: "使用火山引擎即梦AI API生成高质量图片
支持多种图片比例：4:3、3:4、16:9、9:16
标准化的MCP接口，兼容各种MCP客户端
环境变量配置，安全便捷"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    manual: "直接运行"
    tools:
      - name: "generate-image"
        description: "当用户需要生成图片时使用的工具。"
        input_schema:
          type: object
          properties:
            - field: "text"
              type: "string"
              description: "用户需要在图片上显示的文字"
            - field: "illustration"
              type: "string"
              description: "根据用户要显示的文字，提取3-5个可以作为图片配饰的插画元素关键词"
            - field: "color"
              type: "string"
              description: "图片的北京主色调"
            - field: "ratio"
              type: "enum"
              description: "图片比例，支持以下选项：
\"4:3\": 512×384
\"3:4\": 384×512
\"16:9\": 512×288
\"9:16\": 288×512"
  - mcp_square_id: "allvocelab"
    name: "趣丸千音"
    category: "edu"
    desc: "官方AllVoicelab模型上下文协议（MCP）服务器，支持与强大的文本到语音和视频翻译API的交互。"
    from: "https://www.modelscope.cn/"
    avatar_path: "allvocelab/logo.png"
    detail_path: "allvocelab/detail.md"
    feature: "多引擎技术解锁了语音的无限可能性：使用简单的文本输入，您可以访问视频生成，语音合成，语音克隆等。
AI语音生成器（TTS）：具有超高现实主义的30多种语言的自然语音生成
语音改变者：实时语音转换，非常适合游戏，直播和隐私保护
人声分离：超快速5ms人声和背景音乐的分离，具有行业领先的精度
多语言配音：一单击的翻译和配音，用于简短的视频/电影，保持情感语气和节奏
语音到文本（STT）：AI驱动的多语言字幕生成，精度超过98％
字幕删除：即使在复杂的背景下，无缝的硬字幕擦除
语音克隆：三秒钟的超快速克隆与类似人类的声音综合"
    manual: "可以通过UV安装使用"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    tools:
      - name: "text_to_speech"
        description: "将文字转换为语音"
      - name: "speep_to_speech"
        description: "在保留语音内容的同时，将音频转换为另一个声音"
      - name: "isaly_human_voice"
        description: "通过删除背景噪音和非语音声音来提取清洁人的声音"
      - name: "clone_voice"
        description: "通过从音频示例克隆来创建自定义的语音配置文件"
  - mcp_square_id: "imagen3"
    name: "Imagen3-MCP 图像生成服务"
    category: "edu"
    desc: "Imagen3-MCP 是一个基于 Google Imagen 3.0 的图像生成工具，通过 MCP 协议提供服务，支持生成高质量、照片级的图像。"
    from: "https://www.mcpworld.com/"
    avatar_path: "imagen3/logo.png"
    detail_path: "imagen3/detail.md"
    feature: "基于 Google Imagen 3.0 的图像生成
支持照片级画质的图像生成
通过 MCP 协议提供服务
可配置代理服务器和监听地址"
    manual: "依赖 Google Gemini API 密钥"
    scenario: "创意设计、广告制作、艺术创作、产品展示"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
  - mcp_square_id: "mcp3d"
    name: "MCP 3D浮雕生成器"
    category: "edu"
    desc: "MCP 3D浮雕生成器是一个专业的图像转3D模型工具，特别适用于需要将平面图像转换为立体浮雕的场景。"
    from: "https://www.mcpworld.com"
    avatar_path: "mcp3d/logo.png"
    detail_path: "mcp3d/detail.md"
    feature: "将任何图像转换为3D浮雕模型
控制模型尺寸（宽度、厚度）
为3D模型添加可选的基底
反转深度以获得不同的浮雕效果
快速处理并提供即时下载链接"
    manual: "可使用UV安装"
    scenario: "3D打印前的模型准备
艺术创作中的浮雕设计
教育领域的3D模型展示
工业设计中的快速原型制作"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
  - mcp_square_id: "goatsdk"
    name: "GOAT SDK - 智能体金融工具包"
    category: "edu"
    desc: "最大的智能体金融工具包，为AI智能体提供全面的金融交易、投资、支付和资产管理能力，支持多种区块链和钱包"
    from: "GOAT SDK开源项目"
    avatar_path: "goatsdk/logo.png"
    detail_path: "goatsdk/detail.md"
    feature: "支付收款、商品购买、投资策略、收益生成、预测市场、加密资产购买、资产代币化、金融洞察、跨链操作、多钱包支持、200+工具集成"
    manual: "通过npm或pip安装，支持TypeScript和Python，可与多种智能体框架集成，包括Vercel AI、Langchain、LlamaIndex、MCP等"
    scenario: "DeFi交易、跨链支付、投资管理、资产代币化、商品购买、收益挖矿、预测市场、智能体应用开发、量化交易、风险管理"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "GOAT SDK是一个功能强大的智能体金融工具包，通过区块链、加密货币和钱包基础设施，让AI智能体成为经济参与者，支持支付、投资、交易、资产管理等全方位金融服务"
    tools:
      - name: send_payment
        description: "发送支付交易，支持多种代币和区块链网络"
        input_schema:
          type: object
          properties:
            - field: to_address
              type: string
              description: "接收方地址"
            - field: amount
              type: string
              description: "转账金额"
            - field: token_address
              type: string
              description: "代币合约地址，如果是原生代币则可选"
            - field: chain
              type: string
              description: "区块链网络，如'ethereum'、'solana'、'polygon'等"
          required:
            - to_address
            - amount
            - chain
      - name: receive_payment
        description: "接收支付并获取交易信息"
        input_schema:
          type: object
          properties:
            - field: transaction_hash
              type: string
              description: "交易哈希"
            - field: chain
              type: string
              description: "区块链网络"
          required:
            - transaction_hash
            - chain
      - name: swap_tokens
        description: "在DEX上交换代币"
        input_schema:
          type: object
          properties:
            - field: from_token
              type: string
              description: "源代币地址或符号"
            - field: to_token
              type: string
              description: "目标代币地址或符号"
            - field: amount
              type: string
              description: "交换数量"
            - field: chain
              type: string
              description: "区块链网络"
            - field: slippage
              type: number
              description: "滑点容忍度，默认0.5%"
              required: false
          required:
            - from_token
            - to_token
            - amount
            - chain
      - name: provide_liquidity
        description: "向流动性池提供流动性"
        input_schema:
          type: object
          properties:
            - field: token_a
              type: string
              description: "代币A地址"
            - field: token_b
              type: string
              description: "代币B地址"
            - field: amount_a
              type: string
              description: "代币A数量"
            - field: amount_b
              type: string
              description: "代币B数量"
            - field: pool_address
              type: string
              description: "流动性池地址"
          required:
            - token_a
            - token_b
            - amount_a
            - amount_b
            - pool_address
      - name: stake_tokens
        description: "质押代币以获取收益"
        input_schema:
          type: object
          properties:
            - field: token_address
              type: string
              description: "质押代币地址"
            - field: amount
              type: string
              description: "质押数量"
            - field: staking_pool
              type: string
              description: "质押池地址"
            - field: duration
              type: integer
              description: "质押期限（天数）"
          required:
            - token_address
            - amount
            - staking_pool
      - name: mint_nft
        description: "铸造NFT（非同质化代币）"
        input_schema:
          type: object
          properties:
            - field: collection_address
              type: string
              description: "NFT合集地址"
            - field: metadata_uri
              type: string
              description: "NFT元数据URI"
            - field: to_address
              type: string
              description: "接收方地址"
            - field: chain
              type: string
              description: "区块链网络"
          required:
            - collection_address
            - metadata_uri
            - to_address
            -  chain
      - name: purchase_on_amazon
        description: "在亚马逊上购买商品"
        input_schema:
          type: object
          properties:
            - field: product_url
              type: string
              description: "商品链接"
            - field: quantity
              type: integer
              description: "购买数量，默认1"
            - field: payment_method
              type: string
              description: "支付方式，如'crypto'、'stablecoin'"
          required:
            - product_url
            - payment_method
      - name: bet_on_polymarket
        description: "在Polymarket预测市场下注"
        input_schema:
          type: object
          properties:
            - field: market_id
              type: string
              description: "市场ID"
            - field: outcome
              type: string
              description: "预测结果，如'yes'或'no'"
            - field: amount
              type: string
              description: "下注金额"
            - field: price
              type: number
              description: "下注价格"
          required:
            - market_id
            - outcome
            - amount
            - price
      - name: get_token_price
        description: "获取代币价格信息"
        input_schema:
          type: object
          properties:
            - field: token_address
              type: string
              description: "代币地址或符号"
            - field: chain
              type: string
              description: "区块链网络"
            - field: vs_currency
              type: string
              description: "对比货币，如'usd'、'eth'"
          required:
            - token_address
            - chain
      - name: get_portfolio_balance
        description: "获取钱包投资组合余额"
        input_schema:
          type: object
          properties:
            - field: wallet_address
              type: string
              description: "钱包地址"
            - field: chain
              type: string
              description: "区块链网络"
          required:
            - wallet_address
            -  chain
      - name: bridge_tokens
        description: "跨链桥接代币"
        input_schema:
          type: object
          properties:
            - field: from_chain
              type: string
              description: "源链"
            - field: to_chain
              type: string
              description: "目标链"
            - field: token_address
              type: string
              description: "代币地址"
            - field: amount
              type: string
              description: "桥接数量"
          required:
            - from_chain
            - to_chain
            - token_address
            -  amount
      - name: create_token
        description: "创建新的代币"
        input_schema:
          type: object
          properties:
            - field: name
              type: string
              description: "代币名称"
            - field: symbol
              type: string
              description: "代币符号"
            - field: supply
              type: string
              description: "总供应量"
            - field: decimals
              type: integer
              description: "小数位数，默认18"
            - field: chain
              type: string
              description: "部署的区块链网络"
          required:
            - name
            - symbol
            - supply
            - chain
      - name: get_defi_yield
        description: "获取DeFi收益信息"
        input_schema:
          type: object
          properties:
            - field: protocol
              type: string
              description: "DeFi协议名称"
            - field: token_pair
              type: string
              description: "代币对，如'ETH/USDC'"
            - field: pool_type
              type: string
              description: "池类型，如'liquidity'、'lending'、'staking'"
          required:
            - protocol
            - token_pair
            - pool_type
  - mcp_square_id: "mcphotnewsserver"
    name: "HotNews MCP Server"
    category: "edu"
    desc: "提供中国主流社交平台和新闻网站的实时热点话题"
    from: "wopal"
    avatar_path: "mcphotnewsserver/logo.png"
    detail_path: "mcphotnewsserver/detail.md"
    feature: "关键特性包括支持9个主要中国平台的实时热点获取、MCP协议兼容、Markdown格式输出、可点击链接和热度指数支持。"
    manual: "通过npm install @wopal/mcp-server-hotnews安装，或使用Docker运行。支持多平台组合查询，输出格式化的热点话题列表。"
    scenario: "HotNews MCP Server适用于媒体监控、热点追踪、内容创作、舆情分析和实时资讯获取等场景。"
    summary: "HotNews MCP Server是一个模型上下文协议服务器，提供来自知乎、微博、百度、B站等9个主要中国平台的实时热点话题数据。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    tools:
      - name: get_hot_news
        description: "获取指定平台的实时热点话题"
        input_schema:
          type: object
          properties:
            - field: sources
              type: array
              description: "平台ID列表：1-知乎热榜，2-36氪热榜，3-百度热点，4-B站热榜，5-微博热搜，6-抖音热点，7-虎扑热榜，8-豆瓣热榜，9-IT新闻"
        required:
          - sources
  - mcp_square_id: "weather"
    name: "MCP Weather Server"
    category: "edu"
    desc: "提供基于AccuWeather API的每小时天气预报服务"
    from: "adhikasp"
    avatar_path: "weather/logo.png"
    detail_path: "weather/detail.md"
    feature: "关键特性包括当前天气条件查询、12小时逐小时预报、温度湿度数据、降水概率和类型、天气描述和观测时间。"
    manual: "通过uvx安装运行，需要配置AccuWeather API密钥。支持按城市查询天气，提供详细的天气数据和预报信息。"
    scenario: "MCP Weather Server适用于天气查询、出行规划、农业气象、户外活动安排和天气监测等场景。"
    summary: "MCP Weather Server是一个模型上下文协议服务器，使用AccuWeather API提供准确的天气数据和预报信息。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    tools:
      - name: get_weather_forecast
        description: "获取指定地点的当前天气条件和12小时逐小时预报"
        input_schema:
          type: object
          properties:
            - field: location
              type: string
              description: "查询天气的城市或地点名称"
          required:
            - location
  - mcp_square_id: "futustock"
    name: "富途股票MCP服务器"
    category: "edu"
    desc: "基于模型上下文协议的富途开放API功能访问服务器，提供股票市场数据、实时订阅、期权信息、账户查询等全面的金融服务"
    from: "富途开放API"
    avatar_path: "futustock/logo.png"
    detail_path: "futustock/detail.md"
    feature: "完全兼容MCP 2.0协议标准、全面覆盖富途API功能、支持实时数据订阅、市场数据访问、衍生品信息查询、账户查询功能、基于资源的数据访问、交互式分析提示"
    manual: "需要安装OpenD网关程序，配置环境变量，通过Python MCP客户端连接服务器，支持香港、美国、A股三大市场"
    scenario: "股票实时交易、市场数据分析、期权策略分析、账户管理、风险控制、量化交易、投资研究、金融数据订阅"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "富途股票MCP服务器是一个功能完整的金融数据服务平台，通过MCP协议提供富途API的全部功能，支持实时数据订阅、市场分析、期权交易、账户管理等专业金融服务"
    tools:
      - name: get_stock_quote
        description: "获取股票报价数据，包括价格、成交量、成交额等基本报价信息"
        input_schema:
          type: object
          properties:
            - field: symbols
              type: array
              description: "股票代码列表，如['HK.00700', 'US.AAPL', 'SH.600519']"
          required:
            - symbols
      - name: get_market_snapshot
        description: "获取市场快照数据，包括价格、成交量、买卖盘价格等完整市场数据"
        input_schema:
          type: object
          properties:
            - field: symbols
              type: array
              description: "股票代码列表，如['HK.00700', 'US.AAPL', 'SH.600519']"
          required:
            - symbols
      - name: get_cur_kline
        description: "获取当前K线数据，支持多种时间周期"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'HK.00700'"
            - field: ktype
              type: string
              description: "K线类型：K_1M, K_5M, K_15M, K_30M, K_60M, K_DAY, K_WEEK, K_MON"
            - field: count
              type: integer
              description: "返回K线数量，默认100"
          required:
            - symbol
            - ktype
            - count
      - name: get_history_kline
        description: "获取历史K线数据，支持指定时间范围"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'HK.00700'"
            - field: ktype
              type: string
              description: "K线类型：K_1M, K_5M, K_15M, K_30M, K_60M, K_DAY, K_WEEK, K_MON"
            - field: start
              type: string
              description: "开始日期，格式YYYY-MM-DD"
            - field: end
              type: string
              description: "结束日期，格式YYYY-MM-DD"
          required:
            - symbol
            - ktype
            - start
            - end
      - name: get_rt_data
        description: "获取实时交易数据，包括实时价格和成交信息"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'HK.00700'"
          required:
            - symbol
      - name: get_ticker
        description: "获取逐笔成交数据，显示每笔交易的详细信息"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'HK.00700'"
          required:
            - symbol
      - name: get_order_book
        description: "获取买卖盘数据，显示买卖队列信息"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'HK.00700'"
          required:
            - symbol
      - name: get_broker_queue
        description: "获取经纪队列数据，显示经纪商买卖信息"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'HK.00700'"
          required:
            - symbol
      - name: subscribe
        description: "订阅实时数据，支持多种数据类型和股票"
        input_schema:
          type: object
          properties:
            - field: symbols
              type: array
              description: "股票代码列表，如['HK.00700', 'US.AAPL']"
            - field: sub_types
              type: array
              description: "订阅类型：QUOTE, ORDER_BOOK, TICKER, RT_DATA, BROKER, K_1M等"
          required:
            - symbols
            - sub_types
      - name: unsubscribe
        description: "取消订阅实时数据"
        input_schema:
          type: object
          properties:
            - field: symbols
              type: array
              description: "股票代码列表，如['HK.00700', 'US.AAPL']"
            - field: sub_types
              type: array
              description: "取消订阅类型：QUOTE, ORDER_BOOK, TICKER等"
          required:
            - symbols
            - sub_types
      - name: get_option_chain
        description: "获取期权链数据，显示期权合约信息"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'HK.00700'"
            - field: start
              type: string
              description: "开始日期，格式YYYY-MM-DD"
            - field: end
              type: string
              description: "结束日期，格式YYYY-MM-DD"
          required:
            - symbol
            - start
            - end
      - name: get_option_expiration_date
        description: "获取期权到期日列表"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'HK.00700'"
          required:
            - symbol
      - name: get_option_condor
        description: "获取期权康多策略数据"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'HK.00700'"
            - field: expiry
              type: string
              description: "到期日，格式YYYY-MM-DD"
            - field: strike_price
              type: number
              description: "行权价格"
          required:
            - symbol
            - expiry
            - strike_price
      - name: get_option_butterfly
        description: "获取期权蝶式策略数据"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'HK.00700'"
            - field: expiry
              type: string
              description: "到期日，格式YYYY-MM-DD"
            - field: strike_price
              type: number
              description: "行权价格"
          required:
            - symbol
            - expiry
            - strike_price
      - name: get_account_list
        description: "获取账户列表信息"
        input_schema:
          type: object
          properties:
            - field: random_string
              type: string
              description: "随机字符串参数"
          required:
            - random_string
      - name: get_funds
        description: "获取账户资金信息，包括可用资金、总资产等"
        input_schema:
          type: object
          properties:
            - field: random_string
              type: string
              description: "随机字符串参数"
          required:
            - random_string
      - name: get_positions
        description: "获取持仓信息，显示当前持有的股票"
        input_schema:
          type: object
          properties:
            - field: random_string
              type: string
              description: "随机字符串参数"
          required:
            - random_string
      - name: get_max_power
        description: "获取最大交易能力，显示可买入金额"
        input_schema:
          type: object
          properties:
            - field: random_string
              type: string
              description: "随机字符串参数"
          required:
            - random_string
      - name: get_margin_ratio
        description: "获取股票保证金比率"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'HK.00700'"
          required:
            - symbol
      - name: get_market_state
        description: "获取市场状态，显示开盘、收盘等信息"
        input_schema:
          type: object
          properties:
            - field: market
              type: string
              description: "市场代码：HK, US, SH, SZ"
          required:
            - market
      - name: get_security_info
        description: "获取证券信息，包括公司基本信息"
        input_schema:
          type: object
          properties:
            - field: market
              type: string
              description: "市场代码，如'HK'"
            - field: code
              type: string
              description: "证券代码，如'00700'"
          required:
            - market
            - code
      - name: get_security_list
        description: "获取市场证券列表"
        input_schema:
          type: object
          properties:
            - field: market
              type: string
              description: "市场代码，如'HK'"
          required:
            - market
      - name: get_stock_filter
        description: "基于条件筛选股票，支持多种筛选条件"
        input_schema:
          type: object
          properties:
            - field: market
              type: string
              description: "市场代码，如'HK.Motherboard'"
            - field: base_filters
              type: array
              description: "筛选条件数组，包含字段名、最小值、最大值、排序方向"
            - field: page
              type: integer
              description: "页码，默认1"
            - field: page_size
              type: integer
              description: "每页数量，默认50"
          required:
            - market
            - base_filters
      - name: get_current_time
        description: "获取服务器当前时间，返回时间戳和格式化时间"
        input_schema:
          type: object
          properties:
            - field: random_string
              type: string
              description: "随机字符串参数"
          required:
            - random_string
  - mcp_square_id: "financialanalysisagent"
    name: "金融分析智能体系统"
    category: "edu"
    desc: "基于LangGraph的A股股票多维度智能分析系统，提供基本面、技术面、估值分析和投资建议"
    from: "开源项目 - GitHub"
    avatar_path: "financialanalysisagent/logo.png"
    detail_path: "financialanalysisagent/detail.md"
    feature: "多Agent协作、MCP工具集成、智能工具选择、数据流传递、投资建议生成、Markdown报告、自然语言查询、交互式输入"
    manual: "1. 配置环境变量和MCP服务器路径 2. 运行 poetry run python -m src.main --command \"分析股票名称\" 或启动交互模式"
    scenario: "A股股票投资分析、金融数据分析、投资决策支持、教育研究、风险评估"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "基于LangGraph框架的智能投资分析系统，通过四个专业Agent(技术分析、价值分析、基本面分析、总结)协同工作，提供全方位的A股投资分析报告"
    tools:
      - name: comprehensive_stock_analysis
        description: "对指定股票进行技术面、基本面、估值三维度综合分析，生成详细的投资建议报告"
        input_schema:
          type: object
          properties:
            - field: stock_name
              type: string
              description: "股票名称或代码，如'贵州茅台'、'比亚迪'或'000858'"
            - field: analysis_type
              type: string
              description: "分析类型，默认为'comprehensive'(综合分析)，可选'technical'(技术分析)、'fundamental'(基本面分析)、'valuation'(估值分析)"
            - field: output_format
              type: string
              description: "输出格式，默认为'markdown'，可选'json'或'text'"
          required:
            - stock_name
      - name: technical_analysis
        description: "专门进行股票技术面分析，包括价格走势、交易量、技术指标等"
        input_schema:
          type: object
          properties:
            - field: stock_name
              type: string
              description: "股票名称或代码"
            - field: period
              type: string
              description: "分析时间周期，如'1m'、'5m'、'1d'、'1w'等，默认为'1d'"
            - field: indicators
              type: string
              description: "技术指标列表，如'MA,RSI,MACD,KDJ'，用逗号分隔"
          required:
            - stock_name
      - name: fundamental_analysis
        description: "对股票进行基本面分析，包括财务状况、经营情况、行业地位等"
        input_schema:
          type: object
          properties:
            - field: stock_name
              type: string
              description: "股票名称或代码"
            - field: financial_period
              type: string
              description: "财务数据期间，如'2024Q3'、'2023年报'等"
            - field: include_industry_comparison
              type: string
              description: "是否包含行业对比分析，默认为'true'"
          required:
            - stock_name
      - name: valuation_analysis
        description: "对股票进行估值分析，包括市盈率、市净率、PEG等估值指标"
        input_schema:
          type: object
          properties:
            - field: stock_name
              type: string
              description: "股票名称或代码"
            - field: valuation_method
              type: string
              description: "估值方法，如'PE'、'PB'、'PEG'、'DCF'等，默认为'comprehensive'"
            - field: comparison_method
              type: string
              description: "对比方式，如'industry'(行业对比)、'history'(历史对比)、'market'(市场对比)"
          required:
            - stock_name
      - name: investment_recommendation
        description: "基于综合分析结果生成投资建议和风险评估"
        input_schema:
          type: object
          properties:
            - field: stock_name
              type: string
              description: "股票名称或代码"
            - field: risk_tolerance
              type: string
              description: "风险承受能力，如'conservative'(保守型)、'moderate'(稳健型)、'aggressive'(积极型)"
            - field: investment_horizon
              type: string
              description: "投资时间期限，如'short-term'(短期)、'medium-term'(中期)、'long-term'(长期)"
            - field: generate_report
              type: string
              description: "是否生成完整的markdown报告，默认为'true'"
        required:
          - stock_name
  - mcp_square_id: "unionpay"
    name: "银联MCP支付服务器"
    category: "edu"
    desc: "银联基于MCP协议为AI智能体提供的支付工具服务器，支持签约支付、二维码支付、查询等全方位支付服务"
    from: "中国银联"
    avatar_path: "unionpay/logo.png"
    detail_path: "unionpay/detail.md"
    feature: "签约支付、二维码支付、支付查询、退款退货、解约服务、风险管控、多种接入方式、安全加密、实时通知"
    manual: "需要先注册成为银联网络商户并获取商户私钥，配置环境变量后通过npx -y unionpay-mcp-server命令启动，支持Cursor、Cline等MCP客户端"
    scenario: "在线支付、移动支付、电商平台、酒店预订、行程规划、智能体应用、自动化交易、风险控制"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "银联MCP支付服务器是一个功能完整的支付解决方案，通过MCP协议为AI智能体提供安全便捷的支付能力，支持签约支付、二维码支付等多种支付方式，适用于各类智能体应用场景"
    tools:
      - name: create-contract-order-unionpay-payment
        description: "创建一笔签约支付订单，并返回授权签约链接"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8至40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: certifTp
              type: string
              description: "证件类型，格式：2位数字"
            - field: certifId
              type: string
              description: "证件号码，格式：1至20位字母数字"
            - field: customerNm
              type: string
              description: "用户姓名，格式：1至120字母数字"
            - field: phoneNo
              type: string
              description: "手机号，格式：1至20位手机号"
            - field: riskRateInfo
              type: string
              description: "风险信息域的JSON字符串格式"
            - field: merCatCode
              type: string
              description: "商户类别，收单接入时必填"
            - field: merName
              type: string
              description: "商户名称，收单接入时必填"
            - field: merAbbr
              type: string
              description: "商户简称，收单接入时必填"
            - field: subMerId
              type: string
              description: "二级商户代码，平台商户接入时必填"
            - field: subMerName
              type: string
              description: "二级商户名称，平台商户接入时必填"
            - field: subMerAbbr
              type: string
              description: "二级商户简称，平台商户接入时必填"
          required:
            - orderId
            - txnTime
            - certifTp
            - certifId
            - customerNm
            - phoneNo
            - riskRateInfo
      - name: create-contract-unionpay-payment
        description: "发起签约交易，并返回签约信息，该交易是签约下单的后续交易"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8至40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: origOrderId
              type: string
              description: "签约下单交易请求的订单号orderId"
            - field: origTxnTime
              type: string
              description: "签约下单交易应答的txnTime"
            - field: tokenType
              type: string
              description: "token类型，格式：2位数字"
          required:
            - orderId
            - txnTime
            - origOrderId
            - origTxnTime
            - tokenType
      - name: contract-pay-sms
        description: "创建一笔支付短信，当需要在支付前做短信验证时调用此接口"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8至40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: token
              type: string
              description: "签约交易返回的token"
            - field: txnAmt
              type: string
              description: "交易金额"
            - field: currencyCode
              type: string
              description: "交易币种，默认156人民币"
          required:
            - orderId
            - txnTime
            - token
            - txnAmt
      - name: pay-contract-order-unionpay-payment
        description: "创建一笔签约支付订单，并返回用户支付结果"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8至40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: certifTp
              type: string
              description: "证件类型，格式：2位数字"
            - field: certifId
              type: string
              description: "证件号码，格式：1至20位字母数字"
            - field: customerNm
              type: string
              description: "用户姓名，格式：1至120字母数字"
            - field: phoneNo
              type: string
              description: "手机号，格式：1至20位手机号"
            - field: riskRateInfo
              type: string
              description: "风险信息域的JSON字符串格式"
            - field: currencyCode
              type: string
              description: "交易币种，默认156人民币"
            - field: token
              type: string
              description: "签约交易返回的token"
          required:
            - orderId
            - txnTime
            - certifTp
            - certifId
            - customerNm
            - phoneNo
            - riskRateInfo
            - token
      - name: refund-contract-order-unionpay-payment
        description: "创建一笔退货订单，并返回退货结果"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8至40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: origOrderId
              type: string
              description: "支付交易请求的订单号orderId"
            - field: origTxnTime
              type: string
              description: "交易应答的txnTime"
            - field: txnAmt
              type: string
              description: "需要退货的金额"
          required:
            - orderId
            - txnTime
            - origOrderId
            - origTxnTime
            - txnAmt
      - name: query-unionpay-payment
        description: "发起查询交易，支持签约交易查询、支付交易查询、退款等查询类交易"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8至40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
          required:
            - orderId
            - txnTime
      - name: cancel-contract-order-unionpay-payment
        description: "创建一笔解约订单，并返回解约结果，该交易是签约的反向交易"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8至40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: token
              type: string
              description: "签约交易返回的token"
          required:
            - orderId
            - txnTime
            - token
      - name: apply-unionpay-qrCode
        description: "申请消费二维码，返回qrCode"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8~40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: payTimeout
              type: string
              description: "二维码有效时间"
            - field: txnAmt
              type: string
              description: "交易金额，单位元"
          required:
            - orderId
            - txnTime
            - payTimeout
            - txnAmt
      - name: refund-unionpay-qrCode
        description: "对之前二维码交易进行退货，仅30天之内交易可退货"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "交易订单号，格式：8~40位字母数字"
            - field: txnTime
              type: string
              description: "交易时间，格式：yyyyMMddHHmmss"
            - field: origTxnTime
              type: string
              description: "原始交易的交易时间，格式：YYYYMMDDhhmmss"
            - field: origOrderId
              type: string
              description: "原始交易的订单号，格式：8~40位字母数字"
            - field: origQryId
              type: string
              description: "原始交易的查询ID，格式：查询订单请求返回的若干位数字"
            - field: txnAmt
              type: string
              description: "待退货金额，单位元"
          required:
            - orderId
            - txnTime
            - origTxnTime
            - origOrderId
            - origQryId
            - txnAmt
      - name: query-unionpay-QrCode-trade
        description: "发起二维码类查询交易，支持申码支付交易查询、退款等查询类交易"
        input_schema:
          type: object
          properties:
            - field: orderId
              type: string
              description: "被查询交易订单号，当使用原交易orderId和txnTime查询时必填"
            - field: txnTime
              type: string
              description: "被查询交易交易时间，当使用原交易orderId和txnTime查询时必填"
            - field: queryId
              type: string
              description: "被查询交易流水号，当使用原交易流水号查询时必填"
          required:
  - mcp_square_id: "fxbaogao"
    name: "发现报告（MCP Tool）"
    category: "edu"
    desc: "基于MCP协议的研究报告搜索与内容提取工具，提供对发现报告网站研究报告的搜索与内容提取能力，适用于金融、产业研究、投资分析等场景"
    from: "MCP协议工具"
    avatar_path: "fxbaogao/logo.png"
    detail_path: "fxbaogao/detail.md"
    feature: "关键词搜索、作者搜索、机构搜索、时间范围搜索、内容提取、支持中英文检索、多条件组合搜索、相对时间查询"
    manual: "通过MCP协议集成使用，支持通过关键词、作者、机构名称、时间范围等条件检索研究报告列表，并可根据报告ID获取详细内容"
    scenario: "金融研究、产业研究、投资分析、市场调研、行业报告检索、投资决策支持、学术研究"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "发现报告MCP工具是一个专业的研究报告搜索与内容提取平台，通过MCP协议提供灵活的搜索功能和完整的报告内容获取服务，适用于各类金融和产业研究场景"
    tools:
      - name: search_reports
        description: "通过关键词、作者、机构名称、时间范围等条件检索研究报告列表，支持多种搜索条件组合"
        input_schema:
          type: object
          properties:
            - field: keywords
              type: string
              description: "搜索关键词，支持中英文，如'人工智能'、'新能源'等"
            - field: authors
              type: array
              description: "作者姓名列表，如['张三', '李四']"
            - field: org_names
              type: array
              description: "机构名称列表，如['中信证券', '华泰证券']"
            - field: start_time
              type: integer
              description: "起始时间，毫秒级时间戳，如1640995200000表示2022-01-01 00:00:00"
            - field: end_time
              type: string
              description: "结束时间，支持毫秒时间戳或相对时间字符串：'last3day'、'last7day'、'last1mon'、'last3mon'、'last1year'"
            - field: page_size
              type: integer
              description: "返回结果数量，默认10，最大100"
          required:
      - name: get_report_content
        description: "根据报告ID获取研报的详细内容与总结信息"
        input_schema:
          type: object
          properties:
            - field: doc_id
              type: integer
              description: "研报文档ID，来自search_reports返回结果中的docId字段"
          required:
            - doc_id
  - mcp_square_id: "yahoofinance"
    name: "Yahoo Finance MCP 服务器"
    category: "edu"
    desc: "基于模型上下文协议的服务器，提供来自Yahoo Finance的全面金融数据，包括股票信息、财务报表、期权数据和市场新闻"
    from: "GitHub开源项目"
    avatar_path: "yahoofinance/logo.png"
    detail_path: "yahoofinance/detail.md"
    feature: "获取股票详细信息、历史价格数据、公司信息、财务报表、期权数据、市场新闻、分析师推荐、股东信息等全面的金融数据服务"
    manual: "通过MCP协议集成到Claude Desktop或其他支持MCP的应用中，使用uv命令运行服务器，支持Python 3.11+环境"
    scenario: "股票分析、价格分析、财务健康评估、市场研究、投资研究、新闻分析、机构活动跟踪、期权分析、分析师覆盖研究"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Yahoo Finance MCP服务器是一个功能强大的金融数据获取工具，通过模型上下文协议提供股票、期权、财务报表等多维度的金融数据服务，适用于各类金融分析和投资研究场景"
    tools:
      - name: get_historical_stock_prices
        description: "获取股票的历史OHLCV数据，可自定义时间段和间隔"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'AAPL'、'MSFT'等"
            - field: period
              type: string
              description: "时间周期，如'1d'、'5d'、'1mo'、'3mo'、'6mo'、'1y'、'2y'、'5y'、'10y'、'ytd'、'max'"
            - field: interval
              type: string
              description: "数据间隔，如'1m'、'2m'、'5m'、'15m'、'30m'、'60m'、'90m'、'1h'、'1d'、'5d'、'1wk'、'1mo'、'3mo'"
            - field: start_date
              type: string
              description: "开始日期，格式为YYYY-MM-DD"
            - field: end_date
              type: string
              description: "结束日期，格式为YYYY-MM-DD"
          required:
            - symbol
      - name: get_stock_info
        description: "获取全面的股票数据，包括价格、指标和公司详情"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'AAPL'、'MSFT'等"
          required:
            - symbol
      - name: get_yahoo_finance_news
        description: "获取股票的最新新闻文章"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'AAPL'、'MSFT'等"
            - field: count
              type: integer
              description: "返回新闻文章数量，默认为10"
          required:
            - symbol
      - name: get_stock_actions
        description: "获取股票分红和拆股历史"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'AAPL'、'MSFT'等"
            - field: period
              type: string
              description: "时间周期，默认为'max'"
          required:
            - symbol
      - name: get_financial_statement
        description: "获取利润表、资产负债表或现金流量表（年度/季度）"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'AAPL'、'MSFT'等"
            - field: statement_type
              type: string
              description: "报表类型：'income'(利润表)、'balance'(资产负债表)、'cash'(现金流量表)"
            - field: period
              type: string
              description: "报表周期：'annual'(年度)、'quarterly'(季度)，默认为'annual'"
          required:
            - symbol
            - statement_type
      - name: get_holder_info
        description: "获取主要股东、机构股东、共同基金或内幕交易信息"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'AAPL'、'MSFT'等"
            - field: holder_type
              type: string
              description: "股东类型：'major'(主要股东)、'institutional'(机构股东)、'mutualfund'(共同基金)、'insider'(内幕交易)"
          required:
            - symbol
            - holder_type
      - name: get_option_expiration_dates
        description: "获取可用的期权到期日期"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'AAPL'、'SPY'等"
          required:
            - symbol
      - name: get_option_chain
        description: "获取特定到期日期和类型（看涨/看跌）的期权链"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'AAPL'、'SPY'等"
            - field: expiration_date
              type: string
              description: "到期日期，格式为YYYY-MM-DD"
            - field: option_type
              type: string
              description: "期权类型：'calls'(看涨期权)、'puts'(看跌期权)、'both'(两种都要)"
          required:
            - symbol
            - expiration_date
      - name: get_recommendations
        description: "获取分析师推荐或评级变更历史"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，如'AAPL'、'MSFT'等"
            - field: period
              type: string
              description: "时间周期，如'1mo'、'3mo'、'6mo'，默认为'3mo'"
          required:
            - symbol
  - mcp_square_id: "tushare"
    name: "Tushare MCP Server"
    category: "edu"
    desc: "基于模型上下文协议的智能股票数据助手，提供A股市场数据查询、财务报表分析和智能股票搜索功能"
    from: "Tushare Pro数据源"
    avatar_path: "tushare/logo.png"
    detail_path: "tushare/detail.md"
    feature: "股票基础信息查询、智能股票搜索、财务报表分析、安全Token管理、模糊关键词搜索、行业关键词搜索、历史数据对比分析"
    manual: "通过Python运行server.py启动服务，需要Tushare Pro账号和API Token，支持与Claude等AI助手自然对话，首次使用需配置Token"
    scenario: "投资研究、财务分析、行业分析、报表查询、数学教育、股票筛选、市场分析、投资决策支持"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Tushare MCP Server是一个功能强大的股票数据分析平台，通过MCP协议连接Tushare Pro数据源，为AI助手提供准确的A股数据查询、财务分析和智能搜索能力，适用于投资研究和金融分析场景"
    tools:
      - name: get_stock_basic_info
        description: "获取股票基础信息，支持通过股票代码或名称查询"
        input_schema:
          type: object
          properties:
            - field: ts_code
              type: string
              description: "股票代码，如'000001.SZ'，与name参数二选一"
            - field: name
              type: string
              description: "股票名称，如'平安银行'，支持模糊查询，与ts_code参数二选一"
          required:
      - name: search_stocks
        description: "智能股票搜索，支持模糊关键词搜索和行业关键词搜索"
        input_schema:
          type: object
          properties:
            - field: keyword
              type: string
              description: "搜索关键词，支持股票名称、代码或行业关键词，如'新能源'、'科技'、'医药'"
          required:
            - keyword
      - name: get_income_statement
        description: "查询上市公司利润表数据，支持多种报表类型和时间范围"
        input_schema:
          type: object
          properties:
            - field: ts_code
              type: string
              description: "股票代码，如'000001.SZ'"
            - field: start_date
              type: string
              description: "开始日期，格式YYYYMMDD，如'20230101'"
            - field: end_date
              type: string
              description: "结束日期，格式YYYYMMDD，如'20231231'"
            - field: report_type
              type: string
              description: "报表类型：'1'年报、'2'中报、'3'一季报、'4'三季报，默认'1'"
          required:
            - ts_code
      - name: setup_tushare_token
        description: "配置Tushare API Token，用于首次设置或更新Token"
        input_schema:
          type: object
          properties:
            - field: token
              type: string
              description: "Tushare Pro API Token，从https://tushare.pro/user/token获取"
          required:
            - token
      - name: check_token_status
        description: "检查当前Token状态和有效性"
        input_schema:
          type: object
          properties:
            - field: random_string
              type: string
              description: "随机字符串参数，用于触发检查"
          required:
  - mcp_square_id: "mcpcalctools"
    name: "MCP计算工具"
    category: "edu"
    desc: "基于模型上下文协议的数学和金融计算工具服务器，为AI代码助手提供先进的数学计算和金融分析能力"
    from: "MCP开源项目"
    avatar_path: "mcpcalctools/logo.png"
    detail_path: "mcpcalctools/detail.md"
    feature: "符号微积分、数值方法、数学变换、金融计算、期权定价、复合利息计算、积分估算、微分求解、拉普拉斯变换、傅里叶变换"
    manual: "通过npm安装，使用node.js运行，可与Cline、Roo Code等AI代码助手集成，支持复杂的数学表达式和金融模型计算"
    scenario: "数学教育、金融分析、工程计算、科学研究、期权定价、投资分析、数值计算、积分求解、微分方程求解"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "MCP计算工具是一个功能强大的数学和金融计算平台，通过MCP协议为AI助手提供符号计算、数值分析、金融建模等专业计算能力，适用于教育、研究和金融分析场景"
    tools:
      - name: derivative
        description: "计算表达式的符号导数"
        input_schema:
          type: object
          properties:
            - field: expression
              type: string
              description: "数学表达式，如'x^2*sin(x)'"
            - field: variable
              type: string
              description: "求导变量，默认为'x'"
          required:
            - expression
      - name: integral
        description: "计算表达式的符号积分"
        input_schema:
          type: object
          properties:
            - field: expression
              type: string
              description: "数学表达式，如'x^2'"
            - field: variable
              type: string
              description: "积分变量，默认为'x'"
            - field: lower_limit
              type: string
              description: "下限，用于定积分"
            - field: upper_limit
              type: string
              description: "上限，用于定积分"
          required:
            - expression
      - name: limit
        description: "计算变量趋向指定值时的极限"
        input_schema:
          type: object
          properties:
            - field: expression
              type: string
              description: "数学表达式"
            - field: variable
              type: string
              description: "变量名，默认为'x'"
            - field: approach_value
              type: string
              description: "趋向值，如'0'、'infinity'等"
          required:
            - expression
            - approach_value
      - name: solve
        description: "求解方程"
        input_schema:
          type: object
          properties:
            - field: equation
              type: string
              description: "方程表达式，如'x^2 - 4 = 0'"
            - field: variable
              type: string
              description: "求解变量，默认为'x'"
          required:
            - equation
      - name: riemann_sum
        description: "使用黎曼和计算定积分近似值"
        input_schema:
          type: object
          properties:
            - field: expression
              type: string
              description: "被积函数表达式"
            - field: lower_limit
              type: number
              description: "积分下限"
            - field: upper_limit
              type: number
              description: "积分上限"
            - field: n_intervals
              type: integer
              description: "分割区间数，默认100"
            - field: method
              type: string
              description: "计算方法：'left'、'right'、'midpoint'、'trapezoid'，默认'midpoint'"
          required:
            - expression
            - lower_limit
            - upper_limit
      - name: darboux_sum
        description: "计算上下达布和用于积分近似"
        input_schema:
          type: object
          properties:
            - field: expression
              type: string
              description: "被积函数表达式"
            - field: lower_limit
              type: number
              description: "积分下限"
            - field: upper_limit
              type: number
              description: "积分上限"
            - field: n_intervals
              type: integer
              description: "分割区间数，默认100"
          required:
            - expression
            - lower_limit
            - upper_limit
      - name: area
        description: "计算曲线下的面积"
        input_schema:
          type: object
          properties:
            - field: expression
              type: string
              description: "函数表达式"
            - field: lower_limit
              type: number
              description: "下限"
            - field: upper_limit
              type: number
              description: "上限"
          required:
            - expression
            - lower_limit
            - upper_limit
      - name: volume
        description: "计算绕x轴旋转的体积"
        input_schema:
          type: object
          properties:
            - field: expression
              type: string
              description: "函数表达式"
            - field: lower_limit
              type: number
              description: "下限"
            - field: upper_limit
              type: number
              description: "上限"
          required:
            - expression
            - lower_limit
            - upper_limit
      - name: laplace_transform
        description: "计算函数的拉普拉斯变换"
        input_schema:
          type: object
          properties:
            - field: expression
              type: string
              description: "时域函数表达式"
            - field: variable
              type: string
              description: "时间变量，默认为't'"
          required:
            - expression
      - name: fourier_transform
        description: "计算函数的傅里叶变换"
        input_schema:
          type: object
          properties:
            - field: expression
              type: string
              description: "时域函数表达式"
            - field: variable
              type: string
              description: "时间变量，默认为't'"
          required:
            - expression
      - name: z_transform
        description: "计算离散时间函数的Z变换"
        input_schema:
          type: object
          properties:
            - field: sequence
              type: array
              description: "离散序列数组"
            - field: variable
              type: string
              description: "变换变量，默认为'z'"
          required:
            - sequence
      - name: compound_interest
        description: "计算复合利息"
        input_schema:
          type: object
          properties:
            - field: principal
              type: number
              description: "本金"
            - field: rate
              type: number
              description: "年利率（小数形式，如0.05表示5%）"
            - field: time
              type: number
              description: "时间（年）"
            - field: compound_frequency
              type: integer
              description: "每年复利次数，默认1"
          required:
            - principal
            - rate
            - time
      - name: present_value
        description: "计算未来现金流的现值"
        input_schema:
          type: object
          properties:
            - field: future_value
              type: number
              description: "未来价值"
            - field: rate
              type: number
              description: "贴现率（小数形式）"
            - field: periods
              type: number
              description: "期数"
          required:
            - future_value
            - rate
            - periods
      - name: npv
        description: "计算现金流序列的净现值"
        input_schema:
          type: object
          properties:
            - field: cash_flows
              type: array
              description: "现金流数组，第一个为初始投资（负数）"
            - field: discount_rate
              type: number
              description: "贴现率（小数形式）"
          required:
            - cash_flows
            - discount_rate
      - name: black_scholes
        description: "使用Black-Scholes模型计算期权价格"
        input_schema:
          type: object
          properties:
            - field: stock_price
              type: number
              description: "当前股价"
            - field: strike_price
              type: number
              description: "行权价"
            - field: time_to_expiry
              type: number
              description: "到期时间（年）"
            - field: risk_free_rate
              type: number
              description: "无风险利率（小数形式）"
            - field: volatility
              type: number
              description: "波动率（小数形式）"
            - field: option_type
              type: string
              description: "期权类型：'call'（看涨）或'put'（看跌）"
          required:
            - stock_price
            - strike_price
            - time_to_expiry
            - risk_free_rate
            - volatility
            - option_type
      - name: option_greeks
        description: "计算期权的希腊字母（风险指标）"
        input_schema:
          type: object
          properties:
            - field: stock_price
              type: number
              description: "当前股价"
            - field: strike_price
              type: number
              description: "行权价"
            - field: time_to_expiry
              type: number
              description: "到期时间（年）"
            - field: risk_free_rate
              type: number
              description: "无风险利率（小数形式）"
            - field: volatility
              type: number
              description: "波动率（小数形式）"
            - field: option_type
              type: string
              description: "期权类型：'call'（看涨）或'put'（看跌）"
          required:
            - stock_price
            - strike_price
            - time_to_expiry
            - risk_free_rate
            - volatility
            - option_type
      - name: logarithm
        description: "计算任意底数的对数"
        input_schema:
          type: object
          properties:
            - field: value
              type: number
              description: "真数"
            - field: base
              type: number
              description: "底数，默认为自然对数e"
          required:
            - value
      - name: exponential
        description: "计算指数函数e^x"
        input_schema:
          type: object
          properties:
            - field: exponent
              type: number
              description: "指数"
          required:
            - exponent
  - mcp_square_id: "hive"
    name: "Hive金融社交服务"
    category: edu"
    desc: "一个通过模型上下文协议使 AI 助手能够与 Hive 区块链交互的 MCP 服务器。"
    from: "https://www.modelscope.cn/"
    avatar_path: "hive/logo.png"
    detail_path: "hive/detail.md"
    feature: "该服务器为 AI 助手（如 Claude）和 Hive 区块链之间提供了桥梁，允许 AI 模型执行以下操作：
    获取账户信息和历史记录
    检索博客文章和讨论
    按标签或用户获取文章
    对内容进行投票并创建文章（在适当认证后）
    向其他账户发送 HIVE 或 HBD 代币
    使用 Hive 密钥签名和验证消息
    发送和接收加密消息"
    manual: "使用 MCP Inspector 进行调试"
    scenario: "用户通过AI助手实时查询Hive账户资产、管理博客内容、执行代币转账及安全加密通信。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "实现AI助手与Hive区块链的安全交互代理，提供账户管理、内容操作和金融交易能力。"
    tools:
      - name: get_account_info
        description: "获取有关 Hive 区块链账户的详细信息"
        input_schema:
          type: object
          properties:
            - field: username
              type: string
              description: "要查询信息的 Hive 用户名"
          required:
      - name: get_post_content
        description: "通过作者和永久链接检索特定的 Hive 博客文章。"
        input_schema:
          type: object
          properties:
            - field: author
              type: string
              description: "文章作者"
            - field: permlink
              type: string
              description: "文章的永久链接"
          required:
      - name: get_posts_by_tag
        description: "根据特定标签筛选并按类别排序来检索 Hive 文章。"
        input_schema:
          type: object
          properties:
            - field: category
              type: string
              description: "排序类别（如热门、最新、创建时间等）"
            - field: tag
              type: string
              description: "用于筛选文章的标签"
            - field: limit
              type: int
              description: "返回的文章数量"
          required:
  - mcp_square_id: "mcptrader"
    name: "MCP Trader Server"
    category: "edu"
    desc: "提供股票和加密货币技术分析功能的模型上下文协议服务器"
    from: "modelcontextprotocol"
    avatar_path: "mcptrader/logo.png"
    detail_path: "mcptrader/detail.md"
    feature: "关键特性包括技术分析工具（移动平均线、RSI、MACD等）、相对强度分析、成交量分析、图表模式识别、仓位大小计算和止损建议。支持股票和加密货币数据分析，提供FastMCP资源直接访问市场数据。"
    manual: "要使用MCP Trader Server，需要配置Tiingo API密钥。通过Claude Desktop App配置mcpServers，或使用FastMCP模式获得资源访问功能。支持Docker部署和开发调试模式。"
    scenario: "MCP Trader Server适用于量化分析、技术分析、投资决策支持、风险管理和交易策略开发。可用于个人投资助手、量化交易系统和金融分析平台。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "MCP Trader Server是一个专业的金融市场分析工具，为LLM提供全面的股票和加密货币技术分析能力，支持多种数据源和分析指标。"
    tools:
      - name: analyze-stock
        description: "对指定股票代码进行技术分析，包括移动平均线趋势、动量指标、波动率指标和成交量分析"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，例如 'NVDA', 'AAPL', 'TSLA'"
          required:
            - symbol
      - name: analyze-crypto
        description: "对加密货币资产进行技术分析，支持多个数据提供商和自定义时间范围"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "加密货币代码，例如 'BTC', 'ETH', 'BTCUSDT'"
            - field: provider
              type: string
              description: "数据提供商，可选 'tiingo' 或 'binance'，默认为 'tiingo'"
            - field: lookback_days
              type: integer
              description: "回看天数，默认365天"
            - field: quote_currency
              type: string
              description: "报价货币，Tiingo默认'usd'，Binance默认'USDT'"
          required:
            - symbol
      - name: relative-strength
        description: "计算股票相对于基准指数的相对强度，支持多个时间框架分析"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，例如 'AAPL'"
            - field: benchmark
              type: string
              description: "基准指数，默认为 'SPY'"
          required:
            - symbol
      - name: volume-profile
        description: "分析价格区间的成交量分布，识别关键支撑阻力位"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，例如 'MSFT'"
            - field: lookback_days
              type: integer
              description: "回看天数，默认60天"
          required:
            - symbol
      - name: detect-patterns
        description: "识别价格数据中的图表模式，提供置信度和价格目标"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，例如 'AMZN'"
          required:
            - symbol
      - name: position-size
        description: "基于风险参数计算最优仓位大小和R倍数盈利目标"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，例如 'TSLA'"
            - field: stop_price
              type: number
              description: "止损价格"
            - field: risk_amount
              type: number
              description: "风险金额"
            - field: account_size
              type: number
              description: "账户总金额"
            - field: price
              type: number
              description: "入场价格，默认为当前价格"
          required:
            - symbol
            - stop_price
            - risk_amount
            - account_size
      - name: suggest-stops
        description: "基于技术分析建议多个止损水平，包括ATR、百分比和技术位"
        input_schema:
          type: object
          properties:
            - field: symbol
              type: string
              description: "股票代码，例如 'META'"
          required:
            - symbol
  - mcp_square_id: "arxiv"
    name: "ArXiv MCP Server"
    category: "edu"
    desc: "提供arXiv学术论文搜索、下载和阅读功能"
    from: "blazickjp"
    avatar_path: "arxiv/logo.png"
    detail_path: "arxiv/detail.md"
    feature: "关键特性包括搜索arXiv论文、下载论文PDF、本地存储管理、论文内容阅读和深度分析。"
    manual: "通过uv tool install arxiv-mcp-server安装，或使用Smithery自动配置。支持按日期范围和分类筛选论文搜索。"
    scenario: "ArXiv MCP Server适用于研究人员、学生和AI系统进行学术研究，包括文献调研、论文分析、研究趋势跟踪等场景。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "ArXiv MCP Server是一个模型上下文协议服务器，为AI助手提供与arXiv学术论文库的无缝集成，支持论文搜索、下载、存储和深度分析。"
    tools:
      - name: search_papers
        description: "搜索arXiv论文，支持按查询关键词、日期范围和分类筛选"
        input_schema:
          type: object
          properties:
            - field: query
              type: string
              description: "搜索关键词"
            - field: max_results
              type: integer
              description: "最大返回结果数量，默认为10"
            - field: date_from
              type: string
              description: "起始日期，格式为YYYY-MM-DD"
            - field: categories
              type: array
              description: "论文分类筛选，如['cs.AI', 'cs.LG']"
          required:
            - query
      - name: download_paper
        description: "根据arXiv ID下载论文PDF到本地存储"
        input_schema:
          type: object
          properties:
            - field: paper_id
              type: string
              description: "arXiv论文ID，如'2401.12345'"
          required:
            - paper_id
      - name: list_papers
        description: "列出所有已下载到本地的论文"
        input_schema:
          type: object
          properties: [ ]
          required:
      - name: read_paper
        description: "读取已下载论文的内容"
        input_schema:
          type: object
          properties:
            - field: paper_id
              type: string
              description: "要读取的论文ID"
          required:
            - paper_id
  - mcp_square_id: "pdfreader"
    name: "PDF Reader MCP"
    category: "edu"
    desc: "提供安全的PDF文件读取和信息提取功能"
    from: "sylphlab"
    avatar_path: "pdfreader/logo.png"
    detail_path: "pdfreader/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "关键特性包括读取PDF全文内容、特定页面提取、元数据获取、页面计数、多文件批量处理和URL文件支持。"
    manual: "通过npm install @sylphlab/pdf-reader-mcp安装，或使用Docker运行。支持本地文件路径和远程URL，操作限制在项目根目录内确保安全。"
    scenario: "PDF Reader MCP适用于文档分析、内容提取、学术研究、报告处理和AI助手需要访问PDF文档内容的场景。"
    summary: "PDF Reader MCP是一个模型上下文协议服务器，为AI代理提供安全的PDF文件读取能力，支持文本提取、元数据获取和结构化数据输出。"
    tools:
      - name: read_pdf
        description: "读取PDF文件内容，支持全文、特定页面、元数据和页面计数"
        input_schema:
          type: object
          properties:
            - field: sources
              type: array
              description: "PDF文件源列表，每个源包含路径和可选的页面范围"
            - field: include_metadata
              type: boolean
              description: "是否包含PDF元数据信息，默认为false"
            - field: include_page_count
              type: boolean
              description: "是否包含页面总数，默认为true"
            - field: include_full_text
              type: boolean
              description: "是否包含全文内容，默认为true（当指定页面时被忽略）"
          required:
            - sources
  - mcp_square_id: "xiaohongshu"
    name: "小红书自动搜索评论工具"
    category: "edu"
    desc: "提供小红书自动搜索、内容获取和智能评论功能"
    from: "JonaFly"
    avatar_path: "xiaohongshu/logo.png"
    detail_path: "xiaohongshu/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "关键特性包括自动登录、关键词搜索、笔记内容获取、评论数据分析、AI智能评论生成和自动发布。"
    manual: "基于Playwright开发，需要Python环境和浏览器依赖。支持持久化登录、模块化设计，配置为MCP Server使用。"
    scenario: "小红书MCP适用于社交媒体营销、内容分析、用户互动、品牌推广和自动化社交媒体管理等场景。"
    summary: "小红书MCP是一个基于Playwright的自动化工具，提供与小红书平台的深度集成，支持内容搜索、分析和智能评论发布。"
    tools:
      - name: mcp0_login
        description: "登录小红书账号，支持扫码登录和状态持久化"
        input_schema:
          type: object
          properties: [ ]
          required:
      - name: mcp0_search_notes
        description: "根据关键词搜索小红书笔记"
        input_schema:
          type: object
          properties:
            - field: keywords
              type: string
              description: "搜索关键词"
            - field: limit
              type: integer
              description: "返回结果数量，默认为5"
          required:
            - keywords
      - name: mcp0_get_note_content
        description: "获取指定笔记的详细内容"
        input_schema:
          type: object
          properties:
            - field: url
              type: string
              description: "笔记URL链接"
          required:
            - url
      - name: mcp0_get_note_comments
        description: "获取指定笔记的评论信息"
        input_schema:
          type: object
          properties:
            - field: url
              type: string
              description: "笔记URL链接"
          required:
            - url
      - name: mcp0_post_smart_comment
        description: "获取笔记分析结果，用于AI生成评论"
        input_schema:
          type: object
          properties:
            - field: url
              type: string
              description: "笔记URL链接"
            - field: comment_type
              type: string
              description: "评论类型：引流、点赞、咨询、专业"
          required:
            - url
            - comment_type
      - name: mcp0_post_comment
        description: "发布评论到指定笔记"
        input_schema:
          type: object
          properties:
            - field: url
              type: string
              description: "笔记URL链接"
            - field: comment
              type: string
              description: "要发布的评论内容"
          required:
            - url
            - comment
  - mcp_square_id: "leetcode"
    name: "LeetCode MCP Server"
    category: "edu"
    desc: "提供LeetCode编程题目、用户数据和竞赛信息的全面访问功能"
    from: "jinzcdev"
    avatar_path: "leetcode/logo.png"
    detail_path: "leetcode/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "关键特性包括获取编程题目详情、用户资料查询、每日一题、题目搜索、提交历史、竞赛排名和用户笔记管理。"
    manual: "通过npm install @jinzcdev/leetcode-mcp-server安装，支持全球站和中国站。部分功能需要LeetCode会话cookie进行认证。"
    scenario: "LeetCode MCP Server适用于编程学习、算法训练、面试准备、竞赛练习和编程教学等场景。"
    summary: "LeetCode MCP Server是一个模型上下文协议服务器，提供与LeetCode平台的无缝集成，支持题目管理、用户数据分析和学习进度跟踪。"
    tools:
      - name: get_daily_challenge
        description: "获取今天的LeetCode每日一题"
        input_schema:
          type: object
          properties: [ ]
      - name: get_problem
        description: "获取特定LeetCode题目的详细信息"
        input_schema:
          type: object
          properties:
            - field: titleSlug
              type: string
              description: "题目的URL标识符"
          required:
            - titleSlug
      - name: search_problems
        description: "使用多种过滤条件搜索LeetCode题目"
        input_schema:
          type: object
          properties:
            - field: category
              type: string
              description: "题目分类过滤器，默认为'all-code-essentials'"
            - field: tags
              type: array
              description: "按主题标签过滤题目的列表"
            - field: difficulty
              type: string
              description: "题目难度级别：EASY、MEDIUM、HARD"
            - field: searchKeywords
              type: string
              description: "在题目标题和描述中搜索的关键词"
            - field: limit
              type: integer
              description: "返回的最大题目数量，默认为10"
      - name: get_user_profile
        description: "获取LeetCode用户的资料信息"
        input_schema:
          type: object
          properties:
            - field: username
              type: string
              description: "LeetCode用户名"
          required:
            - username
      - name: get_user_contest_ranking
        description: "获取用户的竞赛排名信息"
        input_schema:
          type: object
          properties:
            - field: username
              type: string
              description: "LeetCode用户名"
            - field: attended
              type: boolean
              description: "是否只包括用户参加过的竞赛，默认为true"
          required:
            - username
      - name: get_recent_ac_submissions
        description: "获取用户的近期已接受提交"
        input_schema:
          type: object
          properties:
            - field: username
              type: string
              description: "LeetCode用户名"
            - field: limit
              type: integer
              description: "返回的最大提交数量，默认为10"
          required:
            - username
      - name: get_user_status
        description: "获取当前已认证用户的状态（需要认证）"
        input_schema:
          type: object
          properties: [ ]
      - name: create_note
        description: "为特定LeetCode题目创建新笔记（需要认证，仅中国站）"
        input_schema:
          type: object
          properties:
            - field: questionId
              type: string
              description: "LeetCode题目的题目ID"
            - field: content
              type: string
              description: "笔记内容，支持markdown格式"
            - field: summary
              type: string
              description: "可选的笔记简短摘要或标题"
          required:
            - questionId
            - content
  - mcp_square_id: "baidumap"
    name: "百度地图服务"
    category: "edu"
    desc: "基于百度地图API的综合地理信息服务工具，提供地理编码、路线规划、地点检索等功能"
    from: "百度地图开放平台API"
    avatar_path: "baidumap/logo.png"
    detail_path: "baidumap/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "支持地理编码与逆地理编码、地点检索与详情查询、路线规划与距离计算、实时天气查询、交通状况分析、IP定位、POI智能标注等全方位地理信息服务"
    manual: "通过调用相应工具函数，输入地址、坐标、关键词等参数，获取地理位置信息、路线规划、天气数据等服务结果，支持多种出行方式和检索模式"
    scenario: "位置服务应用、导航系统、物流配送、出行规划、天气查询、交通分析、地理信息系统、智能推荐、位置标注等场景"
    summary: "为开发者提供完整的地理信息服务解决方案，涵盖从基础的地址解析到复杂的路线规划和实时信息查询"
    tools:
      - name: "map_geocode"
        description: "地理编码服务"
        input_schema:
          type: object
          properties:
            - field: "address"
              type: "string"
              description: "待解析的地址（最多支持84个字节。可以输入两种样式的值，分别是：1、标准的结构化地址信息，如北京市海淀区上地十街十号【推荐，地址结构越完整，解析精度越高】2、支持\"*路与*路交叉口\"描述方式，如北一环路和阜阳路的交叉路口第二种方式并不总是有返回结果，只有当地址库中存在该地址描述时才有返回。）"
          required:
            - "address"
      - name: "map_reverse_geocode"
        description: "全球逆地理编码"
        input_schema:
          type: object
          properties:
            - field: "latitude"
              type: "number"
              description: "纬度坐标"
            - field: "longitude"
              type: "number"
              description: "经度坐标"
          required:
            - "latitude"
            - "longitude"
      - name: "map_search_places"
        description: "地点检索服务（包括城市检索、圆形区域检索、多边形区域检索）"
        input_schema:
          type: object
          properties:
            - field: "query"
              type: "string"
              description: "检索关键字"
            - field: "region"
              type: "string"
              description: "检索行政区划区域"
            - field: "bounds"
              type: "string"
              description: "检索多边形区域"
            - field: "location"
              type: "string"
              description: "圆形区域检索中心点，不支持多个点"
          required:
            - "query"
      - name: "map_place_details"
        description: "地点详情检索服务"
        input_schema:
          type: object
          properties:
            - field: "uid"
              type: "string"
              description: "poi的uid"
            - field: "scope"
              type: "string"
              description: "检索结果详细程度。取值为1 或空，则返回基本信息；取值为2，返回检索POI详细信息"
          required:
            - "uid"
      - name: "map_distance_matrix"
        description: "计算多个出发地和目的地的距离和路线用时"
        input_schema:
          type: object
          properties:
            - field: "origins"
              type: "array"
              description: "起点的纬度,经度。"
            - field: "destinations"
              type: "array"
              description: "终点的纬度,经度。"
            - field: "mode"
              type: "string"
              description: "路线类型，可选值：driving（驾车）、walking（步行）、riding（骑行）、motorcycle（摩托车）"
          required:
            - "origins"
            - "destinations"
      - name: "map_directions"
        description: "路线规划服务， 计算出发地到目的地的距离、路线用时、路线方案"
        input_schema:
          type: object
          properties:
            - field: "origin"
              type: "string"
              description: "起点经纬度，格式为：纬度,经度；小数点后不超过6位，40.056878,116.30815"
            - field: "destination"
              type: "string"
              description: "终点经纬度，格式为：纬度,经度；小数点后不超过6位，40.056878,116.30815"
            - field: "mode"
              type: "string"
              description: "路线规划类型，可选值：driving（驾车）、walking（步行）、riding（骑行）、transit（公交）"
          required:
            - "origin"
            - "destination"
      - name: "map_weather"
        description: "通过行政区划代码或者经纬度坐标获取实时天气信息和未来5天天气预报"
        input_schema:
          type: object
          properties:
            - field: "districtId"
              type: "string"
              description: "行政区划代码（适用于区、县级别）"
            - field: "location"
              type: "string"
              description: "经纬度，经度在前纬度在后，逗号分隔，格式如116.404,39.915"
          required: [ ]
      - name: "map_ip_location"
        description: "通过IP地址获取位置信息"
        input_schema:
          type: object
          properties:
            - field: "ip"
              type: "string"
              description: "IP地址"
          required:
            - "ip"
      - name: "map_road_traffic"
        description: "根据城市和道路名称查询具体道路的实时拥堵评价和拥堵路段、拥堵距离、拥堵趋势等信息"
        input_schema:
          type: object
          properties:
            - field: "roadName"
              type: "string"
              description: "道路名称"
            - field: "city"
              type: "string"
              description: "城市名称"
            - field: "bounds"
              type: "string"
              description: "矩形区域，左下角和右上角的经纬度坐标点，坐标对间使用;号分隔，格式为：纬度,经度;纬度,经度，如39.912078,116.464303;39.918276,116.475442"
            - field: "vertexes"
              type: "string"
              description: "多边形边界点，经纬度顺序为：纬度,经度； 顶点顺序需按逆时针排列, 格式如vertexes=39.910528,116.472926;39.918276,116.475442;39.916671,116.459056;39.912078,116.464303"
            - field: "center"
              type: "string"
              description: "中心点坐标，如39.912078,116.464303"
            - field: "radius"
              type: "number"
              description: "查询半径，单位：米"
          required: [ ]
      - name: "map_poi_extract"
        description: "POI智能标注"
        input_schema:
          type: object
          properties:
            - field: "textContent"
              type: "string"
              description: "描述POI的文本内容"
          required:
            - "textContent"
  - mcp_square_id: "dingo"
    name: "Dingo数据质量评估工具"
    category: "industry"
    desc: "基于规则和LLM的数据质量评估框架，支持7个维度质量指标检测"
    from: "stanford-crfm/dingo"
    avatar_path: "dingo/logo.png"
    detail_path: "dingo/detail.md"
    feature: "支持基于规则（rule-based）和大语言模型（LLM-based）两种评估方法，覆盖完整性、准确性、一致性、及时性、有效性、唯一性、合规性等7个数据质量维度。提供文本、JSON、JSONL等多种数据格式支持。"
    manual: "通过'run_dingo_evaluation'工具启动评估，支持rule/llm两种评估类型。rule评估使用内置规则组，llm评估需配置API密钥。通过'list_dingo_components'查看可用组件。"
    scenario: |
      适用于数据科学、机器学习、数据治理等场景。可用于训练数据质量检测、模型输出评估、数据集清洗验证等应用。
      支持批量数据处理、自动化质量报告生成、多维度质量指标分析等功能。
    summary: "Dingo是一个综合性数据质量评估框架，提供基于规则和LLM的双重评估能力，帮助用户全面评估和提升数据质量。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    tools:
      - name: "run_dingo_evaluation"
        description: "运行Dingo数据质量评估（基于规则或LLM）"
        input_schema:
          type: object
          properties:
            - field: "input_path"
              type: "string"
              description: "输入文件或目录路径"
            - field: "evaluation_type"
              type: "string"
              description: "评估类型：rule（规则）或llm（语言模型），默认为rule"
            - field: "eval_group_name"
              type: "string"
              description: "评估组名称，rule类型可选：default、sft、pretrain"
            - field: "kwargs"
              type: "object"
              description: "额外的评估参数配置"
          required:
            - "input_path"
      - name: "list_dingo_components"
        description: "列出Dingo可用组件"
        input_schema:
          type: object
          properties:
            - field: "component_type"
              type: "string"
              description: "组件类型：rule_groups、llm_models、prompts或all"
            - field: "include_details"
              type: "boolean"
              description: "是否包含详细信息"
          required: [ ]
      - name: "get_rule_details"
        description: "获取规则组详细信息"
        input_schema:
          type: object
          properties:
            - field: "rule_name"
              type: "string"
              description: "规则组名称"
          required:
            - "rule_name"
      - name: "get_llm_details"
        description: "获取LLM模型详细信息"
        input_schema:
          type: object
          properties:
            - field: "llm_name"
              type: "string"
              description: "LLM模型名称"
          required:
            - "llm_name"
      - name: "get_prompt_details"
        description: "获取提示模板详细信息"
        input_schema:
          type: object
          properties:
            - field: "prompt_name"
              type: "string"
              description: "提示模板名称"
          required:
            - "prompt_name"
      - name: "run_quick_evaluation"
        description: "运行快速评估"
        input_schema:
          type: object
          properties:
            - field: "input_path"
              type: "string"
              description: "输入文件路径"
            - field: "evaluation_goal"
              type: "string"
              description: "评估目标描述"
          required:
            - "input_path"
            - "evaluation_goal"
  - mcp_square_id: "freshdesk"
    name: "Freshdesk客服系统集成"
    category: "industry"
    desc: "与Freshdesk客服系统集成，实现AI模型的自动化支持操作"
    from: "effytech/freshdesk_mcp"
    avatar_path: "freshdesk/logo.png"
    detail_path: "freshdesk/detail.md"
    feature: "提供与Freshdesk API端点的无缝集成，支持AI模型通过Freshdesk执行支持操作，包括工单管理、客户管理、代理管理等全方位功能。"
    manual: "通过uvx安装运行'uvx freshdesk-mcp'，需要配置FRESHDESK_API_KEY和FRESHDESK_DOMAIN环境变量。支持Claude Desktop直接集成。"
    scenario: |
      适用于客服团队、支持工程师和客户成功团队。可实现自动化工单创建、状态更新、客户查询响应等。
      支持高优先级工单自动分配、客户历史记录查询、代理工作负载管理等场景。
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Freshdesk MCP服务器使AI模型能够与Freshdesk客服系统交互，自动化处理工单管理、客户服务和支持操作流程。"
    tools:
      - name: "create_ticket"
        description: "创建新的支持工单"
        input_schema:
          type: object
          properties:
            - field: "subject"
              type: "string"
              description: "工单主题"
            - field: "description"
              type: "string"
              description: "工单描述"
            - field: "priority"
              type: "number"
              description: "优先级级别"
            - field: "status"
              type: "number"
              description: "工单状态代码"
          required:
            - "subject"
            - "description"
            - "priority"
            - "status"
      - name: "update_ticket"
        description: "更新现有工单"
        input_schema:
          type: object
          properties:
            - field: "ticket_id"
              type: "number"
              description: "要更新的工单ID"
            - field: "ticket_fields"
              type: "object"
              description: "要更新的字段"
          required:
            - "ticket_id"
            - "ticket_fields"
      - name: "search_tickets"
        description: "根据条件搜索工单"
        input_schema:
          type: object
          properties:
            - field: "query"
              type: "string"
              description: "搜索查询字符串"
          required:
            - "query"
      - name: "get_agents"
        description: "获取所有代理信息"
        input_schema:
          type: object
          properties:
            - field: "page"
              type: "number"
              description: "页码"
            - field: "per_page"
              type: "number"
              description: "每页代理数量"
          required: [ ]
  - mcp_square_id: "inoyumcpunomiserver"
    name: "Apache Unomi用户画像管理系统"
    category: "industry"
    desc: "Apache Unomi客户数据平台的MCP集成，提供统一用户画像管理"
    from: "inoyu/mcp-unomi-server"
    avatar_path: "inoyumcpunomiserver/logo.png"
    detail_path: "inoyumcpunomiserver/detail.md"
    feature: "提供完整的用户画像管理功能，包括用户配置文件管理、搜索功能、会话管理、上下文处理、作用域管理等。支持客户数据平台的统一管理和实时用户画像更新。"
    manual: "需要配置UNOMI_USERNAME、UNOMI_PASSWORD、UNOMI_KEY、UNOMI_PROFILE_ID等环境变量。通过各种工具访问Unomi API，支持用户配置文件的CRUD操作和高级搜索功能。"
    scenario: |
      适用于客户关系管理、个性化推荐、用户行为分析等场景。可用于统一用户视图、个性化营销、客户细分、行为追踪等应用。
      支持实时用户画像更新、跨渠道用户识别、智能推荐、营销自动化等功能。
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    summary: "Apache Unomi MCP服务器提供统一的客户数据平台管理能力，支持用户画像的全生命周期管理。"
    tools:
      - name: "get_profile"
        description: "通过ID获取用户配置文件"
        input_schema:
          type: object
          properties:
            - field: "profileId"
              type: "string"
              description: "用户配置文件ID"
          required:
            - "profileId"
      - name: "search_profiles"
        description: "搜索用户配置文件"
        input_schema:
          type: object
          properties:
            - field: "query"
              type: "object"
              description: "搜索查询条件"
            - field: "offset"
              type: "number"
              description: "结果偏移量"
            - field: "limit"
              type: "number"
              description: "返回结果数量限制"
          required:
            - "query"
      - name: "get_my_profile"
        description: "获取当前用户的配置文件"
        input_schema:
          type: object
          properties:
            - field: "sessionId"
              type: "string"
              description: "会话ID（可选）"
          required: [ ]
      - name: "update_my_profile"
        description: "更新当前用户的配置文件"
        input_schema:
          type: object
          properties:
            - field: "sessionId"
              type: "string"
              description: "会话ID（可选）"
            - field: "profileData"
              type: "object"
              description: "要更新的配置文件数据"
          required:
            - "profileData"
      - name: "create_scope"
        description: "创建新的作用域"
        input_schema:
          type: object
          properties:
            - field: "scope"
              type: "string"
              description: "作用域名称"
            - field: "description"
              type: "string"
              description: "作用域描述"
          required:
            - "scope"
      - name: "find_profile_by_email"
        description: "通过邮箱查找用户配置文件"
        input_schema:
          type: object
          properties:
            - field: "email"
              type: "string"
              description: "用户邮箱地址"
          required:
            - "email"
      - name: "create_session"
        description: "创建新的用户会话"
        input_schema:
          type: object
          properties:
            - field: "profileId"
              type: "string"
              description: "用户配置文件ID"
            - field: "scope"
              type: "string"
              description: "会话作用域"
          required:
            - "profileId"
      - name: "send_event"
        description: "发送用户事件到Unomi"
        input_schema:
          type: object
          properties:
            - field: "eventType"
              type: "string"
              description: "事件类型"
            - field: "sessionId"
              type: "string"
              description: "会话ID"
            - field: "eventData"
              type: "object"
              description: "事件数据"
          required:
            - "eventType"
            - "sessionId"
  - mcp_square_id: "jira"
    name: "Jira项目管理集成"
    category: "industry"
    desc: "基于Go的Jira MCP连接器，支持AI助手与Atlassian Jira交互"
    from: "nguyenvanduocit/jira-mcp"
    avatar_path: "jira/logo.png"
    detail_path: "jira/detail.md"
    feature: "提供20+专业工具，涵盖Jira工作流管理的各个方面，包括问题管理、评论和时间跟踪、问题关系和历史记录、冲刺和项目管理等功能。支持批量操作和自然语言Jira操作。"
    manual: "支持Docker、二进制文件或源码安装。需要配置ATLASSIAN_HOST、ATLASSIAN_EMAIL、ATLASSIAN_TOKEN环境变量。支持Cursor IDE和Claude Desktop集成。"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    scenario: |
      适用于开发团队、项目经理和产品经理的日常工作流管理。可用于任务分配、进度跟踪、缺陷管理、冲刺规划等。
      支持自动化工作流转换、批量问题操作、跨项目关系管理等复杂场景。
    summary: "Jira MCP连接器提供比官方连接器更全面的功能，专注于解决实际开发和项目管理中的日常挑战。"
    tools:
      - name: "get_issue"
        description: "获取详细的问题信息"
        input_schema:
          type: object
          properties:
            - field: "issue_key"
              type: "string"
              description: "问题键值（如PROJ-123）"
            - field: "expand"
              type: "string"
              description: "要展开的字段"
          required:
            - "issue_key"
      - name: "create_issue"
        description: "创建新问题"
        input_schema:
          type: object
          properties:
            - field: "project_key"
              type: "string"
              description: "项目键值"
            - field: "issue_type"
              type: "string"
              description: "问题类型"
            - field: "summary"
              type: "string"
              description: "问题摘要"
            - field: "description"
              type: "string"
              description: "问题描述"
          required:
            - "project_key"
            - "issue_type"
            - "summary"
      - name: "search_issues"
        description: "使用JQL搜索问题"
        input_schema:
          type: object
          properties:
            - field: "jql"
              type: "string"
              description: "Jira查询语言（JQL）"
            - field: "max_results"
              type: "number"
              description: "最大结果数量"
          required:
            - "jql"
      - name: "move_issues_to_sprint"
        description: "将问题移动到冲刺"
        input_schema:
          type: object
          properties:
            - field: "sprint_id"
              type: "number"
              description: "冲刺ID"
            - field: "issue_keys"
              type: "array"
              description: "问题键值列表"
          required:
            - "sprint_id"
            - "issue_keys"
  - mcp_square_id: "flowcoreplatform"
    name: "Flowcore平台管理工具"
    category: "industry"
    desc: "Flowcore事件驱动架构平台的MCP集成工具"
    from: "flowcore-io/mcp-flowcore-platform"
    avatar_path: "flowcoreplatform/logo.png"
    detail_path: "flowcoreplatform/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "提供全面的Flowcore平台管理功能，包括租户管理、数据核心管理、流类型管理、事件类型管理、事件数据处理、时间桶查询等。支持事件驱动架构的完整生命周期管理。"
    manual: "需要配置服务账户凭据或PAT令牌。通过工具访问Flowcore平台的各种资源，支持CRUD操作、数据查询、事件摄取等功能。API密钥用于数据摄取操作。"
    scenario: |
      适用于事件驱动架构、实时数据处理、微服务管理等场景。可用于事件流管理、数据管道构建、实时分析、系统集成等应用。
      支持大规模事件处理、实时数据流分析、事件溯源、状态管理等功能。
    summary: "Flowcore MCP工具提供完整的事件驱动平台管理能力，支持从数据架构设计到事件处理的全流程管理。"
    tools:
      - name: "get_tenant"
        description: "获取租户信息"
        input_schema:
          type: object
          properties:
            - field: "tenantId"
              type: "string"
              description: "租户ID"
          required:
            - "tenantId"
      - name: "list_tenants"
        description: "列出有权限访问的所有租户"
        input_schema:
          type: object
          properties: [ ]
          required: [ ]
      - name: "get_data_core"
        description: "获取数据核心信息"
        input_schema:
          type: object
          properties:
            - field: "dataCoreId"
              type: "string"
              description: "数据核心ID"
          required:
            - "dataCoreId"
      - name: "list_data_cores"
        description: "列出租户的所有数据核心"
        input_schema:
          type: object
          properties:
            - field: "tenantId"
              type: "string"
              description: "租户ID"
          required:
            - "tenantId"
      - name: "create_data_core"
        description: "创建新的数据核心"
        input_schema:
          type: object
          properties:
            - field: "tenantId"
              type: "string"
              description: "租户ID"
            - field: "name"
              type: "string"
              description: "数据核心名称"
            - field: "description"
              type: "string"
              description: "数据核心描述"
          required:
            - "tenantId"
            - "name"
      - name: "get_flow_type"
        description: "获取流类型信息"
        input_schema:
          type: object
          properties:
            - field: "flowTypeId"
              type: "string"
              description: "流类型ID"
          required:
            - "flowTypeId"
      - name: "list_flow_types"
        description: "列出数据核心的所有流类型"
        input_schema:
          type: object
          properties:
            - field: "dataCoreId"
              type: "string"
              description: "数据核心ID"
          required:
            - "dataCoreId"
      - name: "create_flow_type"
        description: "创建新的流类型"
        input_schema:
          type: object
          properties:
            - field: "dataCoreId"
              type: "string"
              description: "数据核心ID"
            - field: "name"
              type: "string"
              description: "流类型名称"
            - field: "description"
              type: "string"
              description: "流类型描述"
          required:
            - "dataCoreId"
            - "name"
      - name: "get_event_type"
        description: "获取事件类型信息"
        input_schema:
          type: object
          properties:
            - field: "eventTypeId"
              type: "string"
              description: "事件类型ID"
          required:
            - "eventTypeId"
      - name: "list_event_types"
        description: "列出流类型的所有事件类型"
        input_schema:
          type: object
          properties:
            - field: "flowTypeId"
              type: "string"
              description: "流类型ID"
          required:
            - "flowTypeId"
      - name: "create_event_type"
        description: "创建新的事件类型"
        input_schema:
          type: object
          properties:
            - field: "flowTypeId"
              type: "string"
              description: "流类型ID"
            - field: "name"
              type: "string"
              description: "事件类型名称"
            - field: "schema"
              type: "object"
              description: "事件模式定义"
          required:
            - "flowTypeId"
            - "name"
      - name: "get_events"
        description: "获取事件数据（支持分页）"
        input_schema:
          type: object
          properties:
            - field: "tenant"
              type: "string"
              description: "租户名称"
            - field: "eventTypeId"
              type: "string"
              description: "事件类型ID"
            - field: "timeBucket"
              type: "string"
              description: "时间桶（格式：YYYYMMDDhhiiss）"
            - field: "cursor"
              type: "string"
              description: "分页游标"
            - field: "pageSize"
              type: "number"
              description: "页面大小（默认10，最大100）"
          required:
            - "tenant"
            - "eventTypeId"
            - "timeBucket"
      - name: "get_time_buckets"
        description: "获取事件类型的时间桶列表"
        input_schema:
          type: object
          properties:
            - field: "tenant"
              type: "string"
              description: "租户名称"
            - field: "eventTypeId"
              type: "string"
              description: "事件类型ID"
          required:
            - "tenant"
            - "eventTypeId"
      - name: "ingest"
        description: "摄取事件数据到平台"
        input_schema:
          type: object
          properties:
            - field: "tenant"
              type: "string"
              description: "租户名称"
            - field: "eventTypeId"
              type: "string"
              description: "事件类型ID"
            - field: "payload"
              type: "object"
              description: "事件负载数据"
          required:
            - "tenant"
            - "eventTypeId"
            - "payload"
  - mcp_square_id: "grafana"
    name: "Grafana监控平台集成"
    category: "industry"
    avatar_path: "grafana/logo.png"
    detail_path: "grafana/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    desc: "Grafana监控平台的模型上下文协议服务器"
    from: "grafana/mcp-grafana"
    feature: "提供对Grafana实例和周边生态系统的全面访问，包括仪表板管理、数据源查询、Prometheus和Loki查询、告警管理、事件管理等功能。"
    manual: "支持Docker镜像、二进制文件下载或源码构建。需要Grafana服务账户令牌。支持STDIO、SSE和HTTP多种通信模式。"
    scenario: |
      适用于DevOps工程师、系统管理员和监控团队。可用于系统监控、性能分析、告警管理、日志分析等场景。
      支持自动化仪表板创建、异常检测、告警规则管理、性能趋势分析等应用。
    summary: "Grafana MCP服务器使AI助手能够与Grafana监控平台交互，实现智能的监控数据分析和可视化管理。"
    tools:
      - name: "search_dashboards"
        description: "搜索仪表板"
        input_schema:
          type: object
          properties:
            - field: "query"
              type: "string"
              description: "搜索查询字符串"
            - field: "tag"
              type: "string"
              description: "标签过滤"
          required:
            - "query"
      - name: "get_dashboard_by_uid"
        description: "根据UID获取仪表板"
        input_schema:
          type: object
          properties:
            - field: "uid"
              type: "string"
              description: "仪表板唯一标识符"
          required:
            - "uid"
      - name: "query_prometheus"
        description: "执行Prometheus查询"
        input_schema:
          type: object
          properties:
            - field: "datasource_uid"
              type: "string"
              description: "Prometheus数据源UID"
            - field: "query"
              type: "string"
              description: "PromQL查询语句"
            - field: "start_time"
              type: "string"
              description: "开始时间"
            - field: "end_time"
              type: "string"
              description: "结束时间"
          required:
            - "datasource_uid"
            - "query"
      - name: "query_loki_logs"
        description: "查询Loki日志"
        input_schema:
          type: object
          properties:
            - field: "datasource_uid"
              type: "string"
              description: "Loki数据源UID"
            - field: "query"
              type: "string"
              description: "LogQL查询语句"
            - field: "start_time"
              type: "string"
              description: "开始时间"
            - field: "end_time"
              type: "string"
              description: "结束时间"
          required:
            - "datasource_uid"
            - "query"
  - mcp_square_id: "monitor"
    name: "系统监控工具"
    category: "industry"
    desc: "实时系统性能监控工具，提供CPU、内存、磁盘、网络等系统指标"
    from: "seekrays/mcp-monitor"
    avatar_path: "grafana/logo.png"
    detail_path: "grafana/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "提供全面的系统监控功能，包括CPU使用率、内存使用情况、磁盘空间、网络统计、主机信息、进程管理等。实时监控系统性能指标，支持多平台运行。"
    manual: "通过各个监控工具获取系统指标：cpu_info获取CPU信息、memory_info获取内存状态、disk_info获取磁盘使用情况、network_info获取网络统计、host_info获取主机信息、process_info获取进程列表。"
    scenario: |
      适用于系统管理、性能优化、故障诊断等场景。可用于服务器监控、应用性能分析、资源使用评估、系统健康检查等应用。
      支持实时监控告警、系统资源规划、性能瓶颈分析等功能。
    summary: "MCP Monitor是一个综合性系统监控工具，提供实时的系统性能指标监控和分析能力。"
    tools:
      - name: "cpu_info"
        description: "获取CPU使用情况和信息"
        input_schema:
          type: object
          properties: [ ]
          required: [ ]
      - name: "memory_info"
        description: "获取内存使用情况"
        input_schema:
          type: object
          properties: [ ]
          required: [ ]
      - name: "disk_info"
        description: "获取磁盘使用情况"
        input_schema:
          type: object
          properties: [ ]
          required: [ ]
      - name: "network_info"
        description: "获取网络接口统计信息"
        input_schema:
          type: object
          properties: [ ]
          required: [ ]
      - name: "host_info"
        description: "获取主机系统信息"
        input_schema:
          type: object
          properties: [ ]
          required: [ ]
      - name: "process_info"
        description: "获取进程列表和信息"
        input_schema:
          type: object
          properties: [ ]
          required: [ ]
  - mcp_square_id: "dataexploration"
    name: "数据探索分析助手"
    category: "industry"
    desc: "强大的数据分析和探索工具，支持CSV文件处理和Python脚本执行"
    from: "modelcontextprotocol/mcp-server-data-exploration"
    avatar_path: "dataexploration/logo.png"
    detail_path: "dataexploration/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "提供全面的数据分析功能，包括CSV文件读取、数据清洗、统计分析、数据可视化、Python脚本执行等。支持大型数据集处理、智能数据洞察、自动化分析报告生成。"
    manual: "通过'read_csv'工具读取CSV文件，'execute_python'执行数据分析脚本，'analyze_data'进行智能数据分析。支持链式数据处理工作流和结果导出。"
    scenario: |
      适用于数据科学、商业分析、研究工作等场景。可用于数据清洗、探索性数据分析、统计建模、数据可视化、报告生成等应用。
      支持批量数据处理、自动化分析流程、交互式数据探索、洞察发现等功能。
    summary: "MCP数据探索服务器提供强大的数据分析和处理能力，帮助用户快速洞察数据价值。"
    tools:
      - name: "read_csv"
        description: "读取和解析CSV文件"
        input_schema:
          type: object
          properties:
            - field: "file_path"
              type: "string"
              description: "CSV文件路径"
            - field: "delimiter"
              type: "string"
              description: "分隔符（默认为逗号）"
            - field: "encoding"
              type: "string"
              description: "文件编码（默认utf-8）"
            - field: "max_rows"
              type: "number"
              description: "最大读取行数"
          required:
            - "file_path"
      - name: "analyze_data"
        description: "对数据进行智能分析"
        input_schema:
          type: object
          properties:
            - field: "data"
              type: "object"
              description: "要分析的数据"
            - field: "analysis_type"
              type: "string"
              description: "分析类型：descriptive、correlation、distribution等"
            - field: "columns"
              type: "array"
              description: "指定要分析的列"
          required:
            - "data"
      - name: "execute_python"
        description: "执行Python数据分析脚本"
        input_schema:
          type: object
          properties:
            - field: "code"
              type: "string"
              description: "要执行的Python代码"
            - field: "variables"
              type: "object"
              description: "传递给脚本的变量"
          required:
            - "code"
      - name: "create_visualization"
        description: "创建数据可视化图表"
        input_schema:
          type: object
          properties:
            - field: "data"
              type: "object"
              description: "可视化数据"
            - field: "chart_type"
              type: "string"
              description: "图表类型：bar、line、scatter、histogram等"
            - field: "x_column"
              type: "string"
              description: "X轴列名"
            - field: "y_column"
              type: "string"
              description: "Y轴列名"
          required:
            - "data"
            - "chart_type"
      - name: "filter_data"
        description: "过滤和筛选数据"
        input_schema:
          type: object
          properties:
            - field: "data"
              type: "object"
              description: "要过滤的数据"
            - field: "conditions"
              type: "object"
              description: "过滤条件"
          required:
            - "data"
            - "conditions"
      - name: "export_results"
        description: "导出分析结果"
        input_schema:
          type: object
          properties:
            - field: "data"
              type: "object"
              description: "要导出的数据"
            - field: "file_path"
              type: "string"
              description: "导出文件路径"
            - field: "format"
              type: "string"
              description: "导出格式：csv、json、excel"
          required:
            - "data"
            - "file_path"
  - mcp_square_id: "iaptic"
    name: "Iaptic应用内购买分析工具"
    category: "industry"
    desc: "Iaptic应用内购买数据分析和管理平台的MCP集成"
    from: "iaptic/mcp-server-iaptic"
    avatar_path: "iaptic/logo.png"
    detail_path: "iaptic/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "提供完整的应用内购买数据分析功能，包括客户管理、购买记录、交易统计、收入分析、Stripe集成、事件追踪、应用数据管理等。支持多平台应用内购买数据统一管理。"
    manual: "需要配置IAPTIC_API_KEY、IAPTIC_APP_NAME和IAPTIC_MASTER_KEY环境变量。通过各类工具访问客户数据、购买记录、统计信息等，支持创建、查询、更新操作。"
    scenario: |
      适用于移动应用开发、应用商业化分析、用户行为分析等场景。可用于收入分析、用户生命周期管理、购买行为分析、应用商业化优化等应用。
      支持跨平台数据整合、实时数据分析、自动化报告生成等功能。
    summary: "Iaptic MCP服务器提供全面的应用内购买数据分析和管理能力，帮助开发者优化应用商业化策略。"
    tools:
      - name: "customer_list"
        description: "获取客户列表"
        input_schema:
          type: object
          properties:
            - field: "limit"
              type: "number"
              description: "返回结果数量限制"
            - field: "offset"
              type: "number"
              description: "结果偏移量"
          required: [ ]
      - name: "customer_get"
        description: "获取特定客户信息"
        input_schema:
          type: object
          properties:
            - field: "customerId"
              type: "string"
              description: "客户ID"
          required:
            - "customerId"
      - name: "purchase_list"
        description: "获取购买记录列表"
        input_schema:
          type: object
          properties:
            - field: "customerId"
              type: "string"
              description: "客户ID（可选过滤条件）"
            - field: "limit"
              type: "number"
              description: "返回结果数量限制"
          required: [ ]
      - name: "transaction_list"
        description: "获取交易记录列表"
        input_schema:
          type: object
          properties:
            - field: "limit"
              type: "number"
              description: "返回结果数量限制"
            - field: "offset"
              type: "number"
              description: "结果偏移量"
          required: [ ]
      - name: "stats_revenue"
        description: "获取收入统计数据"
        input_schema:
          type: object
          properties:
            - field: "period"
              type: "string"
              description: "统计周期：daily、weekly、monthly"
            - field: "startDate"
              type: "string"
              description: "开始日期"
            - field: "endDate"
              type: "string"
              description: "结束日期"
          required: [ ]
      - name: "stripe_sync"
        description: "同步Stripe数据"
        input_schema:
          type: object
          properties: [ ]
          required: [ ]
      - name: "event_track"
        description: "追踪自定义事件"
        input_schema:
          type: object
          properties:
            - field: "eventName"
              type: "string"
              description: "事件名称"
            - field: "customerId"
              type: "string"
              description: "客户ID"
            - field: "properties"
              type: "object"
              description: "事件属性"
          required:
            - "eventName"
            - "customerId"
      - name: "iaptic_app_info"
        description: "获取应用信息"
        input_schema:
          type: object
          properties: [ ]
          required: [ ]
  - mcp_square_id: "summarizer"
    name: "智能文本摘要生成器"
    category: "industry"
    desc: "基于Google Gemini 1.5 Pro的智能文本摘要生成工具"
    from: "modelcontextprotocol/mcp-summarizer"
    avatar_path: "summarizer/logo.png"
    detail_path: "summarizer/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "使用Google Gemini 1.5 Pro模型进行文本摘要生成，支持自定义摘要长度、多语言摘要、智能内容压缩等功能。提供高质量的文本理解和摘要生成能力。"
    manual: "使用'summarize'工具进行文本摘要，需要配置Google AI API密钥。支持设置最大摘要长度和目标语言，默认200字符英文摘要。"
    scenario: |
      适用于内容创作、文档处理、信息提取等场景。可用于长文档摘要、新闻摘要、研究论文概述、会议纪要生成等应用。
      支持多语言文本处理、自动内容压缩、关键信息提取等功能。
    summary: "MCP Summarizer是一个基于Google Gemini的智能摘要工具，提供高质量的多语言文本摘要生成能力。"
    tools:
      - name: "summarize"
        description: "生成文本摘要"
        input_schema:
          type: object
          properties:
            - field: "text"
              type: "string"
              description: "需要摘要的文本内容"
            - field: "maxLength"
              type: "number"
              description: "摘要最大长度（字符数），默认200"
            - field: "language"
              type: "string"
              description: "摘要语言，默认en（英文）"
          required:
            - "text"
  - mcp_square_id: "opendatamcp"
    name: "开放数据平台连接器"
    category: "industry"
    desc: "连接LLM与各种公共数据集的开放数据平台"
    from: "pjanoh/OpenDataMCP"
    avatar_path: "opendatamcp/logo.png"
    detail_path: "opendatamcp/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "提供统一的公共数据访问接口，支持政府开放数据、科研数据集、统计数据、地理信息等多种数据源。支持数据搜索、查询、下载、格式转换等功能。"
    manual: "通过'search_datasets'搜索数据集，'get_dataset_info'获取数据集详情，'download_data'下载数据，'query_data'查询特定数据。支持多种数据格式和API接口。"
    scenario: |
      适用于政策研究、学术研究、数据新闻、公共服务等场景。可用于政府数据分析、社会经济研究、环境监测、城市规划等应用。
      支持跨数据源整合、实时数据获取、历史数据分析、数据标准化等功能。
    summary: "OpenDataMCP为LLM提供便捷的公共数据访问能力，促进开放数据的智能分析和应用。"
    tools:
      - name: "search_datasets"
        description: "搜索可用的开放数据集"
        input_schema:
          type: object
          properties:
            - field: "query"
              type: "string"
              description: "搜索关键词"
            - field: "category"
              type: "string"
              description: "数据分类：government、research、economic、environmental等"
            - field: "format"
              type: "string"
              description: "数据格式：csv、json、xml、api等"
            - field: "region"
              type: "string"
              description: "地理区域限制"
          required:
            - "query"
      - name: "get_dataset_info"
        description: "获取数据集详细信息"
        input_schema:
          type: object
          properties:
            - field: "dataset_id"
              type: "string"
              description: "数据集唯一标识符"
          required:
            - "dataset_id"
      - name: "download_data"
        description: "下载数据集或数据样本"
        input_schema:
          type: object
          properties:
            - field: "dataset_id"
              type: "string"
              description: "数据集ID"
            - field: "format"
              type: "string"
              description: "下载格式"
            - field: "sample_size"
              type: "number"
              description: "样本大小（获取部分数据）"
          required:
            - "dataset_id"
      - name: "query_data"
        description: "查询特定数据记录"
        input_schema:
          type: object
          properties:
            - field: "dataset_id"
              type: "string"
              description: "数据集ID"
            - field: "filters"
              type: "object"
              description: "查询过滤条件"
            - field: "limit"
              type: "number"
              description: "返回记录数限制"
          required:
            - "dataset_id"
      - name: "get_data_sources"
        description: "获取支持的数据源列表"
        input_schema:
          type: object
          properties: [ ]
          required: [ ]
      - name: "convert_format"
        description: "转换数据格式"
        input_schema:
          type: object
          properties:
            - field: "data"
              type: "object"
              description: "要转换的数据"
            - field: "from_format"
              type: "string"
              description: "源格式"
            - field: "to_format"
              type: "string"
              description: "目标格式"
          required:
            - "data"
            - "from_format"
            - "to_format"
      - name: "get_statistics"
        description: "获取数据集统计信息"
        input_schema:
          type: object
          properties:
            - field: "dataset_id"
              type: "string"
              description: "数据集ID"
          required:
            - "dataset_id"
  - mcp_square_id: "serverraygun"
    name: "Raygun错误监控集成"
    category: "industry"
    desc: "Raygun API V3端点的MCP服务器，提供应用错误监控和性能分析"
    from: "raygun.io/mcp-server-raygun"
    avatar_path: "serverraygun/logo.png"
    detail_path: "serverraygun/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "与Raygun的崩溃报告和真实用户监控应用程序交互，提供全面的API功能访问。包括应用管理、错误管理、部署管理、用户会话管理、性能监控等功能。"
    manual: "需要配置RAYGUN_PAT_TOKEN环境变量。通过工具库中的各种工具访问Raygun API，支持应用列表查询、错误组管理、部署跟踪、用户会话分析等操作。"
    scenario: |
      适用于移动应用和Web应用开发团队。可用于错误监控、性能分析、用户行为跟踪、应用质量管理等场景。
      支持实时错误警报、性能优化建议、用户体验分析、应用稳定性监控等应用。
    summary: "Raygun MCP服务器使AI助手能够与Raygun监控平台交互，提供应用错误分析、性能监控和用户体验优化功能。"
    tools:
      - name: "list_applications"
        description: "列出账户下的所有应用程序"
        input_schema:
          type: object
          properties: [ ]
          required: [ ]
      - name: "get_application"
        description: "获取特定应用程序信息"
        input_schema:
          type: object
          properties:
            - field: "applicationId"
              type: "string"
              description: "应用程序ID"
          required:
            - "applicationId"
      - name: "list_error_groups"
        description: "列出应用程序的错误组"
        input_schema:
          type: object
          properties:
            - field: "applicationId"
              type: "string"
              description: "应用程序ID"
            - field: "take"
              type: "number"
              description: "返回结果数量"
            - field: "skip"
              type: "number"
              description: "跳过结果数量"
          required:
            - "applicationId"
      - name: "get_error_group"
        description: "获取特定错误组详细信息"
        input_schema:
          type: object
          properties:
            - field: "applicationId"
              type: "string"
              description: "应用程序ID"
            - field: "errorGroupId"
              type: "string"
              description: "错误组ID"
          required:
            - "applicationId"
            - "errorGroupId"
      - name: "list_deployments"
        description: "列出应用程序的部署记录"
        input_schema:
          type: object
          properties:
            - field: "applicationId"
              type: "string"
              description: "应用程序ID"
          required:
            - "applicationId"
      - name: "create_deployment"
        description: "创建新的部署记录"
        input_schema:
          type: object
          properties:
            - field: "applicationId"
              type: "string"
              description: "应用程序ID"
            - field: "version"
              type: "string"
              description: "部署版本"
            - field: "notes"
              type: "string"
              description: "部署说明"
          required:
            - "applicationId"
            - "version"
      - name: "get_user_sessions"
        description: "获取用户会话数据"
        input_schema:
          type: object
          properties:
            - field: "applicationId"
              type: "string"
              description: "应用程序ID"
            - field: "userId"
              type: "string"
              description: "用户ID"
          required:
            - "applicationId"
            - "userId"
  - mcp_square_id: "stackchan"
    name: "Stack-chan智能机器人"
    category: "industry"
    desc: "基于JavaScript驱动的M5Stack嵌入式超可爱机器人"
    from: "stack-chan/stack-chan"
    avatar_path: "stackchan/logo.png"
    detail_path: "stackchan/detail.md"
    sse_url: "http://<your.mcp-server.com>/sse?<api_key=your_key>"
    feature: "JavaScript驱动的可爱机器人，支持表情显示、语音交互、伺服电机驱动、M5Units扩展等功能。包含固件源码、外壳设计和电路原理图的完整解决方案。"
    manual: "需要组装板卡（参考schematics和case目录）和刷写固件到M5Stack（参考firmware目录）。支持预组装模块。"
    scenario: |
      适用于创客、教育工作者和机器人爱好者。可用于STEM教育、人机交互研究、智能家居助手等场景。
      支持表情交互、语音对话、动作控制、传感器集成等应用开发。
    summary: "Stack-chan是一个开源的JavaScript驱动超可爱机器人，提供完整的硬件设计、固件开发和应用框架。"
    tools:
      - name: "show_expression"
        description: "显示表情"
        input_schema:
          type: object
          properties:
            - field: "expression_type"
              type: "string"
              description: "表情类型（Happy、Angry、Sad等）"
          required:
            - "expression_type"
      - name: "say_text"
        description: "语音播报文本"
        input_schema:
          type: object
          properties:
            - field: "text"
              type: "string"
              description: "要播报的文本内容"
            - field: "language"
              type: "string"
              description: "语言设置"
          required:
            - "text"
      - name: "control_servo"
        description: "控制伺服电机"
        input_schema:
          type: object
          properties:
            - field: "servo_id"
              type: "string"
              description: "伺服电机ID"
            - field: "angle"
              type: "number"
              description: "目标角度"
          required:
            - "servo_id"
            - "angle"
      - name: "gaze_direction"
        description: "设置注视方向"
        input_schema:
          type: object
          properties:
            - field: "direction"
              type: "string"
              description: "注视方向（左、右、上、下等）"
          required:
            - "direction"
tools:
  - tool_square_id: "seniverse"
    name: "心知天气"
    desc: "心知天气是北京心知科技有限公司旗下的国内领先商业气象服务平台，通过天气 API、BI、数据分析服务等为能源、交通、农业等多个行业提供天气和行业解决方案。"
    avatar_path: "seniverse/logo.png"
    detail: "心知天气是北京心知科技有限公司旗下的国内领先商业气象服务平台心知天气是北京心知科技有限公司旗下的国内领先商业气象服务平台。可前往 https://www.seniverse.com/ 申请API Key"
    tags: ""
    need_api_key_input: true
    type: "API Key"
    auth_type: "Custom"
    custom_header_name: "key"
    api_key: ""
    schema: "{\"openapi\":\"3.0.1\",\"info\":{\"title\":\"心知天气API\",\"description\":\"\",\"version\":\"1.0.0\"},\"tags\":[],\"paths\":{\"/v3/weather/now.json\":{\"get\":{\"summary\":\"天气实况\",\"operationId\":\"seniverse_current_weather\",\"deprecated\":false,\"description\":\"获取指定城市的天气实况。\",\"tags\":[],\"parameters\":[{\"name\":\"key\",\"in\":\"query\",\"description\":\"你的 API 密钥\",\"required\":false,\"example\":\"\",\"schema\":{\"type\":\"string\"}},{\"name\":\"location\",\"in\":\"query\",\"description\":\"所查询的位置\",\"required\":false,\"example\":\"北京\",\"schema\":{\"type\":\"string\"}},{\"name\":\"language\",\"in\":\"query\",\"description\":\"语言\",\"required\":false,\"example\":\"zh-Hans\",\"schema\":{\"type\":\"string\"}},{\"name\":\"unit\",\"in\":\"query\",\"description\":\"单位\",\"required\":false,\"example\":\"c\",\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"description\":\"\",\"content\":{\"application/json\":{\"schema\":{\"type\":\"object\",\"properties\":{\"results\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"location\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"country\":{\"type\":\"string\"},\"path\":{\"type\":\"string\"},\"timezone\":{\"type\":\"string\"},\"timezone_offset\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"country\",\"path\",\"timezone\",\"timezone_offset\"]},\"now\":{\"type\":\"object\",\"properties\":{\"text\":{\"description\":\"天气现象文字\",\"type\":\"string\"},\"code\":{\"description\":\"天气现象代码\",\"type\":\"string\"},\"temperature\":{\"description\":\"温度，单位为c摄氏度或f华氏度\",\"type\":\"string\"}},\"required\":[\"text\",\"code\",\"temperature\"]},\"last_update\":{\"description\":\"数据更新时间（该城市的本地时间）\",\"type\":\"string\"}}}}},\"required\":[\"results\"]},\"example\":{\"results\":[{\"location\":{\"id\":\"C23NB62W20TF\",\"name\":\"西雅图\",\"country\":\"US\",\"path\":\"西雅图,华盛顿州,美国\",\"timezone\":\"America/Los_Angeles\",\"timezone_offset\":\"-07:00\"},\"now\":{\"text\":\"多云\",\"code\":\"4\",\"temperature\":\"14\"},\"last_update\":\"2015-09-25T22:45:00-07:00\"}]}}},\"headers\":{}}},\"security\":[]}},\"/v3/weather/daily.json\":{\"get\":{\"summary\":\"逐日天气预报\",\"operationId\":\"seniverse_day_to_day_weather\",\"deprecated\":false,\"description\":\"获取指定城市未来最多 3天每天的白天和夜间预报天气。\",\"tags\":[],\"parameters\":[{\"name\":\"key\",\"in\":\"query\",\"description\":\"你的 API 密钥\",\"required\":true,\"example\":\"\",\"schema\":{\"type\":\"string\"}},{\"name\":\"location\",\"in\":\"query\",\"description\":\"所查询的位置\",\"required\":true,\"example\":\"北京\",\"schema\":{\"type\":\"string\"}},{\"name\":\"language\",\"in\":\"query\",\"description\":\"语言\",\"required\":false,\"example\":\"zh-Hans\",\"schema\":{\"type\":\"string\"}},{\"name\":\"unit\",\"in\":\"query\",\"description\":\"单位\",\"required\":false,\"example\":\"c\",\"schema\":{\"type\":\"string\"}},{\"name\":\"start\",\"in\":\"query\",\"description\":\"起始时间\",\"required\":false,\"example\":\"0\",\"schema\":{\"type\":\"string\"}},{\"name\":\"days\",\"in\":\"query\",\"description\":\"天数\",\"required\":false,\"example\":\"5\",\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"description\":\"\",\"content\":{\"application/json\":{\"schema\":{\"type\":\"object\",\"properties\":{\"results\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"location\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"country\":{\"type\":\"string\"},\"path\":{\"type\":\"string\"},\"timezone\":{\"type\":\"string\"},\"timezone_offset\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"country\",\"path\",\"timezone\",\"timezone_offset\"]},\"daily\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"date\":{\"description\":\"日期（该城市的本地时间）\",\"type\":\"string\"},\"text_day\":{\"description\":\"白天天气现象文字\",\"type\":\"string\"},\"code_day\":{\"description\":\"白天天气现象代码\",\"type\":\"string\"},\"text_night\":{\"description\":\"晚间天气现象文字\",\"type\":\"string\"},\"code_night\":{\"description\":\"晚间天气现象代码\",\"type\":\"string\"},\"high\":{\"description\":\"当天最高温度\",\"type\":\"string\"},\"low\":{\"description\":\"当天最低温度\",\"type\":\"string\"},\"precip\":{\"description\":\"降水概率，范围0~1，单位百分比（目前仅支持国内城市）\",\"type\":\"string\"},\"wind_direction\":{\"description\":\"风向文字\",\"type\":\"string\"},\"wind_direction_degree\":{\"description\":\"风向角度，范围0~360\",\"type\":\"string\"},\"wind_speed\":{\"description\":\"风速，单位km/h（当unit=c时）、mph（当unit=f时）\",\"type\":\"string\"},\"wind_scale\":{\"description\":\"风力等级\",\"type\":\"string\"},\"rainfall\":{\"description\":\"降水量，单位mm（目前仅支持国内城市）\",\"type\":\"string\"},\"humidity\":{\"description\":\"相对湿度，0~100，单位为百分比\",\"type\":\"string\"}},\"required\":[\"date\",\"text_day\",\"code_day\",\"text_night\",\"code_night\",\"high\",\"low\",\"precip\",\"wind_direction\",\"wind_direction_degree\",\"wind_speed\",\"wind_scale\",\"rainfall\",\"humidity\"]},\"description\":\"返回指定days天数的结果\"},\"last_update\":{\"description\":\"数据更新时间（该城市的本地时间）\",\"type\":\"string\"}}}}},\"required\":[\"results\"]},\"example\":{\"results\":[{\"location\":{\"id\":\"WX4FBXXFKE4F\",\"name\":\"北京\",\"country\":\"CN\",\"path\":\"北京,北京,中国\",\"timezone\":\"Asia/Shanghai\",\"timezone_offset\":\"+08:00\"},\"daily\":[{\"date\":\"2015-09-20\",\"text_day\":\"多云\",\"code_day\":\"4\",\"text_night\":\"晴\",\"code_night\":\"0\",\"high\":\"26\",\"low\":\"17\",\"precip\":\"0\",\"wind_direction\":\"\",\"wind_direction_degree\":\"255\",\"wind_speed\":\"9.66\",\"wind_scale\":\"\",\"rainfall\":\"0.0\",\"humidity\":\"76\"},{\"date\":\"2015-09-21\",\"text_day\":\"晴\",\"code_day\":\"0\",\"text_night\":\"晴\",\"code_night\":\"0\",\"high\":\"27\",\"low\":\"17\",\"precip\":\"0\",\"wind_direction\":\"\",\"wind_direction_degree\":\"157\",\"wind_speed\":\"17.7\",\"wind_scale\":\"3\",\"rainfall\":\"0.0\",\"humidity\":\"76\"}],\"last_update\":\"2015-09-20T18:00:00+08:00\"}]}}},\"headers\":{}}},\"security\":[]}},\"/v3/life/suggestion.json\":{\"get\":{\"summary\":\"生活指数\",\"operationId\":\"seniverse_life_index\",\"deprecated\":false,\"description\":\"获取指定城市的基本、交通、生活、运动、健康 5 大类共 27 项生活指数，预测至未来5天，仅支持中国城市。\\n免费用户只返回 6 项基本类生活指数，且只有 brief，没有 details。\\n● 基本类：穿衣、紫外线强度、洗车、旅游、感冒、运动\\n● 交通类：交通、路况\\n● 生活类：晾晒、雨伞、空调开启、啤酒、逛街、夜生活、约会\\n● 运动类：晨练、钓鱼、划船、放风筝\\n● 健康类：过敏、美发、化妆、风寒、防晒、空气污染扩散条件、舒适度、心情\",\"tags\":[],\"parameters\":[{\"name\":\"key\",\"in\":\"query\",\"description\":\"你的 API 密钥\",\"required\":true,\"example\":\"\",\"schema\":{\"type\":\"string\"}},{\"name\":\"location\",\"in\":\"query\",\"description\":\"所查询的位置\",\"required\":true,\"example\":\"上海\",\"schema\":{\"type\":\"string\"}},{\"name\":\"language\",\"in\":\"query\",\"description\":\"语言\",\"required\":false,\"example\":\"zh-Hans\",\"schema\":{\"type\":\"string\"}},{\"name\":\"days\",\"in\":\"query\",\"description\":\"天数\",\"required\":false,\"example\":\"5\",\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"description\":\"\",\"content\":{\"application/json\":{\"schema\":{\"type\":\"object\",\"properties\":{\"results\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"location\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"country\":{\"type\":\"string\"},\"path\":{\"type\":\"string\"},\"timezone\":{\"type\":\"string\"},\"timezone_offset\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"country\",\"path\",\"timezone\",\"timezone_offset\"]},\"suggestion\":{\"type\":\"object\",\"properties\":{\"ac\":{\"type\":\"object\",\"properties\":{\"brief\":{\"description\":\"简要建议\",\"type\":\"string\"},\"details\":{\"description\":\"详细建议\",\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"air_pollution\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"airing\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"allergy\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"beer\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"boating\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"car_washing\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"comfort\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"dressing\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"fishing\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"flu\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"kiteflying\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"makeup\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"mood\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"morning_sport\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"road_condition\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"shopping\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"sport\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"sunscreen\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"traffic\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"umbrella\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]},\"uv\":{\"type\":\"object\",\"properties\":{\"brief\":{\"type\":\"string\"},\"details\":{\"type\":\"string\"}},\"required\":[\"brief\",\"details\"]}},\"required\":[\"ac\",\"air_pollution\",\"airing\",\"allergy\",\"beer\",\"boating\",\"car_washing\",\"comfort\",\"dressing\",\"fishing\",\"flu\",\"kiteflying\",\"makeup\",\"mood\",\"morning_sport\",\"road_condition\",\"shopping\",\"sport\",\"sunscreen\",\"traffic\",\"umbrella\",\"uv\"]},\"last_update\":{\"type\":\"string\"}}}}},\"required\":[\"results\"]},\"example\":{\"results\":[{\"location\":{\"id\":\"WTW3SJ5ZBJUY\",\"name\":\"上海\",\"country\":\"CN\",\"path\":\"上海,上海,中国\",\"timezone\":\"Asia/Shanghai\",\"timezone_offset\":\"+08:00\"},\"suggestion\":{\"ac\":{\"brief\":\"较少开启\",\"details\":\"您将感到很舒适，一般不需要开启空调。\"},\"air_pollution\":{\"brief\":\"较差\",\"details\":\"气象条件较不利于空气污染物稀释、扩散和清除，请适当减少室外活动时间。\"},\"airing\":{\"brief\":\"不太适宜\",\"details\":\"天气阴沉，不利于水分的迅速蒸发，不太适宜晾晒。若需要晾晒，请尽量选择通风的地点。\"},\"allergy\":{\"brief\":\"极不易发\",\"details\":\"天气条件极不易诱发过敏，可放心外出，享受生活。\"},\"beer\":{\"brief\":\"较不适宜\",\"details\":\"您将会感到有些凉意，建议饮用常温啤酒，并少量饮用为好。\"},\"boating\":{\"brief\":\"较适宜\",\"details\":\"白天较适宜划船，但天气阴沉，气温稍低，请注意加衣，小心着凉。\"},\"car_washing\":{\"brief\":\"不宜\",\"details\":\"不宜洗车，未来24小时内有雨，如果在此期间洗车，雨水和路上的泥水可能会再次弄脏您的爱车。\"},\"chill\":{\"brief\":\"凉\",\"details\":\"感觉有点凉，室外活动注意适当增减衣物。\"},\"comfort\":{\"brief\":\"较舒适\",\"details\":\"白天天气阴沉，会感到有点儿凉，但大部分人完全可以接受。\"},\"dating\":{\"brief\":\"较适宜\",\"details\":\"虽然天空有些阴沉，但情侣们可以放心外出，不用担心天气来调皮捣乱而影响了兴致。\"},\"dressing\":{\"brief\":\"较冷\",\"details\":\"建议着厚外套加毛衣等服装。年老体弱者宜着大衣、呢外套加羊毛衫。\"},\"fishing\":{\"brief\":\"较适宜\",\"details\":\"较适合垂钓，但天气稍凉，会对垂钓产生一定的影响。\"},\"flu\":{\"brief\":\"较易发\",\"details\":\"天气较凉，较易发生感冒，请适当增加衣服。体质较弱的朋友尤其应该注意防护。\"},\"hair_dressing\":{\"brief\":\"一般\",\"details\":\"注意防晒，洗发不宜太勤，建议选用保湿防晒型洗发护发品。出门请戴上遮阳帽或打遮阳伞。\"},\"kiteflying\":{\"brief\":\"不宜\",\"details\":\"天气不好，不适宜放风筝。\"},\"makeup\":{\"brief\":\"保湿\",\"details\":\"皮肤易缺水，用润唇膏后再抹口红，用保湿型霜类化妆品。\"},\"mood\":{\"brief\":\"较差\",\"details\":\"天气阴沉，会感觉莫名的压抑，情绪低落，此时将所有的悲喜都静静地沉到心底，在喧嚣的尘世里，感受片刻恬淡的宁静。\"},\"morning_sport\":{\"brief\":\"不宜\",\"details\":\"阴天，早晨天气寒冷，请尽量避免户外晨练，若坚持室外晨练请注意保暖防冻，建议年老体弱人群适当减少晨练时间。\"},\"night_life\":{\"brief\":\"较不适宜\",\"details\":\"有降水，会给您的出行带来很大的不便，建议就近或最好在室内进行夜生活。\"},\"road_condition\":{\"brief\":\"干燥\",\"details\":\"阴天，路面比较干燥，路况较好。\"},\"shopping\":{\"brief\":\"适宜\",\"details\":\"阴天，在这种天气里去逛街，省去了涂防晒霜，打遮阳伞的麻烦，既可放松身心，又会有很多意外收获。\"},\"sport\":{\"brief\":\"较适宜\",\"details\":\"阴天，较适宜进行各种户内外运动。\"},\"sunscreen\":{\"brief\":\"弱\",\"details\":\"属弱紫外辐射天气，长期在户外，建议涂擦SPF在8-12之间的防晒护肤品。\"},\"traffic\":{\"brief\":\"良好\",\"details\":\"阴天，路面干燥，交通气象条件良好，车辆可以正常行驶。\"},\"travel\":{\"brief\":\"适宜\",\"details\":\"天气较好，温度适宜，总体来说还是好天气哦，这样的天气适宜旅游，您可以尽情地享受大自然的风光。\"},\"umbrella\":{\"brief\":\"不带伞\",\"details\":\"阴天，但降水概率很低，因此您在出门的时候无须带雨伞。\"},\"uv\":{\"brief\":\"最弱\",\"details\":\"属弱紫外线辐射天气，无需特别防护。若长期在户外，建议涂擦SPF在8-12之间的防晒护肤品。\"}},\"last_update\":\"2015-11-28T14:10:48+08:00\"}]}}},\"headers\":{}}},\"security\":[]}},\"/v3/location/search.json\":{\"get\":{\"summary\":\"城市搜索\",\"operationId\":\"seniverse_city_search\",\"deprecated\":false,\"description\":\"根据城市ID、中文、英文、拼音、IP、经纬度搜索匹配的城市。\\n请求地址示例\\n● 用城市ID搜索 https://api.seniverse.com/v3/location/search.json?key=your_api_key&q=WX4FBXXFKE4F\\n● 用城市中文搜索 https://api.seniverse.com/v3/location/search.json?key=your_api_key&q=北京\\n● 用城市英文搜索 https://api.seniverse.com/v3/location/search.json?key=your_api_key&q=beijing\\n● 用城市拼音缩写搜索 https://api.seniverse.com/v3/location/search.json?key=your_api_key&q=bj\\n● 用IP地址搜索 https://api.seniverse.com/v3/location/search.json?key=your_api_key&q=220.181.111.86\\n● 用经纬度搜索 https://api.seniverse.com/v3/location/search.json?key=your_api_key&q=39.93:116.40\\n● 用省市名称限定搜索 https://api.seniverse.com/v3/location/search.json?key=your_api_key&q=辽宁朝阳\\n● 搜索所有中英文名称中包含“san”的城市，返回第2页的10个结果 https://api.seniverse.com/v3/location/search.json?key=your_api_key&q=san&limit=10&offset=10\",\"tags\":[],\"parameters\":[{\"name\":\"key\",\"in\":\"query\",\"description\":\"你的API密钥\",\"required\":true,\"example\":\"\",\"schema\":{\"type\":\"string\"}},{\"name\":\"q\",\"in\":\"query\",\"description\":\"所查询的位置\",\"required\":true,\"example\":[\"北京\"],\"schema\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}},{\"name\":\"limit\",\"in\":\"query\",\"description\":\"分页每页最多记录数\",\"required\":false,\"example\":\"10\",\"schema\":{\"type\":\"string\"}},{\"name\":\"offset\",\"in\":\"query\",\"description\":\"跳过的记录数 (可选) 配合limit参数实现分页\",\"required\":false,\"example\":\"0\",\"schema\":{\"type\":\"string\"}}],\"responses\":{\"200\":{\"description\":\"\",\"content\":{\"application/json\":{\"schema\":{\"type\":\"object\",\"properties\":{\"results\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"country\":{\"type\":\"string\"},\"path\":{\"type\":\"string\"},\"timezone\":{\"type\":\"string\"},\"timezone_offset\":{\"type\":\"string\"}},\"required\":[\"id\",\"name\",\"country\",\"path\",\"timezone\",\"timezone_offset\"]}}},\"required\":[\"results\"]},\"example\":{\"results\":[{\"id\":\"WXMSKZT4B3TT\",\"name\":\"朝阳\",\"country\":\"CN\",\"path\":\"朝阳,朝阳,辽宁,中国\",\"timezone\":\"Asia/Shanghai\",\"timezone_offset\":\"+08:00\"},{\"id\":\"UZVXBZYXCZUZ\",\"name\":\"朝阳县\",\"country\":\"CN\",\"path\":\"朝阳县,朝阳,辽宁,中国\",\"timezone\":\"Asia/Shanghai\",\"timezone_offset\":\"+08:00\"}]}}},\"headers\":{}}},\"security\":[]}}},\"components\":{\"schemas\":{},\"securitySchemes\":{}},\"servers\":[{\"url\":\"https://api.seniverse.com\",\"description\":\"心知天气url\"}]}"
    tools:
      - name: "seniverse_current_weather"
        description: "获取指定城市的天气实况。"
        input_schema:
          type: object
          properties:
            - field: "key"
              type: "string"
              description: "你的 API 密钥"
            - field: "location"
              type: "string"
              description: "所查询的位置"
            - field: "language"
              type: "string"
              description: "语言"
            - field: "unit"
              type: "string"
              description: "单位"
      - name: "seniverse_day_to_day_weather"
        description: "获取指定城市未来最多 3天每天的白天和夜间预报天气。"
        input_schema:
          type: object
          properties:
            - field: "key"
              type: "string"
              description: "你的 API 密钥"
            - field: "location"
              type: "string"
              description: "所查询的位置"
            - field: "language"
              type: "string"
              description: "语言"
            - field: "unit"
              type: "string"
              description: "单位"
            - field: "start"
              type: "string"
              description: "起始时间"
            - field: "days"
              type: "string"
              description: "天数"
          required:
            - "key"
            - "location"
      - name: "seniverse_life_index"
        description: "获取指定城市的基本、交通、生活、运动、健康 5 大类共 27 项生活指数，预测至未来5天，仅支持中国城市。"
        input_schema:
          type: object
          properties:
            - field: "key"
              type: "string"
              description: "你的 API 密钥"
            - field: "location"
              type: "string"
              description: "所查询的位置"
            - field: "language"
              type: "string"
              description: "语言"
            - field: "days"
              type: "string"
              description: "天数"
          required:
            - "key"
            - "location"
      - name: "seniverse_city_search"
        description: "根据城市ID、中文、英文、拼音、IP、经纬度搜索匹配的城市。"
        input_schema:
          type: object
          properties:
            - field: "key"
              type: "string"
              description: "你的API密钥"
            - field: "q"
              type: "array"
              description: "所查询的位置"
            - field: "limit"
              type: "string"
              description: "分页每页最多记录数"
            - field: "offset"
              type: "string"
              description: "跳过的记录数 (可选) 配合limit参数实现分页"
          required:
            - "key"
            - "q"
  - tool_square_id: "yuanjingtexttoimage12b"
    name: "元景-文生图-12B"
    desc: "元景-文生图-12B文生图大模型基于扩散模型机制训练，支持中英双语输入，能够根据输入内容生成符合描述的图像内容，并增加意图去除和提示词润色。"
    avatar_path: "yuanjingtexttoimage12b/logo.png"
    detail: " 元景-文生图-12B基于扩散模型机制自研，能够根据输入的文本生成语义接近的图像，支持中英双语输入，在通用文生图能力基础上增加了意图去除和提示词润色。如，提示词为“画一个乌龟”，则提取并润色出“一个乌龟在沙滩上爬行”后生成图片。可前往 https://maas.ai-yuanjing.com/ 申请API Key"
    tags: "元景-1.0,文生图"
    need_api_key_input: true
    type: "API Key"
    auth_type: "Custom"
    custom_header_name: "key"
    api_key: ""
    schema: "{\"openapi\":\"3.0.1\",\"info\":{\"title\":\"默认模块\",\"description\":\"\",\"version\":\"1.0.0\"},\"tags\":[],\"paths\":{\"/openapi/metaview_t2i_intention_removal\":{\"post\":{\"summary\":\"文生图\",\"operationId\":\"yuanjing_text2img_12b\",\"deprecated\":false,\"description\":\"\",\"tags\":[],\"parameters\":[{\"name\":\"Authorization\",\"in\":\"header\",\"description\":\"\",\"required\":true,\"example\":\"\",\"schema\":{\"type\":\"string\"}}],\"requestBody\":{\"content\":{\"multipart/form-data\":{\"schema\":{\"type\":\"object\",\"properties\":{\"prompt\":{\"example\":\"飞翔在天空的猪猪\",\"type\":\"string\"},\"advanced_opt\":{\"example\":\"{\\\"height\\\": 512, \\\"width\\\": 512, \\\"num_images_per_prompt\\\": 1, \\\"style\\\": \\\"漫画\\\"}\",\"type\":\"string\"},\"response_format\":{\"example\":\"url\",\"type\":\"string\"}},\"required\":[\"prompt\",\"advanced_opt\",\"response_format\"]}}}},\"responses\":{\"200\":{\"description\":\"\",\"content\":{\"application/json\":{\"schema\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"integer\"},\"message\":{\"type\":\"string\"},\"result\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"usage\":{\"type\":\"object\",\"properties\":{\"total_patches\":{\"type\":\"integer\"}},\"required\":[\"total_patches\"]}},\"required\":[\"code\",\"message\",\"result\",\"usage\"]},\"example\":{\"code\":0,\"message\":\"success\",\"result\":[\"http://obs-nmhhht6.cucloud.cn/yuanjing-t2i-oss/mllm/yuanjingt2i/2025-09-22/06af3d38-0c94-4fa2-a4a2-a39ff377255b.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=64E9E75D768A4995830417A3CCC543EA3056/20250922/cn-langfang-2/s3/aws4_request&X-Amz-Date=20250922T014812Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a6042115d4c79728fd628f5ef5566d61c89b842f170496bd69f576a54fd11d37\"],\"usage\":{\"total_patches\":1}}}},\"headers\":{}}},\"security\":[]}}},\"components\":{\"schemas\":{},\"securitySchemes\":{}},\"servers\":[{\"url\":\"https://maas-api.ai-yuanjing.com\",\"description\":\"maas\"}],\"security\":[]}"
    tools:
      - name: "yuanjing_text2img_12b"
        description: ""
        input_schema:
          type: object
          properties:
            - field: "prompt"
              type: "string"
              description: "提示词"
            - field: "advanced_opt"
              type: "string"
              description: "高级选项参数，为JSON格式字符串，包含生成图像的高度、宽度、数量、负提示词和风格等参数"
            - field: "response_format"
              type: "string"
              description: "url or b64_json, 默认b64_json"
            - field: "report_url"
              type: "string"
              description: "参考 http://192.168.2.109:4999/web/#/611659092/216556697，默认https://test.ai-yuanjing.com/bffservice/v1/inference/report"
          required:
            - "prompt"
  - tool_square_id: "qwenimage20b"
    name: "Qwen-Image-20B"
    desc: "Qwen-Image文生图大模型，通义出品，参数量20B，支持中英文图像生成，拥有出色的文字渲染能力。"
    avatar_path: "qwenimage20b/logo.png"
    detail: "Qwen-Image文生图大模型，通义出品，参数量20B，支持中英文图像生成，拥有出色的文字渲染能力。可前往 https://maas.ai-yuanjing.com/ 申请API Key"
    tags: "Qwen-Image,文生图,8K"
    need_api_key_input: true
    type: "API Key"
    auth_type: "Custom"
    custom_header_name: "key"
    api_key: ""
    schema: "{\"openapi\":\"3.0.1\",\"info\":{\"title\":\"默认模块\",\"description\":\"\",\"version\":\"1.0.0\"},\"tags\":[],\"paths\":{\"/openapi/v1/qwen_image/t2i\":{\"post\":{\"summary\":\"文生图Qwen-Image-20B\",\"operationId\":\"qwen_text2img_20b\",\"deprecated\":false,\"description\":\"\",\"tags\":[],\"parameters\":[{\"name\":\"Authorization\",\"in\":\"header\",\"description\":\"\",\"required\":true,\"example\":\"\",\"schema\":{\"type\":\"string\"}},{\"name\":\"Content-Type\",\"in\":\"header\",\"description\":\"\",\"required\":true,\"example\":\"application/json\",\"schema\":{\"type\":\"string\"}}],\"requestBody\":{\"content\":{\"application/json\":{\"schema\":{\"type\":\"object\",\"properties\":{\"model\":{\"type\":\"string\"},\"prompt\":{\"type\":\"string\"},\"n\":{\"type\":\"integer\"},\"size\":{\"type\":\"string\"},\"response_format\":{\"type\":\"string\"}},\"required\":[\"model\",\"prompt\",\"n\",\"size\",\"response_format\"]},\"example\":{\"model\":\"qwen-image-20b\",\"prompt\":\"一只可爱的卡通猫咪坐在沙发上\",\"n\":1,\"size\":\"1328x1328\",\"response_format\":\"url\"}}}},\"responses\":{\"200\":{\"description\":\"\",\"content\":{\"application/json\":{\"schema\":{\"type\":\"object\",\"properties\":{\"code\":{\"type\":\"integer\"},\"message\":{\"type\":\"string\"},\"created\":{\"type\":\"integer\"},\"data\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"url\":{\"type\":\"string\"}}}},\"usage\":{\"type\":\"object\",\"properties\":{\"total_patches\":{\"type\":\"integer\"}},\"required\":[\"total_patches\"]}},\"required\":[\"code\",\"message\",\"created\",\"data\",\"usage\"]},\"example\":{\"code\":1003,\"message\":\"local variable 'new_width' referenced before assignment\",\"created\":1758765300,\"data\":[{\"url\":\"http://obs-nmhhht6.cucloud.cn/yuanjing-t2i-oss/mllm/yuanjingt2i/2025-09-25/8492c102-6c98-4167-8e45-a935d5fd4426.jpeg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=64E9E75D768A4995830417A3CCC543EA3056/20250925/cn-langfang-2/s3/aws4_request&X-Amz-Date=20250925T015514Z&X-Amz-Expires=86400&X-Amz-SignedHeaders=host&X-Amz-Signature=4c0136d1c85ae6153bb3dbe74c2284f5d9f1605fc631f5e51b4d5a6680c62307\"}],\"usage\":{\"total_patches\":0}}}},\"headers\":{}}},\"security\":[]}}},\"components\":{\"schemas\":{},\"securitySchemes\":{}},\"servers\":[{\"url\":\"https://maas-api.ai-yuanjing.com\",\"description\":\"maas\"}],\"security\":[]}"
    tools:
      - name: "qwen_text2img_20b"
        description: ""
        input_schema:
          type: object
          properties:
            - field: "model"
              type: "string"
              description: "模型ID"
            - field: "prompt"
              type: "string"
              description: "提示词"
            - field: "report_url"
              type: "string"
              description: "参考，http://192.168.2.109:4999/web/#/611659092/216556697"
            - field: "n"
              type: "Integer"
              description: "生成图片张数,最大为2,超过2自动被处理为2"
            - field: "size"
              type: "string"
              description: "生成图片的分辨率，格式为 {width}x{height}。由于模型适用范围有限，输入尺寸会根据长宽比自动调整为模型最佳输出分辨率"
            - field: "response_format"
              type: "string"
              description: "返回格式，b64_json 或者url. 不合法响应格式默认处理为b64_json"
          required:
            - "prompt"